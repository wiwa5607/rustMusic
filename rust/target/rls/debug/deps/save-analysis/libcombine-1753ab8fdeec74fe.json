{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1","program":"/home/willw/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","combine","/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"default\"","--cfg","feature=\"std\"","-C","metadata=1753ab8fdeec74fe","-C","extra-filename=-1753ab8fdeec74fe","--out-dir","/home/willw/pop-os/home/willwalker/OneDrive/Projects/rustMusicSelector/rust/target/rls/debug/deps","-L","dependency=/home/willw/pop-os/home/willwalker/OneDrive/Projects/rustMusicSelector/rust/target/rls/debug/deps","--extern","ascii=/home/willw/pop-os/home/willwalker/OneDrive/Projects/rustMusicSelector/rust/target/rls/debug/deps/libascii-7d0c68605eaa6773.rmeta","--extern","byteorder=/home/willw/pop-os/home/willwalker/OneDrive/Projects/rustMusicSelector/rust/target/rls/debug/deps/libbyteorder-c6accca92c235593.rmeta","--extern","either=/home/willw/pop-os/home/willwalker/OneDrive/Projects/rustMusicSelector/rust/target/rls/debug/deps/libeither-0f9e490d6c3bee96.rmeta","--extern","memchr=/home/willw/pop-os/home/willwalker/OneDrive/Projects/rustMusicSelector/rust/target/rls/debug/deps/libmemchr-e92aeda17707962c.rmeta","--extern","unreachable=/home/willw/pop-os/home/willwalker/OneDrive/Projects/rustMusicSelector/rust/target/rls/debug/deps/libunreachable-ee1fbde797e2862b.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/willw/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/willw/pop-os/home/willwalker/OneDrive/Projects/rustMusicSelector/rust/target/rls/debug/deps/libcombine-1753ab8fdeec74fe.rmeta"},"prelude":{"crate_id":{"name":"combine","disambiguator":[10225720280857300819,17376384076724380549]},"crate_root":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src","external_crates":[{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[7603043973503281951,6245179856538753269]}},{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[13741360846946026623,2672266499591153283]}},{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[4729845745352067521,14981637654352572000]}},{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[9324331421111590993,11905740212167270908]}},{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[11392341838745785002,13287300438441731562]}},{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[8694337109875809164,2250367951223185901]}},{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[10935849247287619708,10935329660555626336]}},{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[5583458701817410803,1770096645244614441]}},{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[4926505318506753650,8786990194761766393]}},{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[15262570485262297613,5690312430589388023]}},{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[16900335184017598038,9051488994794742296]}},{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/lib.rs","num":12,"id":{"name":"addr2line","disambiguator":[528960645316233979,8037674519295179684]}},{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/lib.rs","num":13,"id":{"name":"gimli","disambiguator":[4483237274112351560,17959943558012528736]}},{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/lib.rs","num":14,"id":{"name":"object","disambiguator":[384772052184402859,1578385820564656749]}},{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/lib.rs","num":15,"id":{"name":"miniz_oxide","disambiguator":[12301751291607961788,16569514459755551136]}},{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/lib.rs","num":16,"id":{"name":"adler","disambiguator":[4223616801544016660,17489963460572122123]}},{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/lib.rs","num":17,"id":{"name":"panic_unwind","disambiguator":[3882963855561891520,1067502799155491607]}},{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/lib.rs","num":18,"id":{"name":"byteorder","disambiguator":[12994219168775003801,14337614320895729626]}},{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/lib.rs","num":19,"id":{"name":"either","disambiguator":[15787974235253296283,11030488620840596063]}},{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/lib.rs","num":20,"id":{"name":"memchr","disambiguator":[885066415724099356,7791939903210829231]}},{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/lib.rs","num":21,"id":{"name":"unreachable","disambiguator":[18304761770569149148,18215073073874547819]}},{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/lib.rs","num":22,"id":{"name":"void","disambiguator":[5410887355027986457,331508784480218361]}},{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/byte.rs","num":23,"id":{"name":"ascii","disambiguator":[18342212247176079515,15023454503403939537]}}],"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/lib.rs","byte_start":0,"byte_end":41152,"line_start":1,"line_end":1202,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":250},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/lib.rs","byte_start":8265,"byte_end":8279,"line_start":197,"line_end":197,"column_start":17,"column_end":31},"alias_span":null,"name":"ConsumedResult","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":139},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/lib.rs","byte_start":8281,"byte_end":8291,"line_start":197,"line_end":197,"column_start":33,"column_end":43},"alias_span":null,"name":"ParseError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":107},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/lib.rs","byte_start":8293,"byte_end":8304,"line_start":197,"line_end":197,"column_start":45,"column_end":56},"alias_span":null,"name":"ParseResult","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2157},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/lib.rs","byte_start":8338,"byte_end":8344,"line_start":199,"line_end":199,"column_start":17,"column_end":23},"alias_span":null,"name":"Parser","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":633},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/lib.rs","byte_start":8378,"byte_end":8388,"line_start":201,"line_end":201,"column_start":18,"column_end":28},"alias_span":null,"name":"Positioned","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":661},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/lib.rs","byte_start":8390,"byte_end":8401,"line_start":201,"line_end":201,"column_start":30,"column_end":41},"alias_span":null,"name":"RangeStream","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":653},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/lib.rs","byte_start":8403,"byte_end":8418,"line_start":201,"line_end":201,"column_start":43,"column_end":58},"alias_span":null,"name":"RangeStreamOnce","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":648},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/lib.rs","byte_start":8420,"byte_end":8426,"line_start":201,"line_end":201,"column_start":60,"column_end":66},"alias_span":null,"name":"Stream","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":637},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/lib.rs","byte_start":8428,"byte_end":8438,"line_start":201,"line_end":201,"column_start":68,"column_end":78},"alias_span":null,"name":"StreamOnce","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1555},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/lib.rs","byte_start":8533,"byte_end":8536,"line_start":206,"line_end":206,"column_start":5,"column_end":8},"alias_span":null,"name":"any","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1186},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/lib.rs","byte_start":8538,"byte_end":8545,"line_start":206,"line_end":206,"column_start":10,"column_end":17},"alias_span":null,"name":"attempt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2120},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/lib.rs","byte_start":8547,"byte_end":8554,"line_start":206,"line_end":206,"column_start":19,"column_end":26},"alias_span":null,"name":"between","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2007},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/lib.rs","byte_start":8556,"byte_end":8563,"line_start":206,"line_end":206,"column_start":28,"column_end":35},"alias_span":null,"name":"chainl1","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2019},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/lib.rs","byte_start":8565,"byte_end":8572,"line_start":206,"line_end":206,"column_start":37,"column_end":44},"alias_span":null,"name":"chainr1","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":6744},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/lib.rs","byte_start":8574,"byte_end":8579,"line_start":206,"line_end":206,"column_start":46,"column_end":51},"alias_span":null,"name":"count","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1853},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/lib.rs","byte_start":8581,"byte_end":8594,"line_start":206,"line_end":206,"column_start":53,"column_end":66},"alias_span":null,"name":"count_min_max","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1530},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/lib.rs","byte_start":8596,"byte_end":8606,"line_start":206,"line_end":206,"column_start":68,"column_end":78},"alias_span":null,"name":"env_parser","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1669},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/lib.rs","byte_start":8608,"byte_end":8611,"line_start":206,"line_end":206,"column_start":80,"column_end":83},"alias_span":null,"name":"eof","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1196},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/lib.rs","byte_start":8613,"byte_end":8623,"line_start":206,"line_end":206,"column_start":85,"column_end":95},"alias_span":null,"name":"look_ahead","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1908},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/lib.rs","byte_start":8629,"byte_end":8633,"line_start":207,"line_end":207,"column_start":5,"column_end":9},"alias_span":null,"name":"many","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1921},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/lib.rs","byte_start":8635,"byte_end":8640,"line_start":207,"line_end":207,"column_start":11,"column_end":16},"alias_span":null,"name":"many1","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1649},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/lib.rs","byte_start":8642,"byte_end":8649,"line_start":207,"line_end":207,"column_start":18,"column_end":25},"alias_span":null,"name":"none_of","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1170},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/lib.rs","byte_start":8651,"byte_end":8666,"line_start":207,"line_end":207,"column_start":27,"column_end":42},"alias_span":null,"name":"not_followed_by","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1637},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/lib.rs","byte_start":8668,"byte_end":8674,"line_start":207,"line_end":207,"column_start":44,"column_end":50},"alias_span":null,"name":"one_of","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1135},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/lib.rs","byte_start":8676,"byte_end":8684,"line_start":207,"line_end":207,"column_start":52,"column_end":60},"alias_span":null,"name":"optional","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1498},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/lib.rs","byte_start":8686,"byte_end":8692,"line_start":207,"line_end":207,"column_start":62,"column_end":68},"alias_span":null,"name":"parser","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1625},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/lib.rs","byte_start":8694,"byte_end":8702,"line_start":207,"line_end":207,"column_start":70,"column_end":78},"alias_span":null,"name":"position","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1569},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/lib.rs","byte_start":8704,"byte_end":8711,"line_start":207,"line_end":207,"column_start":80,"column_end":87},"alias_span":null,"name":"satisfy","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1580},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/lib.rs","byte_start":8717,"byte_end":8728,"line_start":208,"line_end":208,"column_start":5,"column_end":16},"alias_span":null,"name":"satisfy_map","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1945},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/lib.rs","byte_start":8730,"byte_end":8736,"line_start":208,"line_end":208,"column_start":18,"column_end":24},"alias_span":null,"name":"sep_by","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1961},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/lib.rs","byte_start":8738,"byte_end":8745,"line_start":208,"line_end":208,"column_start":26,"column_end":33},"alias_span":null,"name":"sep_by1","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1976},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/lib.rs","byte_start":8747,"byte_end":8757,"line_start":208,"line_end":208,"column_start":35,"column_end":45},"alias_span":null,"name":"sep_end_by","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1993},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/lib.rs","byte_start":8759,"byte_end":8770,"line_start":208,"line_end":208,"column_start":47,"column_end":58},"alias_span":null,"name":"sep_end_by1","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":6773},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/lib.rs","byte_start":8772,"byte_end":8782,"line_start":208,"line_end":208,"column_start":60,"column_end":70},"alias_span":null,"name":"skip_count","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":6815},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/lib.rs","byte_start":8784,"byte_end":8802,"line_start":208,"line_end":208,"column_start":72,"column_end":90},"alias_span":null,"name":"skip_count_min_max","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1930},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/lib.rs","byte_start":8808,"byte_end":8817,"line_start":209,"line_end":209,"column_start":5,"column_end":14},"alias_span":null,"name":"skip_many","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1932},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/lib.rs","byte_start":8819,"byte_end":8829,"line_start":209,"line_end":209,"column_start":16,"column_end":26},"alias_span":null,"name":"skip_many1","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1592},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/lib.rs","byte_start":8831,"byte_end":8836,"line_start":209,"line_end":209,"column_start":28,"column_end":33},"alias_span":null,"name":"token","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1603},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/lib.rs","byte_start":8838,"byte_end":8844,"line_start":209,"line_end":209,"column_start":35,"column_end":41},"alias_span":null,"name":"tokens","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1184},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/lib.rs","byte_start":8846,"byte_end":8849,"line_start":209,"line_end":209,"column_start":43,"column_end":46},"alias_span":null,"name":"try","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1442},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/lib.rs","byte_start":8851,"byte_end":8861,"line_start":209,"line_end":209,"column_start":48,"column_end":58},"alias_span":null,"name":"unexpected","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1445},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/lib.rs","byte_start":8863,"byte_end":8877,"line_start":209,"line_end":209,"column_start":60,"column_end":74},"alias_span":null,"name":"unexpected_any","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1659},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/lib.rs","byte_start":8879,"byte_end":8884,"line_start":209,"line_end":209,"column_start":76,"column_end":81},"alias_span":null,"name":"value","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1112},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/lib.rs","byte_start":8928,"byte_end":8934,"line_start":212,"line_end":212,"column_start":25,"column_end":31},"alias_span":null,"name":"choice","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":6466},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/lib.rs","byte_start":8979,"byte_end":8987,"line_start":214,"line_end":214,"column_start":29,"column_end":37},"alias_span":null,"name":"from_str","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1615},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/lib.rs","byte_start":9026,"byte_end":9033,"line_start":216,"line_end":216,"column_start":23,"column_end":30},"alias_span":null,"name":"tokens2","value":"","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/lib.rs","byte_start":9093,"byte_end":9094,"line_start":219,"line_end":219,"column_start":33,"column_end":34},"alias_span":null,"name":"*","value":"marker, fmt, borrow, cfg, str, mem","parent":{"krate":0,"index":62}},{"kind":"Use","ref_id":{"krate":0,"index":312},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/lib.rs","byte_start":27089,"byte_end":27093,"line_start":757,"line_end":757,"column_start":17,"column_end":21},"alias_span":null,"name":"easy","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1592},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/item.rs","byte_start":278108,"byte_end":278113,"line_start":12,"line_end":12,"column_start":15,"column_end":20},"alias_span":null,"name":"item","value":"","parent":{"krate":0,"index":1534}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/lib.rs","byte_start":9093,"byte_end":9094,"line_start":219,"line_end":219,"column_start":33,"column_end":34},"alias_span":null,"name":"*","value":"Optional, optional","parent":{"krate":0,"index":2240}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/lib.rs","byte_start":9093,"byte_end":9094,"line_start":219,"line_end":219,"column_start":33,"column_end":34},"alias_span":null,"name":"*","value":"ignore, not_followed_by, and_then, attempt, flat_map, AndThen, Map, Ignore, map, FlatMap, look_ahead, try","parent":{"krate":0,"index":2240}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/lib.rs","byte_start":9093,"byte_end":9094,"line_start":219,"line_end":219,"column_start":33,"column_end":34},"alias_span":null,"name":"*","value":"Message, unexpected_any, expected, message, unexpected, Expected","parent":{"krate":0,"index":2240}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/lib.rs","byte_start":9093,"byte_end":9094,"line_start":219,"line_end":219,"column_start":33,"column_end":34},"alias_span":null,"name":"*","value":"parser, FnParser, env_parser","parent":{"krate":0,"index":2240}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/lib.rs","byte_start":9093,"byte_end":9094,"line_start":219,"line_end":219,"column_start":33,"column_end":34},"alias_span":null,"name":"*","value":"satisfy, token, Token, satisfy_map, one_of, tokens, eof, position, any, value, none_of, Satisfy, Value","parent":{"krate":0,"index":2240}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/lib.rs","byte_start":9093,"byte_end":9094,"line_start":219,"line_end":219,"column_start":33,"column_end":34},"alias_span":null,"name":"*","value":"skip_count_min_max, sep_end_by, many1, count, skip_many1, skip_count, sep_by1, Iter, many, chainr1, skip_many, sep_end_by1, sep_by, SkipMany, count_min_max, chainl1","parent":{"krate":0,"index":2240}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/lib.rs","byte_start":9093,"byte_end":9094,"line_start":219,"line_end":219,"column_start":33,"column_end":34},"alias_span":null,"name":"*","value":"then_partial, between, Then, then, ThenPartial","parent":{"krate":0,"index":2240}},{"kind":"Use","ref_id":{"krate":0,"index":981},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/lib.rs","byte_start":27966,"byte_end":27970,"line_start":792,"line_end":792,"column_start":17,"column_end":21},"alias_span":null,"name":"char","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":885},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/lib.rs","byte_start":28090,"byte_end":28094,"line_start":796,"line_end":796,"column_start":17,"column_end":21},"alias_span":null,"name":"byte","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1671},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/lib.rs","byte_start":28225,"byte_end":28230,"line_start":803,"line_end":803,"column_start":17,"column_end":22},"alias_span":null,"name":"range","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/lib.rs","byte_start":0,"byte_end":41152,"line_start":1,"line_end":1202,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":7},{"krate":0,"index":8},{"krate":0,"index":9},{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":13},{"krate":0,"index":14},{"krate":0,"index":15},{"krate":0,"index":16},{"krate":0,"index":17},{"krate":0,"index":18},{"krate":0,"index":19},{"krate":0,"index":20},{"krate":0,"index":21},{"krate":0,"index":22},{"krate":0,"index":23},{"krate":0,"index":24},{"krate":0,"index":25},{"krate":0,"index":26},{"krate":0,"index":27},{"krate":0,"index":28},{"krate":0,"index":29},{"krate":0,"index":30},{"krate":0,"index":31},{"krate":0,"index":32},{"krate":0,"index":33},{"krate":0,"index":34},{"krate":0,"index":35},{"krate":0,"index":36},{"krate":0,"index":37},{"krate":0,"index":38},{"krate":0,"index":39},{"krate":0,"index":40},{"krate":0,"index":41},{"krate":0,"index":42},{"krate":0,"index":43},{"krate":0,"index":44},{"krate":0,"index":45},{"krate":0,"index":46},{"krate":0,"index":47},{"krate":0,"index":48},{"krate":0,"index":49},{"krate":0,"index":50},{"krate":0,"index":51},{"krate":0,"index":57},{"krate":0,"index":58},{"krate":0,"index":59},{"krate":0,"index":60},{"krate":0,"index":62},{"krate":0,"index":64},{"krate":0,"index":65},{"krate":0,"index":267},{"krate":0,"index":841},{"krate":0,"index":2240},{"krate":0,"index":2248},{"krate":0,"index":2249},{"krate":0,"index":2250},{"krate":0,"index":7900},{"krate":0,"index":7916},{"krate":0,"index":7910},{"krate":0,"index":7906},{"krate":0,"index":7907},{"krate":0,"index":7904},{"krate":0,"index":7903}],"decl_id":null,"docs":" This crate contains parser combinators, roughly based on the Haskell libraries\n [parsec](http://hackage.haskell.org/package/parsec) and\n [attoparsec](https://hackage.haskell.org/package/attoparsec).","sig":null,"attributes":[{"value":"/ This crate contains parser combinators, roughly based on the Haskell libraries","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/lib.rs","byte_start":0,"byte_end":82,"line_start":1,"line_end":1,"column_start":1,"column_end":83}},{"value":"/ [parsec](http://hackage.haskell.org/package/parsec) and","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/lib.rs","byte_start":83,"byte_end":142,"line_start":2,"line_end":2,"column_start":1,"column_end":60}},{"value":"/ [attoparsec](https://hackage.haskell.org/package/attoparsec).","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/lib.rs","byte_start":143,"byte_end":208,"line_start":3,"line_end":3,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/lib.rs","byte_start":209,"byte_end":212,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ A parser in this library can be described as a function which takes some input and if it","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/lib.rs","byte_start":213,"byte_end":305,"line_start":5,"line_end":5,"column_start":1,"column_end":93}},{"value":"/ is successful, returns a value together with the remaining input.","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/lib.rs","byte_start":306,"byte_end":375,"line_start":6,"line_end":6,"column_start":1,"column_end":70}},{"value":"/ A parser combinator is a function which takes one or more parsers and returns a new parser.","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/lib.rs","byte_start":376,"byte_end":471,"line_start":7,"line_end":7,"column_start":1,"column_end":96}},{"value":"/ For instance the [`many`] parser can be used to convert a parser for single digits into one that","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/lib.rs","byte_start":472,"byte_end":572,"line_start":8,"line_end":8,"column_start":1,"column_end":101}},{"value":"/ parses multiple digits. By modeling parsers in this way it becomes easy to compose complex","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/lib.rs","byte_start":573,"byte_end":667,"line_start":9,"line_end":9,"column_start":1,"column_end":95}},{"value":"/ parsers in an almost declarative way.","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/lib.rs","byte_start":668,"byte_end":709,"line_start":10,"line_end":10,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/lib.rs","byte_start":710,"byte_end":713,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ # Overview","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/lib.rs","byte_start":714,"byte_end":728,"line_start":12,"line_end":12,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/lib.rs","byte_start":729,"byte_end":732,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ `combine` limits itself to creating [LL(1) parsers](https://en.wikipedia.org/wiki/LL_parser)","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/lib.rs","byte_start":733,"byte_end":829,"line_start":14,"line_end":14,"column_start":1,"column_end":97}},{"value":"/ (it is possible to opt-in to LL(k) parsing using the [`attempt`] combinator) which makes the","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/lib.rs","byte_start":830,"byte_end":926,"line_start":15,"line_end":15,"column_start":1,"column_end":97}},{"value":"/ parsers easy to reason about in both function and performance while sacrificing","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/lib.rs","byte_start":927,"byte_end":1010,"line_start":16,"line_end":16,"column_start":1,"column_end":84}},{"value":"/ some generality. In addition to you being able to reason better about the parsers you","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/lib.rs","byte_start":1011,"byte_end":1100,"line_start":17,"line_end":17,"column_start":1,"column_end":90}},{"value":"/ construct `combine` the library also takes the knowledge of being an LL parser and uses it to","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/lib.rs","byte_start":1101,"byte_end":1198,"line_start":18,"line_end":18,"column_start":1,"column_end":98}},{"value":"/ automatically construct good error messages.","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/lib.rs","byte_start":1199,"byte_end":1247,"line_start":19,"line_end":19,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/lib.rs","byte_start":1248,"byte_end":1251,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/lib.rs","byte_start":1252,"byte_end":1263,"line_start":21,"line_end":21,"column_start":1,"column_end":12}},{"value":"/ extern crate combine;","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/lib.rs","byte_start":1264,"byte_end":1289,"line_start":22,"line_end":22,"column_start":1,"column_end":26}},{"value":"/ use combine::Parser;","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/lib.rs","byte_start":1290,"byte_end":1314,"line_start":23,"line_end":23,"column_start":1,"column_end":25}},{"value":"/ use combine::stream::state::State;","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/lib.rs","byte_start":1315,"byte_end":1353,"line_start":24,"line_end":24,"column_start":1,"column_end":39}},{"value":"/ use combine::parser::char::{digit, letter};","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/lib.rs","byte_start":1354,"byte_end":1401,"line_start":25,"line_end":25,"column_start":1,"column_end":48}},{"value":"/ const MSG: &'static str = r#\"Parse error at line: 1, column: 1","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/lib.rs","byte_start":1402,"byte_end":1468,"line_start":26,"line_end":26,"column_start":1,"column_end":67}},{"value":"/ Unexpected `|`","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/lib.rs","byte_start":1469,"byte_end":1487,"line_start":27,"line_end":27,"column_start":1,"column_end":19}},{"value":"/ Expected `digit` or `letter`","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/lib.rs","byte_start":1488,"byte_end":1520,"line_start":28,"line_end":28,"column_start":1,"column_end":33}},{"value":"/ \"#;","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/lib.rs","byte_start":1521,"byte_end":1528,"line_start":29,"line_end":29,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/lib.rs","byte_start":1529,"byte_end":1532,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ fn main() {","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/lib.rs","byte_start":1533,"byte_end":1548,"line_start":31,"line_end":31,"column_start":1,"column_end":16}},{"value":"/     // Wrapping a `&str` with `State` provides automatic line and column tracking. If `State`","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/lib.rs","byte_start":1549,"byte_end":1646,"line_start":32,"line_end":32,"column_start":1,"column_end":98}},{"value":"/     // was not used the positions would instead only be pointers into the `&str`","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/lib.rs","byte_start":1647,"byte_end":1731,"line_start":33,"line_end":33,"column_start":1,"column_end":85}},{"value":"/     if let Err(err) = digit().or(letter()).easy_parse(State::new(\"|\")) {","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/lib.rs","byte_start":1732,"byte_end":1808,"line_start":34,"line_end":34,"column_start":1,"column_end":77}},{"value":"/         assert_eq!(MSG, format!(\"{}\", err));","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/lib.rs","byte_start":1809,"byte_end":1857,"line_start":35,"line_end":35,"column_start":1,"column_end":49}},{"value":"/     }","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/lib.rs","byte_start":1858,"byte_end":1867,"line_start":36,"line_end":36,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/lib.rs","byte_start":1868,"byte_end":1873,"line_start":37,"line_end":37,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/lib.rs","byte_start":1874,"byte_end":1881,"line_start":38,"line_end":38,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/lib.rs","byte_start":1882,"byte_end":1885,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ This library is currently split into a few core modules:","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/lib.rs","byte_start":1886,"byte_end":1946,"line_start":40,"line_end":40,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/lib.rs","byte_start":1947,"byte_end":1950,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ * [`parser`][mod parser] is where you will find all the parsers that combine provides. It contains the core","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/lib.rs","byte_start":1951,"byte_end":2062,"line_start":42,"line_end":42,"column_start":1,"column_end":112}},{"value":"/ [`Parser`] trait as well as several submodules such as `sequence` or `choice` which each","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/lib.rs","byte_start":2063,"byte_end":2155,"line_start":43,"line_end":43,"column_start":1,"column_end":93}},{"value":"/ contain several parsers aimed at a specific niche.","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/lib.rs","byte_start":2156,"byte_end":2210,"line_start":44,"line_end":44,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/lib.rs","byte_start":2211,"byte_end":2214,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ * [`stream`] contains the second most important trait next to [`Parser`]. Streams represent the","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/lib.rs","byte_start":2215,"byte_end":2314,"line_start":46,"line_end":46,"column_start":1,"column_end":100}},{"value":"/ data source which is being parsed such as `&[u8]`, `&str` or iterators.","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/lib.rs","byte_start":2315,"byte_end":2390,"line_start":47,"line_end":47,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/lib.rs","byte_start":2391,"byte_end":2394,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ * [`easy`] contains combine's default \"easy\" error and stream handling. If you use the","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/lib.rs","byte_start":2395,"byte_end":2485,"line_start":49,"line_end":49,"column_start":1,"column_end":91}},{"value":"/ `easy_parse` method to start your parsing these are the types that are used.","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/lib.rs","byte_start":2486,"byte_end":2566,"line_start":50,"line_end":50,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/lib.rs","byte_start":2567,"byte_end":2570,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ * [`error`] contains the types and traits that make up combine's error handling. Unless you","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/lib.rs","byte_start":2571,"byte_end":2666,"line_start":52,"line_end":52,"column_start":1,"column_end":96}},{"value":"/ need to customize the errors your parsers return you should not need to use this module much.","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/lib.rs","byte_start":2667,"byte_end":2764,"line_start":53,"line_end":53,"column_start":1,"column_end":98}},{"value":"/","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/lib.rs","byte_start":2765,"byte_end":2768,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/lib.rs","byte_start":2769,"byte_end":2772,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/lib.rs","byte_start":2773,"byte_end":2787,"line_start":56,"line_end":56,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/lib.rs","byte_start":2788,"byte_end":2791,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/lib.rs","byte_start":2792,"byte_end":2799,"line_start":58,"line_end":58,"column_start":1,"column_end":8}},{"value":"/ extern crate combine;","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/lib.rs","byte_start":2800,"byte_end":2825,"line_start":59,"line_end":59,"column_start":1,"column_end":26}},{"value":"/ use combine::parser::char::{spaces, digit, char};","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/lib.rs","byte_start":2826,"byte_end":2879,"line_start":60,"line_end":60,"column_start":1,"column_end":54}},{"value":"/ use combine::{many1, sep_by, Parser};","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/lib.rs","byte_start":2880,"byte_end":2921,"line_start":61,"line_end":61,"column_start":1,"column_end":42}},{"value":"/ use combine::stream::easy;","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/lib.rs","byte_start":2922,"byte_end":2952,"line_start":62,"line_end":62,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/lib.rs","byte_start":2953,"byte_end":2956,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ fn main() {","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/lib.rs","byte_start":2957,"byte_end":2972,"line_start":64,"line_end":64,"column_start":1,"column_end":16}},{"value":"/     //Parse spaces first and use the with method to only keep the result of the next parser","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/lib.rs","byte_start":2973,"byte_end":3068,"line_start":65,"line_end":65,"column_start":1,"column_end":96}},{"value":"/     let integer = spaces()","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/lib.rs","byte_start":3069,"byte_end":3099,"line_start":66,"line_end":66,"column_start":1,"column_end":31}},{"value":"/         //parse a string of digits into an i32","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/lib.rs","byte_start":3100,"byte_end":3150,"line_start":67,"line_end":67,"column_start":1,"column_end":51}},{"value":"/         .with(many1(digit()).map(|string: String| string.parse::<i32>().unwrap()));","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/lib.rs","byte_start":3151,"byte_end":3238,"line_start":68,"line_end":68,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/lib.rs","byte_start":3239,"byte_end":3242,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/     //Parse integers separated by commas, skipping whitespace","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/lib.rs","byte_start":3243,"byte_end":3308,"line_start":70,"line_end":70,"column_start":1,"column_end":66}},{"value":"/     let mut integer_list = sep_by(integer, spaces().skip(char(',')));","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/lib.rs","byte_start":3309,"byte_end":3382,"line_start":71,"line_end":71,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/lib.rs","byte_start":3383,"byte_end":3386,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/     //Call parse with the input to execute the parser","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/lib.rs","byte_start":3387,"byte_end":3444,"line_start":73,"line_end":73,"column_start":1,"column_end":58}},{"value":"/     let input = \"1234, 45,78\";","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/lib.rs","byte_start":3445,"byte_end":3479,"line_start":74,"line_end":74,"column_start":1,"column_end":35}},{"value":"/     let result: Result<(Vec<i32>, &str), easy::ParseError<&str>> =","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/lib.rs","byte_start":3480,"byte_end":3550,"line_start":75,"line_end":75,"column_start":1,"column_end":71}},{"value":"/         integer_list.easy_parse(input);","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/lib.rs","byte_start":3551,"byte_end":3594,"line_start":76,"line_end":76,"column_start":1,"column_end":44}},{"value":"/     match result {","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/lib.rs","byte_start":3595,"byte_end":3617,"line_start":77,"line_end":77,"column_start":1,"column_end":23}},{"value":"/         Ok((value, _remaining_input)) => println!(\"{:?}\", value),","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/lib.rs","byte_start":3618,"byte_end":3687,"line_start":78,"line_end":78,"column_start":1,"column_end":70}},{"value":"/         Err(err) => println!(\"{}\", err)","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/lib.rs","byte_start":3688,"byte_end":3731,"line_start":79,"line_end":79,"column_start":1,"column_end":44}},{"value":"/     }","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/lib.rs","byte_start":3732,"byte_end":3741,"line_start":80,"line_end":80,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/lib.rs","byte_start":3742,"byte_end":3747,"line_start":81,"line_end":81,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/lib.rs","byte_start":3748,"byte_end":3755,"line_start":82,"line_end":82,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/lib.rs","byte_start":3756,"byte_end":3759,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/ If we need a parser that is mutually recursive or if we want to export a reusable parser the","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/lib.rs","byte_start":3760,"byte_end":3856,"line_start":84,"line_end":84,"column_start":1,"column_end":97}},{"value":"/ [`parser!`] macro can be used. In effect it makes it possible to return a parser without naming","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/lib.rs","byte_start":3857,"byte_end":3956,"line_start":85,"line_end":85,"column_start":1,"column_end":100}},{"value":"/ the type of the parser (which can be very large due to combine's trait based approach). While","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/lib.rs","byte_start":3957,"byte_end":4054,"line_start":86,"line_end":86,"column_start":1,"column_end":98}},{"value":"/ it is possible to do avoid naming the type without the macro those solutions require either allocation","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/lib.rs","byte_start":4055,"byte_end":4161,"line_start":87,"line_end":87,"column_start":1,"column_end":107}},{"value":"/ (`Box<Parser<Input = I, Output = O, PartialState = P>>`) or nightly rust via `impl Trait`. The","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/lib.rs","byte_start":4162,"byte_end":4260,"line_start":88,"line_end":88,"column_start":1,"column_end":99}},{"value":"/ macro thus threads the needle and makes it possible to have non-allocating, anonymous parsers","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/lib.rs","byte_start":4261,"byte_end":4358,"line_start":89,"line_end":89,"column_start":1,"column_end":98}},{"value":"/ on stable rust.","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/lib.rs","byte_start":4359,"byte_end":4378,"line_start":90,"line_end":90,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/lib.rs","byte_start":4379,"byte_end":4382,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/lib.rs","byte_start":4383,"byte_end":4390,"line_start":92,"line_end":92,"column_start":1,"column_end":8}},{"value":"/ #[macro_use]","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/lib.rs","byte_start":4391,"byte_end":4407,"line_start":93,"line_end":93,"column_start":1,"column_end":17}},{"value":"/ extern crate combine;","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/lib.rs","byte_start":4408,"byte_end":4433,"line_start":94,"line_end":94,"column_start":1,"column_end":26}},{"value":"/ use combine::parser::char::{char, letter, spaces};","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/lib.rs","byte_start":4434,"byte_end":4488,"line_start":95,"line_end":95,"column_start":1,"column_end":55}},{"value":"/ use combine::{between, choice, many1, parser, sep_by, Parser};","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/lib.rs","byte_start":4489,"byte_end":4555,"line_start":96,"line_end":96,"column_start":1,"column_end":67}},{"value":"/ use combine::error::{ParseError, ParseResult};","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/lib.rs","byte_start":4556,"byte_end":4606,"line_start":97,"line_end":97,"column_start":1,"column_end":51}},{"value":"/ use combine::stream::{Stream, Positioned};","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/lib.rs","byte_start":4607,"byte_end":4653,"line_start":98,"line_end":98,"column_start":1,"column_end":47}},{"value":"/ use combine::stream::state::State;","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/lib.rs","byte_start":4654,"byte_end":4692,"line_start":99,"line_end":99,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/lib.rs","byte_start":4693,"byte_end":4696,"line_start":100,"line_end":100,"column_start":1,"column_end":4}},{"value":"/ #[derive(Debug, PartialEq)]","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/lib.rs","byte_start":4697,"byte_end":4728,"line_start":101,"line_end":101,"column_start":1,"column_end":32}},{"value":"/ pub enum Expr {","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/lib.rs","byte_start":4729,"byte_end":4748,"line_start":102,"line_end":102,"column_start":1,"column_end":20}},{"value":"/     Id(String),","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/lib.rs","byte_start":4749,"byte_end":4768,"line_start":103,"line_end":103,"column_start":1,"column_end":20}},{"value":"/     Array(Vec<Expr>),","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/lib.rs","byte_start":4769,"byte_end":4794,"line_start":104,"line_end":104,"column_start":1,"column_end":26}},{"value":"/     Pair(Box<Expr>, Box<Expr>)","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/lib.rs","byte_start":4795,"byte_end":4829,"line_start":105,"line_end":105,"column_start":1,"column_end":35}},{"value":"/ }","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/lib.rs","byte_start":4830,"byte_end":4835,"line_start":106,"line_end":106,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/lib.rs","byte_start":4836,"byte_end":4839,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"/ // `impl Parser` can be used to create reusable parsers with zero overhead","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/lib.rs","byte_start":4840,"byte_end":4918,"line_start":108,"line_end":108,"column_start":1,"column_end":79}},{"value":"/ fn expr_<I>() -> impl Parser<Input = I, Output = Expr>","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/lib.rs","byte_start":4919,"byte_end":4977,"line_start":109,"line_end":109,"column_start":1,"column_end":59}},{"value":"/     where I: Stream<Item = char>,","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/lib.rs","byte_start":4978,"byte_end":5015,"line_start":110,"line_end":110,"column_start":1,"column_end":38}},{"value":"/           // Necessary due to rust-lang/rust#24159","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/lib.rs","byte_start":5016,"byte_end":5070,"line_start":111,"line_end":111,"column_start":1,"column_end":55}},{"value":"/           I::Error: ParseError<I::Item, I::Range, I::Position>,","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/lib.rs","byte_start":5071,"byte_end":5138,"line_start":112,"line_end":112,"column_start":1,"column_end":68}},{"value":"/ {","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/lib.rs","byte_start":5139,"byte_end":5144,"line_start":113,"line_end":113,"column_start":1,"column_end":6}},{"value":"/     let word = many1(letter());","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/lib.rs","byte_start":5145,"byte_end":5180,"line_start":114,"line_end":114,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/lib.rs","byte_start":5181,"byte_end":5184,"line_start":115,"line_end":115,"column_start":1,"column_end":4}},{"value":"/     // A parser which skips past whitespace.","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/lib.rs","byte_start":5185,"byte_end":5233,"line_start":116,"line_end":116,"column_start":1,"column_end":49}},{"value":"/     // Since we aren't interested in knowing that our expression parser","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/lib.rs","byte_start":5234,"byte_end":5309,"line_start":117,"line_end":117,"column_start":1,"column_end":76}},{"value":"/     // could have accepted additional whitespace between the tokens we also silence the error.","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/lib.rs","byte_start":5310,"byte_end":5408,"line_start":118,"line_end":118,"column_start":1,"column_end":99}},{"value":"/     let skip_spaces = || spaces().silent();","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/lib.rs","byte_start":5409,"byte_end":5456,"line_start":119,"line_end":119,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/lib.rs","byte_start":5457,"byte_end":5460,"line_start":120,"line_end":120,"column_start":1,"column_end":4}},{"value":"/     //Creates a parser which parses a char and skips any trailing whitespace","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/lib.rs","byte_start":5461,"byte_end":5541,"line_start":121,"line_end":121,"column_start":1,"column_end":81}},{"value":"/     let lex_char = |c| char(c).skip(skip_spaces());","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/lib.rs","byte_start":5542,"byte_end":5597,"line_start":122,"line_end":122,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/lib.rs","byte_start":5598,"byte_end":5601,"line_start":123,"line_end":123,"column_start":1,"column_end":4}},{"value":"/     let comma_list = sep_by(expr(), lex_char(','));","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/lib.rs","byte_start":5602,"byte_end":5657,"line_start":124,"line_end":124,"column_start":1,"column_end":56}},{"value":"/     let array = between(lex_char('['), lex_char(']'), comma_list);","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/lib.rs","byte_start":5658,"byte_end":5728,"line_start":125,"line_end":125,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/lib.rs","byte_start":5729,"byte_end":5732,"line_start":126,"line_end":126,"column_start":1,"column_end":4}},{"value":"/     //We can use tuples to run several parsers in sequence","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/lib.rs","byte_start":5733,"byte_end":5795,"line_start":127,"line_end":127,"column_start":1,"column_end":63}},{"value":"/     //The resulting type is a tuple containing each parsers output","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/lib.rs","byte_start":5796,"byte_end":5866,"line_start":128,"line_end":128,"column_start":1,"column_end":71}},{"value":"/     let pair = (lex_char('('),","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/lib.rs","byte_start":5867,"byte_end":5901,"line_start":129,"line_end":129,"column_start":1,"column_end":35}},{"value":"/                 expr(),","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/lib.rs","byte_start":5902,"byte_end":5929,"line_start":130,"line_end":130,"column_start":1,"column_end":28}},{"value":"/                 lex_char(','),","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/lib.rs","byte_start":5930,"byte_end":5964,"line_start":131,"line_end":131,"column_start":1,"column_end":35}},{"value":"/                 expr(),","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/lib.rs","byte_start":5965,"byte_end":5992,"line_start":132,"line_end":132,"column_start":1,"column_end":28}},{"value":"/                 lex_char(')'))","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/lib.rs","byte_start":5993,"byte_end":6027,"line_start":133,"line_end":133,"column_start":1,"column_end":35}},{"value":"/                    .map(|t| Expr::Pair(Box::new(t.1), Box::new(t.3)));","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/lib.rs","byte_start":6028,"byte_end":6102,"line_start":134,"line_end":134,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/lib.rs","byte_start":6103,"byte_end":6106,"line_start":135,"line_end":135,"column_start":1,"column_end":4}},{"value":"/     choice((","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/lib.rs","byte_start":6107,"byte_end":6123,"line_start":136,"line_end":136,"column_start":1,"column_end":17}},{"value":"/         word.map(Expr::Id),","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/lib.rs","byte_start":6124,"byte_end":6155,"line_start":137,"line_end":137,"column_start":1,"column_end":32}},{"value":"/         array.map(Expr::Array),","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/lib.rs","byte_start":6156,"byte_end":6191,"line_start":138,"line_end":138,"column_start":1,"column_end":36}},{"value":"/         pair,","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/lib.rs","byte_start":6192,"byte_end":6209,"line_start":139,"line_end":139,"column_start":1,"column_end":18}},{"value":"/     ))","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/lib.rs","byte_start":6210,"byte_end":6220,"line_start":140,"line_end":140,"column_start":1,"column_end":11}},{"value":"/         .skip(skip_spaces())","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/lib.rs","byte_start":6221,"byte_end":6253,"line_start":141,"line_end":141,"column_start":1,"column_end":33}},{"value":"/ }","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/lib.rs","byte_start":6254,"byte_end":6259,"line_start":142,"line_end":142,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/lib.rs","byte_start":6260,"byte_end":6263,"line_start":143,"line_end":143,"column_start":1,"column_end":4}},{"value":"/ // As this expression parser needs to be able to call itself recursively `impl Parser` can't","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/lib.rs","byte_start":6264,"byte_end":6360,"line_start":144,"line_end":144,"column_start":1,"column_end":97}},{"value":"/ // be used on its own as that would cause an infinitely large type. We can avoid this by using","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/lib.rs","byte_start":6361,"byte_end":6459,"line_start":145,"line_end":145,"column_start":1,"column_end":99}},{"value":"/ // the `parser!` macro which erases the inner type and the size of that type entirely which","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/lib.rs","byte_start":6460,"byte_end":6555,"line_start":146,"line_end":146,"column_start":1,"column_end":96}},{"value":"/ // lets it be used recursively.","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/lib.rs","byte_start":6556,"byte_end":6591,"line_start":147,"line_end":147,"column_start":1,"column_end":36}},{"value":"/ //","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/lib.rs","byte_start":6592,"byte_end":6598,"line_start":148,"line_end":148,"column_start":1,"column_end":7}},{"value":"/ // (This macro does not use `impl Trait` which means it can be used in rust < 1.26 as well to","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/lib.rs","byte_start":6599,"byte_end":6696,"line_start":149,"line_end":149,"column_start":1,"column_end":98}},{"value":"/ // emulate `impl Parser`)","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/lib.rs","byte_start":6697,"byte_end":6726,"line_start":150,"line_end":150,"column_start":1,"column_end":30}},{"value":"/ parser!{","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/lib.rs","byte_start":6727,"byte_end":6739,"line_start":151,"line_end":151,"column_start":1,"column_end":13}},{"value":"/     fn expr[I]()(I) -> Expr","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/lib.rs","byte_start":6740,"byte_end":6771,"line_start":152,"line_end":152,"column_start":1,"column_end":32}},{"value":"/     where [I: Stream<Item = char>]","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/lib.rs","byte_start":6772,"byte_end":6810,"line_start":153,"line_end":153,"column_start":1,"column_end":39}},{"value":"/     {","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/lib.rs","byte_start":6811,"byte_end":6820,"line_start":154,"line_end":154,"column_start":1,"column_end":10}},{"value":"/         expr_()","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/lib.rs","byte_start":6821,"byte_end":6840,"line_start":155,"line_end":155,"column_start":1,"column_end":20}},{"value":"/     }","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/lib.rs","byte_start":6841,"byte_end":6850,"line_start":156,"line_end":156,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/lib.rs","byte_start":6851,"byte_end":6856,"line_start":157,"line_end":157,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/lib.rs","byte_start":6857,"byte_end":6860,"line_start":158,"line_end":158,"column_start":1,"column_end":4}},{"value":"/ fn main() {","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/lib.rs","byte_start":6861,"byte_end":6876,"line_start":159,"line_end":159,"column_start":1,"column_end":16}},{"value":"/     let result = expr()","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/lib.rs","byte_start":6877,"byte_end":6904,"line_start":160,"line_end":160,"column_start":1,"column_end":28}},{"value":"/         .parse(\"[[], (hello, world), [rust]]\");","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/lib.rs","byte_start":6905,"byte_end":6956,"line_start":161,"line_end":161,"column_start":1,"column_end":52}},{"value":"/     let expr = Expr::Array(vec![","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/lib.rs","byte_start":6957,"byte_end":6993,"line_start":162,"line_end":162,"column_start":1,"column_end":37}},{"value":"/           Expr::Array(Vec::new())","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/lib.rs","byte_start":6994,"byte_end":7031,"line_start":163,"line_end":163,"column_start":1,"column_end":38}},{"value":"/         , Expr::Pair(Box::new(Expr::Id(\"hello\".to_string())),","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/lib.rs","byte_start":7032,"byte_end":7097,"line_start":164,"line_end":164,"column_start":1,"column_end":66}},{"value":"/                      Box::new(Expr::Id(\"world\".to_string())))","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/lib.rs","byte_start":7098,"byte_end":7163,"line_start":165,"line_end":165,"column_start":1,"column_end":66}},{"value":"/         , Expr::Array(vec![Expr::Id(\"rust\".to_string())])","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/lib.rs","byte_start":7164,"byte_end":7225,"line_start":166,"line_end":166,"column_start":1,"column_end":62}},{"value":"/     ]);","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/lib.rs","byte_start":7226,"byte_end":7237,"line_start":167,"line_end":167,"column_start":1,"column_end":12}},{"value":"/     assert_eq!(result, Ok((expr, \"\")));","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/lib.rs","byte_start":7238,"byte_end":7281,"line_start":168,"line_end":168,"column_start":1,"column_end":44}},{"value":"/ }","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/lib.rs","byte_start":7282,"byte_end":7287,"line_start":169,"line_end":169,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/lib.rs","byte_start":7288,"byte_end":7295,"line_start":170,"line_end":170,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/lib.rs","byte_start":7296,"byte_end":7299,"line_start":171,"line_end":171,"column_start":1,"column_end":4}},{"value":"/ [`combinator`]: combinator/index.html","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/lib.rs","byte_start":7300,"byte_end":7341,"line_start":172,"line_end":172,"column_start":1,"column_end":42}},{"value":"/ [mod parser]: parser/index.html","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/lib.rs","byte_start":7342,"byte_end":7377,"line_start":173,"line_end":173,"column_start":1,"column_end":36}},{"value":"/ [`easy`]: easy/index.html","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/lib.rs","byte_start":7378,"byte_end":7407,"line_start":174,"line_end":174,"column_start":1,"column_end":30}},{"value":"/ [`error`]: error/index.html","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/lib.rs","byte_start":7408,"byte_end":7439,"line_start":175,"line_end":175,"column_start":1,"column_end":32}},{"value":"/ [`char`]: parser/char/index.html","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/lib.rs","byte_start":7440,"byte_end":7476,"line_start":176,"line_end":176,"column_start":1,"column_end":37}},{"value":"/ [`byte`]: parser/byte/index.html","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/lib.rs","byte_start":7477,"byte_end":7513,"line_start":177,"line_end":177,"column_start":1,"column_end":37}},{"value":"/ [`range`]: parser/range/index.html","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/lib.rs","byte_start":7514,"byte_end":7552,"line_start":178,"line_end":178,"column_start":1,"column_end":39}},{"value":"/ [`many`]: parser/repeat/fn.many.html","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/lib.rs","byte_start":7553,"byte_end":7593,"line_start":179,"line_end":179,"column_start":1,"column_end":41}},{"value":"/ [`attempt`]: parser/combinator/fn.attempt.html","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/lib.rs","byte_start":7594,"byte_end":7644,"line_start":180,"line_end":180,"column_start":1,"column_end":51}},{"value":"/ [`satisfy`]: parser/item/fn.satisfy.html","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/lib.rs","byte_start":7645,"byte_end":7689,"line_start":181,"line_end":181,"column_start":1,"column_end":45}},{"value":"/ [`or`]: parser/trait.Parser.html#method.or","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/lib.rs","byte_start":7690,"byte_end":7736,"line_start":182,"line_end":182,"column_start":1,"column_end":47}},{"value":"/ [`Stream`]: stream/trait.Stream.html","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/lib.rs","byte_start":7737,"byte_end":7777,"line_start":183,"line_end":183,"column_start":1,"column_end":41}},{"value":"/ [`RangeStream`]: stream/trait.RangeStream.html","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/lib.rs","byte_start":7778,"byte_end":7828,"line_start":184,"line_end":184,"column_start":1,"column_end":51}},{"value":"/ [`Parser`]: parser/trait.Parser.html","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/lib.rs","byte_start":7829,"byte_end":7869,"line_start":185,"line_end":185,"column_start":1,"column_end":41}},{"value":"/ [fn parser]: parser/function/fn.parser.html","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/lib.rs","byte_start":7870,"byte_end":7917,"line_start":186,"line_end":186,"column_start":1,"column_end":48}},{"value":"/ [`parser!`]: macro.parser.html","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/lib.rs","byte_start":7918,"byte_end":7952,"line_start":187,"line_end":187,"column_start":1,"column_end":35}}]},{"kind":"Mod","id":{"krate":0,"index":62},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/lib.rs","byte_start":26923,"byte_end":26926,"line_start":748,"line_end":748,"column_start":9,"column_end":12},"name":"lib","qualname":"::lib","value":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/lib.rs","parent":null,"children":[{"krate":0,"index":63}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":65},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/error.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"error","qualname":"::error","value":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/error.rs","parent":null,"children":[{"krate":0,"index":66},{"krate":0,"index":67},{"krate":0,"index":68},{"krate":0,"index":69},{"krate":0,"index":8016},{"krate":0,"index":70},{"krate":0,"index":2251},{"krate":0,"index":2267},{"krate":0,"index":2263},{"krate":0,"index":72},{"krate":0,"index":75},{"krate":0,"index":79},{"krate":0,"index":2271},{"krate":0,"index":2290},{"krate":0,"index":2284},{"krate":0,"index":2286},{"krate":0,"index":2281},{"krate":0,"index":2279},{"krate":0,"index":82},{"krate":0,"index":85},{"krate":0,"index":88},{"krate":0,"index":107},{"krate":0,"index":110},{"krate":0,"index":113},{"krate":0,"index":139},{"krate":0,"index":2293},{"krate":0,"index":2304},{"krate":0,"index":2303},{"krate":0,"index":2301},{"krate":0,"index":2298},{"krate":0,"index":2299},{"krate":0,"index":158},{"krate":0,"index":161},{"krate":0,"index":179},{"krate":0,"index":2306},{"krate":0,"index":2319},{"krate":0,"index":2318},{"krate":0,"index":2316},{"krate":0,"index":2313},{"krate":0,"index":2314},{"krate":0,"index":193},{"krate":0,"index":194},{"krate":0,"index":197},{"krate":0,"index":216},{"krate":0,"index":2321},{"krate":0,"index":2336},{"krate":0,"index":2330},{"krate":0,"index":2332},{"krate":0,"index":2327},{"krate":0,"index":2325},{"krate":0,"index":230},{"krate":0,"index":2339},{"krate":0,"index":2369},{"krate":0,"index":2361},{"krate":0,"index":2364},{"krate":0,"index":2357},{"krate":0,"index":2354},{"krate":0,"index":233},{"krate":0,"index":244},{"krate":0,"index":250},{"krate":0,"index":253},{"krate":0,"index":257},{"krate":0,"index":262}],"decl_id":null,"docs":" Error types and traits which define what kind of errors combine parsers may emit\n","sig":null,"attributes":[{"value":"/ Error types and traits which define what kind of errors combine parsers may emit","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/lib.rs","byte_start":27096,"byte_end":27180,"line_start":759,"line_end":759,"column_start":1,"column_end":85}},{"value":"macro_use","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/lib.rs","byte_start":27181,"byte_end":27193,"line_start":760,"line_end":760,"column_start":1,"column_end":13}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2254},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/error.rs","byte_start":43155,"byte_end":43160,"line_start":31,"line_end":31,"column_start":5,"column_end":10},"name":"Token","qualname":"::error::Info::Token","value":"Info::Token(T)","parent":{"krate":0,"index":2251},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2257},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/error.rs","byte_start":43169,"byte_end":43174,"line_start":32,"line_end":32,"column_start":5,"column_end":10},"name":"Range","qualname":"::error::Info::Range","value":"Info::Range(R)","parent":{"krate":0,"index":2251},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2260},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/error.rs","byte_start":43183,"byte_end":43191,"line_start":33,"line_end":33,"column_start":5,"column_end":13},"name":"Borrowed","qualname":"::error::Info::Borrowed","value":"Info::Borrowed(&'static str)","parent":{"krate":0,"index":2251},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2251},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/error.rs","byte_start":43138,"byte_end":43142,"line_start":30,"line_end":30,"column_start":10,"column_end":14},"name":"Info","qualname":"::error::Info","value":"pub enum Info<T, R> { Token(T), Range(R), Borrowed(&'static str), }","parent":null,"children":[{"krate":0,"index":2254},{"krate":0,"index":2257},{"krate":0,"index":2260}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2273},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/error.rs","byte_start":44022,"byte_end":44030,"line_start":62,"line_end":62,"column_start":5,"column_end":13},"name":"Consumed","qualname":"::error::Consumed::Consumed","value":"Consumed::Consumed(T)","parent":{"krate":0,"index":2271},"children":[],"decl_id":null,"docs":" Constructor indicating that the parser has consumed elements\n","sig":null,"attributes":[{"value":"/ Constructor indicating that the parser has consumed elements","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/error.rs","byte_start":43953,"byte_end":44017,"line_start":61,"line_end":61,"column_start":5,"column_end":69}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2276},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/error.rs","byte_start":44115,"byte_end":44120,"line_start":64,"line_end":64,"column_start":5,"column_end":10},"name":"Empty","qualname":"::error::Consumed::Empty","value":"Consumed::Empty(T)","parent":{"krate":0,"index":2271},"children":[],"decl_id":null,"docs":" Constructor indicating that the parser did not consume any elements\n","sig":null,"attributes":[{"value":"/ Constructor indicating that the parser did not consume any elements","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/error.rs","byte_start":44039,"byte_end":44110,"line_start":63,"line_end":63,"column_start":5,"column_end":76}}]},{"kind":"Enum","id":{"krate":0,"index":2271},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/error.rs","byte_start":43935,"byte_end":43943,"line_start":60,"line_end":60,"column_start":10,"column_end":18},"name":"Consumed","qualname":"::error::Consumed","value":"pub enum Consumed<T> {\n\n    /// Constructor indicating that the parser has consumed elements\n    Consumed(T),\n\n    /// Constructor indicating that the parser did not consume any elements\n    Empty(T),\n}","parent":null,"children":[{"krate":0,"index":2273},{"krate":0,"index":2276}],"decl_id":null,"docs":" Enum used to indicate if a parser consumed any items of the stream it was given as an input.","sig":null,"attributes":[{"value":"/ Enum used to indicate if a parser consumed any items of the stream it was given as an input.","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/error.rs","byte_start":43551,"byte_end":43647,"line_start":54,"line_end":54,"column_start":1,"column_end":97}},{"value":"/","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/error.rs","byte_start":43648,"byte_end":43651,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ This is used by parsers such as `or` and `choice` to determine if they should try to parse","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/error.rs","byte_start":43652,"byte_end":43746,"line_start":56,"line_end":56,"column_start":1,"column_end":95}},{"value":"/ with another parser as they will only be able to provide good error reporting if the preceding","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/error.rs","byte_start":43747,"byte_end":43845,"line_start":57,"line_end":57,"column_start":1,"column_end":99}},{"value":"/ parser did not consume any tokens.","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/error.rs","byte_start":43846,"byte_end":43884,"line_start":58,"line_end":58,"column_start":1,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":90},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/error.rs","byte_start":44566,"byte_end":44574,"line_start":85,"line_end":85,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<Consumed<T>>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if `self` is empty.\n","sig":null,"attributes":[{"value":"/ Returns true if `self` is empty.","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/error.rs","byte_start":44518,"byte_end":44554,"line_start":84,"line_end":84,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":91},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/error.rs","byte_start":44764,"byte_end":44774,"line_start":93,"line_end":93,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Consumed<T>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Extracts the contained value.\n","sig":null,"attributes":[{"value":"/ Extracts the contained value.","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/error.rs","byte_start":44719,"byte_end":44752,"line_start":92,"line_end":92,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":92},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/error.rs","byte_start":44949,"byte_end":44962,"line_start":100,"line_end":100,"column_start":12,"column_end":25},"name":"into_consumed","qualname":"<Consumed<T>>::into_consumed","value":"pub fn into_consumed(Self) -> Consumed<T>","parent":null,"children":[],"decl_id":null,"docs":" Converts `self` into the `Consumed` state.\n","sig":null,"attributes":[{"value":"/ Converts `self` into the `Consumed` state.","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/error.rs","byte_start":44891,"byte_end":44937,"line_start":99,"line_end":99,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":93},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/error.rs","byte_start":45098,"byte_end":45108,"line_start":105,"line_end":105,"column_start":12,"column_end":22},"name":"into_empty","qualname":"<Consumed<T>>::into_empty","value":"pub fn into_empty(Self) -> Consumed<T>","parent":null,"children":[],"decl_id":null,"docs":" Converts `self` into the `Empty` state.\n","sig":null,"attributes":[{"value":"/ Converts `self` into the `Empty` state.","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/error.rs","byte_start":45043,"byte_end":45086,"line_start":104,"line_end":104,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":94},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/error.rs","byte_start":45268,"byte_end":45271,"line_start":110,"line_end":110,"column_start":12,"column_end":15},"name":"map","qualname":"<Consumed<T>>::map","value":"pub fn map<F, U>(Self, F) -> Consumed<U> where F: FnOnce(T) -> U","parent":null,"children":[],"decl_id":null,"docs":" Maps over the contained value without changing the consumed state.\n","sig":null,"attributes":[{"value":"/ Maps over the contained value without changing the consumed state.","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/error.rs","byte_start":45186,"byte_end":45256,"line_start":109,"line_end":109,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":97},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/error.rs","byte_start":45517,"byte_end":45522,"line_start":120,"line_end":120,"column_start":12,"column_end":17},"name":"merge","qualname":"<Consumed<T>>::merge","value":"pub fn merge(&Self, Consumed<T>) -> Consumed<T>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":98},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/error.rs","byte_start":47339,"byte_end":47346,"line_start":169,"line_end":169,"column_start":12,"column_end":19},"name":"combine","qualname":"<Consumed<T>>::combine","value":"pub fn combine<F, U, E>(Self, F) -> ParseResult2<U, E> where F: FnOnce(T) ->\nParseResult2<U, E>","parent":null,"children":[],"decl_id":null,"docs":" Combines the `Consumed` flags from `self` and the result of `f`.","sig":null,"attributes":[{"value":"/ Combines the `Consumed` flags from `self` and the result of `f`.","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/error.rs","byte_start":45717,"byte_end":45785,"line_start":127,"line_end":127,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/error.rs","byte_start":45790,"byte_end":45793,"line_start":128,"line_end":128,"column_start":5,"column_end":8}},{"value":"/ ```text","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/error.rs","byte_start":45798,"byte_end":45809,"line_start":129,"line_end":129,"column_start":5,"column_end":16}},{"value":"/ Empty    <> Empty    -> Empty","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/error.rs","byte_start":45814,"byte_end":45847,"line_start":130,"line_end":130,"column_start":5,"column_end":38}},{"value":"/ Consumed <> Empty    -> Consumed","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/error.rs","byte_start":45852,"byte_end":45888,"line_start":131,"line_end":131,"column_start":5,"column_end":41}},{"value":"/ Empty    <> Consumed -> Consumed","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/error.rs","byte_start":45893,"byte_end":45929,"line_start":132,"line_end":132,"column_start":5,"column_end":41}},{"value":"/ Consumed <> Consumed -> Consumed","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/error.rs","byte_start":45934,"byte_end":45970,"line_start":133,"line_end":133,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/error.rs","byte_start":45975,"byte_end":45982,"line_start":134,"line_end":134,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/error.rs","byte_start":45987,"byte_end":45990,"line_start":135,"line_end":135,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/error.rs","byte_start":45995,"byte_end":46002,"line_start":136,"line_end":136,"column_start":5,"column_end":12}},{"value":"/ # extern crate combine as pc;","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/error.rs","byte_start":46007,"byte_end":46040,"line_start":137,"line_end":137,"column_start":5,"column_end":38}},{"value":"/ # use pc::*;","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/error.rs","byte_start":46045,"byte_end":46061,"line_start":138,"line_end":138,"column_start":5,"column_end":21}},{"value":"/ # fn main() {","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/error.rs","byte_start":46066,"byte_end":46083,"line_start":139,"line_end":139,"column_start":5,"column_end":22}},{"value":"/ //Parses a character of string literal and handles the escaped characters \\\\ and \\\" as \\","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/error.rs","byte_start":46088,"byte_end":46180,"line_start":140,"line_end":140,"column_start":5,"column_end":97}},{"value":"/ //and \" respectively","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/error.rs","byte_start":46185,"byte_end":46209,"line_start":141,"line_end":141,"column_start":5,"column_end":29}},{"value":"/ fn char<I>(input: &mut I) -> ParseResult<char, I>","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/error.rs","byte_start":46214,"byte_end":46267,"line_start":142,"line_end":142,"column_start":5,"column_end":58}},{"value":"/     where I: Stream<Item = char>,","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/error.rs","byte_start":46272,"byte_end":46309,"line_start":143,"line_end":143,"column_start":5,"column_end":42}},{"value":"/           I::Error: ParseError<I::Item, I::Range, I::Position>,","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/error.rs","byte_start":46314,"byte_end":46381,"line_start":144,"line_end":144,"column_start":5,"column_end":72}},{"value":"/ {","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/error.rs","byte_start":46386,"byte_end":46391,"line_start":145,"line_end":145,"column_start":5,"column_end":10}},{"value":"/     let (c, consumed) = try!(satisfy(|c| c != '\"').parse_stream(input));","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/error.rs","byte_start":46396,"byte_end":46472,"line_start":146,"line_end":146,"column_start":5,"column_end":81}},{"value":"/     match c {","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/error.rs","byte_start":46477,"byte_end":46494,"line_start":147,"line_end":147,"column_start":5,"column_end":22}},{"value":"/         //Since the `char` parser has already consumed some of the input `combine` is used","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/error.rs","byte_start":46499,"byte_end":46593,"line_start":148,"line_end":148,"column_start":5,"column_end":99}},{"value":"/         //propagate the consumed state to the next part of the parser","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/error.rs","byte_start":46598,"byte_end":46671,"line_start":149,"line_end":149,"column_start":5,"column_end":78}},{"value":"/         '\\\\' => consumed.combine(|_| {","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/error.rs","byte_start":46676,"byte_end":46718,"line_start":150,"line_end":150,"column_start":5,"column_end":47}},{"value":"/             satisfy(|c| c == '\"' || c == '\\\\')","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/error.rs","byte_start":46723,"byte_end":46773,"line_start":151,"line_end":151,"column_start":5,"column_end":55}},{"value":"/                 .map(|c| {","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/error.rs","byte_start":46778,"byte_end":46808,"line_start":152,"line_end":152,"column_start":5,"column_end":35}},{"value":"/                     match c {","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/error.rs","byte_start":46813,"byte_end":46846,"line_start":153,"line_end":153,"column_start":5,"column_end":38}},{"value":"/                         '\"' => '\"',","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/error.rs","byte_start":46851,"byte_end":46890,"line_start":154,"line_end":154,"column_start":5,"column_end":44}},{"value":"/                         '\\\\' => '\\\\',","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/error.rs","byte_start":46895,"byte_end":46936,"line_start":155,"line_end":155,"column_start":5,"column_end":46}},{"value":"/                         c => c","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/error.rs","byte_start":46941,"byte_end":46975,"line_start":156,"line_end":156,"column_start":5,"column_end":39}},{"value":"/                     }","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/error.rs","byte_start":46980,"byte_end":47005,"line_start":157,"line_end":157,"column_start":5,"column_end":30}},{"value":"/                 })","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/error.rs","byte_start":47010,"byte_end":47032,"line_start":158,"line_end":158,"column_start":5,"column_end":27}},{"value":"/                 .parse_stream(input)","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/error.rs","byte_start":47037,"byte_end":47077,"line_start":159,"line_end":159,"column_start":5,"column_end":45}},{"value":"/             }),","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/error.rs","byte_start":47082,"byte_end":47101,"line_start":160,"line_end":160,"column_start":5,"column_end":24}},{"value":"/         _ => Ok((c, consumed))","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/error.rs","byte_start":47106,"byte_end":47140,"line_start":161,"line_end":161,"column_start":5,"column_end":39}},{"value":"/     }","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/error.rs","byte_start":47145,"byte_end":47154,"line_start":162,"line_end":162,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/error.rs","byte_start":47159,"byte_end":47164,"line_start":163,"line_end":163,"column_start":5,"column_end":10}},{"value":"/ let result = many(parser(char))","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/error.rs","byte_start":47169,"byte_end":47204,"line_start":164,"line_end":164,"column_start":5,"column_end":40}},{"value":"/     .easy_parse(r#\"abc\\\"\\\\\"#);","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/error.rs","byte_start":47209,"byte_end":47243,"line_start":165,"line_end":165,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(result, Ok((r#\"abc\"\\\"#.to_string(), \"\")));","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/error.rs","byte_start":47248,"byte_end":47305,"line_start":166,"line_end":166,"column_start":5,"column_end":62}},{"value":"/ }","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/error.rs","byte_start":47310,"byte_end":47315,"line_start":167,"line_end":167,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/error.rs","byte_start":47320,"byte_end":47327,"line_start":168,"line_end":168,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":102},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/error.rs","byte_start":47787,"byte_end":47803,"line_start":182,"line_end":182,"column_start":12,"column_end":28},"name":"combine_consumed","qualname":"<Consumed<T>>::combine_consumed","value":"pub fn combine_consumed<F, U, E>(Self, F) -> FastResult<U, E> where\nF: FnOnce(T) -> FastResult<U, E>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":107},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/error.rs","byte_start":48437,"byte_end":48448,"line_start":202,"line_end":202,"column_start":10,"column_end":21},"name":"ParseResult","qualname":"::error::ParseResult","value":"Result<(O, Consumed<()>), Consumed<Tracked<<I as StreamOnce>::Error>>>","parent":null,"children":[],"decl_id":null,"docs":" A type alias over the specific `Result` type used by parsers to indicate whether they were\n successful or not.\n `O` is the type that is output on success.\n `I` is the specific stream type used in the parser.\n","sig":null,"attributes":[{"value":"/ A type alias over the specific `Result` type used by parsers to indicate whether they were","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/error.rs","byte_start":48207,"byte_end":48301,"line_start":198,"line_end":198,"column_start":1,"column_end":95}},{"value":"/ successful or not.","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/error.rs","byte_start":48302,"byte_end":48324,"line_start":199,"line_end":199,"column_start":1,"column_end":23}},{"value":"/ `O` is the type that is output on success.","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/error.rs","byte_start":48325,"byte_end":48371,"line_start":200,"line_end":200,"column_start":1,"column_end":47}},{"value":"/ `I` is the specific stream type used in the parser.","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/error.rs","byte_start":48372,"byte_end":48427,"line_start":201,"line_end":201,"column_start":1,"column_end":56}}]},{"kind":"Type","id":{"krate":0,"index":110},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/error.rs","byte_start":48538,"byte_end":48550,"line_start":203,"line_end":203,"column_start":10,"column_end":22},"name":"ParseResult2","qualname":"::error::ParseResult2","value":"Result<(O, Consumed<()>), Consumed<Tracked<E>>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":113},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/error.rs","byte_start":48823,"byte_end":48834,"line_start":209,"line_end":209,"column_start":11,"column_end":22},"name":"StreamError","qualname":"::error::StreamError","value":"StreamError<Item, Range>: Sized + PartialEq","parent":null,"children":[{"krate":0,"index":116},{"krate":0,"index":117},{"krate":0,"index":118},{"krate":0,"index":120},{"krate":0,"index":121},{"krate":0,"index":122},{"krate":0,"index":123},{"krate":0,"index":124},{"krate":0,"index":126},{"krate":0,"index":127},{"krate":0,"index":128},{"krate":0,"index":129},{"krate":0,"index":130},{"krate":0,"index":132},{"krate":0,"index":133},{"krate":0,"index":134},{"krate":0,"index":136},{"krate":0,"index":137}],"decl_id":null,"docs":" `StreamError` represents a single error returned from a `Stream` or a `Parser`.","sig":null,"attributes":[{"value":"/ `StreamError` represents a single error returned from a `Stream` or a `Parser`.","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/error.rs","byte_start":48609,"byte_end":48692,"line_start":205,"line_end":205,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/error.rs","byte_start":48693,"byte_end":48696,"line_start":206,"line_end":206,"column_start":1,"column_end":4}},{"value":"/ Usually multiple instances of `StreamError` is composed into a `ParseError` to build the final","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/error.rs","byte_start":48697,"byte_end":48795,"line_start":207,"line_end":207,"column_start":1,"column_end":99}},{"value":"/ error value.","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/error.rs","byte_start":48796,"byte_end":48812,"line_start":208,"line_end":208,"column_start":1,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":116},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/error.rs","byte_start":48876,"byte_end":48892,"line_start":210,"line_end":210,"column_start":8,"column_end":24},"name":"unexpected_token","qualname":"::error::StreamError::unexpected_token","value":"pub fn unexpected_token(Item) -> Self","parent":{"krate":0,"index":113},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":117},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/error.rs","byte_start":48922,"byte_end":48938,"line_start":211,"line_end":211,"column_start":8,"column_end":24},"name":"unexpected_range","qualname":"::error::StreamError::unexpected_range","value":"pub fn unexpected_range(Range) -> Self","parent":{"krate":0,"index":113},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":118},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/error.rs","byte_start":48969,"byte_end":48987,"line_start":212,"line_end":212,"column_start":8,"column_end":26},"name":"unexpected_message","qualname":"::error::StreamError::unexpected_message","value":"pub fn unexpected_message<T>(T) -> Self where T: fmt::Display","parent":{"krate":0,"index":113},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":120},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/error.rs","byte_start":49049,"byte_end":49059,"line_start":215,"line_end":215,"column_start":8,"column_end":18},"name":"unexpected","qualname":"::error::StreamError::unexpected","value":"pub fn unexpected(Info<Item, Range>) -> Self","parent":{"krate":0,"index":113},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":121},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/error.rs","byte_start":49322,"byte_end":49347,"line_start":222,"line_end":222,"column_start":8,"column_end":33},"name":"unexpected_static_message","qualname":"::error::StreamError::unexpected_static_message","value":"pub fn unexpected_static_message(&'static str) -> Self","parent":{"krate":0,"index":113},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":122},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/error.rs","byte_start":49429,"byte_end":49443,"line_start":226,"line_end":226,"column_start":8,"column_end":22},"name":"expected_token","qualname":"::error::StreamError::expected_token","value":"pub fn expected_token(Item) -> Self","parent":{"krate":0,"index":113},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":123},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/error.rs","byte_start":49473,"byte_end":49487,"line_start":227,"line_end":227,"column_start":8,"column_end":22},"name":"expected_range","qualname":"::error::StreamError::expected_range","value":"pub fn expected_range(Range) -> Self","parent":{"krate":0,"index":113},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":124},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/error.rs","byte_start":49518,"byte_end":49534,"line_start":228,"line_end":228,"column_start":8,"column_end":24},"name":"expected_message","qualname":"::error::StreamError::expected_message","value":"pub fn expected_message<T>(T) -> Self where T: fmt::Display","parent":{"krate":0,"index":113},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":126},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/error.rs","byte_start":49596,"byte_end":49604,"line_start":231,"line_end":231,"column_start":8,"column_end":16},"name":"expected","qualname":"::error::StreamError::expected","value":"pub fn expected(Info<Item, Range>) -> Self","parent":{"krate":0,"index":113},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":127},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/error.rs","byte_start":49861,"byte_end":49884,"line_start":238,"line_end":238,"column_start":8,"column_end":31},"name":"expected_static_message","qualname":"::error::StreamError::expected_static_message","value":"pub fn expected_static_message(&'static str) -> Self","parent":{"krate":0,"index":113},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":128},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/error.rs","byte_start":49964,"byte_end":49977,"line_start":242,"line_end":242,"column_start":8,"column_end":21},"name":"message_token","qualname":"::error::StreamError::message_token","value":"pub fn message_token(Item) -> Self","parent":{"krate":0,"index":113},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":129},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/error.rs","byte_start":50007,"byte_end":50020,"line_start":243,"line_end":243,"column_start":8,"column_end":21},"name":"message_range","qualname":"::error::StreamError::message_range","value":"pub fn message_range(Range) -> Self","parent":{"krate":0,"index":113},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":130},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/error.rs","byte_start":50051,"byte_end":50066,"line_start":244,"line_end":244,"column_start":8,"column_end":23},"name":"message_message","qualname":"::error::StreamError::message_message","value":"pub fn message_message<T>(T) -> Self where T: fmt::Display","parent":{"krate":0,"index":113},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":132},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/error.rs","byte_start":50128,"byte_end":50150,"line_start":247,"line_end":247,"column_start":8,"column_end":30},"name":"message_static_message","qualname":"::error::StreamError::message_static_message","value":"pub fn message_static_message(&'static str) -> Self","parent":{"krate":0,"index":113},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":133},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/error.rs","byte_start":50228,"byte_end":50235,"line_start":250,"line_end":250,"column_start":8,"column_end":15},"name":"message","qualname":"::error::StreamError::message","value":"pub fn message(Info<Item, Range>) -> Self","parent":{"krate":0,"index":113},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":134},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/error.rs","byte_start":50518,"byte_end":50523,"line_start":259,"line_end":259,"column_start":8,"column_end":13},"name":"other","qualname":"::error::StreamError::other","value":"pub fn other<E>(E) -> Self where E: StdError + Send + Sync + 'static","parent":{"krate":0,"index":113},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/error.rs","byte_start":50487,"byte_end":50510,"line_start":258,"line_end":258,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":136},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/error.rs","byte_start":50653,"byte_end":50665,"line_start":266,"line_end":266,"column_start":8,"column_end":20},"name":"end_of_input","qualname":"::error::StreamError::end_of_input","value":"pub fn end_of_input() -> Self","parent":{"krate":0,"index":113},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":137},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/error.rs","byte_start":51047,"byte_end":51057,"line_start":275,"line_end":275,"column_start":8,"column_end":18},"name":"into_other","qualname":"::error::StreamError::into_other","value":"pub fn into_other<T>(Self) -> T where T: StreamError<Item, Range>","parent":{"krate":0,"index":113},"children":[],"decl_id":null,"docs":" Converts `self` into a different `StreamError` type.","sig":null,"attributes":[{"value":"/ Converts `self` into a different `StreamError` type.","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/error.rs","byte_start":50745,"byte_end":50801,"line_start":270,"line_end":270,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/error.rs","byte_start":50806,"byte_end":50809,"line_start":271,"line_end":271,"column_start":5,"column_end":8}},{"value":"/ This should aim to preserve as much information as possible into the returned `T` value but","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/error.rs","byte_start":50814,"byte_end":50909,"line_start":272,"line_end":272,"column_start":5,"column_end":100}},{"value":"/ if `Self` ignores some information passed to it using one of the constructors that","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/error.rs","byte_start":50914,"byte_end":51000,"line_start":273,"line_end":273,"column_start":5,"column_end":91}},{"value":"/ information is naturally lost.","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/error.rs","byte_start":51005,"byte_end":51039,"line_start":274,"line_end":274,"column_start":5,"column_end":39}}]},{"kind":"Trait","id":{"krate":0,"index":139},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/error.rs","byte_start":51322,"byte_end":51332,"line_start":284,"line_end":284,"column_start":11,"column_end":21},"name":"ParseError","qualname":"::error::ParseError","value":"ParseError<Item, Range, Position>: Sized + PartialEq","parent":null,"children":[{"krate":0,"index":143},{"krate":0,"index":144},{"krate":0,"index":145},{"krate":0,"index":146},{"krate":0,"index":147},{"krate":0,"index":148},{"krate":0,"index":149},{"krate":0,"index":150},{"krate":0,"index":151},{"krate":0,"index":152},{"krate":0,"index":154},{"krate":0,"index":155},{"krate":0,"index":156}],"decl_id":null,"docs":" Trait which defines a combine parse error.","sig":null,"attributes":[{"value":"/ Trait which defines a combine parse error.","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/error.rs","byte_start":51122,"byte_end":51168,"line_start":280,"line_end":280,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/error.rs","byte_start":51169,"byte_end":51172,"line_start":281,"line_end":281,"column_start":1,"column_end":4}},{"value":"/ A parse error is composed of zero or more `StreamError` instances which gets added to it as","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/error.rs","byte_start":51173,"byte_end":51268,"line_start":282,"line_end":282,"column_start":1,"column_end":96}},{"value":"/ errors are encountered during parsing.","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/error.rs","byte_start":51269,"byte_end":51311,"line_start":283,"line_end":283,"column_start":1,"column_end":43}}]},{"kind":"Type","id":{"krate":0,"index":143},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/error.rs","byte_start":51386,"byte_end":51397,"line_start":285,"line_end":285,"column_start":10,"column_end":21},"name":"StreamError","qualname":"::error::ParseError::StreamError","value":"type StreamError: StreamError<Item, Range>;","parent":{"krate":0,"index":139},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":144},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/error.rs","byte_start":51576,"byte_end":51581,"line_start":290,"line_end":290,"column_start":8,"column_end":13},"name":"empty","qualname":"::error::ParseError::empty","value":"pub fn empty(Position) -> Self","parent":{"krate":0,"index":139},"children":[],"decl_id":null,"docs":" Constructs an empty error.","sig":null,"attributes":[{"value":"/ Constructs an empty error.","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/error.rs","byte_start":51430,"byte_end":51460,"line_start":287,"line_end":287,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/error.rs","byte_start":51465,"byte_end":51468,"line_start":288,"line_end":288,"column_start":5,"column_end":8}},{"value":"/ An empty error is expected to be cheap to create as it is frequently created and discarded.","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/error.rs","byte_start":51473,"byte_end":51568,"line_start":289,"line_end":289,"column_start":5,"column_end":100}}]},{"kind":"Method","id":{"krate":0,"index":145},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/error.rs","byte_start":51684,"byte_end":51694,"line_start":293,"line_end":293,"column_start":8,"column_end":18},"name":"from_error","qualname":"::error::ParseError::from_error","value":"pub fn from_error(Position, Self::StreamError) -> Self","parent":{"krate":0,"index":139},"children":[],"decl_id":null,"docs":" Creates a `ParseError` from a single `Self::StreamError`\n","sig":null,"attributes":[{"value":"/ Creates a `ParseError` from a single `Self::StreamError`","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/error.rs","byte_start":51616,"byte_end":51676,"line_start":292,"line_end":292,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":146},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/error.rs","byte_start":51803,"byte_end":51815,"line_start":296,"line_end":296,"column_start":8,"column_end":20},"name":"set_position","qualname":"::error::ParseError::set_position","value":"pub fn set_position(&mut Self, Position)","parent":{"krate":0,"index":139},"children":[],"decl_id":null,"docs":" Sets the position of this `ParseError`\n","sig":null,"attributes":[{"value":"/ Sets the position of this `ParseError`","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/error.rs","byte_start":51753,"byte_end":51795,"line_start":295,"line_end":295,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":147},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/error.rs","byte_start":52117,"byte_end":52122,"line_start":301,"line_end":301,"column_start":8,"column_end":13},"name":"merge","qualname":"::error::ParseError::merge","value":"pub fn merge(Self, Self) -> Self","parent":{"krate":0,"index":139},"children":[],"decl_id":null,"docs":" Merges two errors. If they exist at the same position the errors of `other` are\n added to `self` (using the semantics of `add`). If they are not at the same\n position the error furthest ahead are returned, ignoring the other `ParseError`.\n","sig":null,"attributes":[{"value":"/ Merges two errors. If they exist at the same position the errors of `other` are","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/error.rs","byte_start":51853,"byte_end":51936,"line_start":298,"line_end":298,"column_start":5,"column_end":88}},{"value":"/ added to `self` (using the semantics of `add`). If they are not at the same","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/error.rs","byte_start":51941,"byte_end":52020,"line_start":299,"line_end":299,"column_start":5,"column_end":84}},{"value":"/ position the error furthest ahead are returned, ignoring the other `ParseError`.","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/error.rs","byte_start":52025,"byte_end":52109,"line_start":300,"line_end":300,"column_start":5,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":148},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/error.rs","byte_start":52412,"byte_end":52415,"line_start":309,"line_end":309,"column_start":8,"column_end":11},"name":"add","qualname":"::error::ParseError::add","value":"pub fn add(&mut Self, Self::StreamError)","parent":{"krate":0,"index":139},"children":[],"decl_id":null,"docs":" Adds a `StreamError` to `self`.","sig":null,"attributes":[{"value":"/ Adds a `StreamError` to `self`.","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/error.rs","byte_start":52177,"byte_end":52212,"line_start":305,"line_end":305,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/error.rs","byte_start":52217,"byte_end":52220,"line_start":306,"line_end":306,"column_start":5,"column_end":8}},{"value":"/ It is up to each individual error type to define what adding an error does, some may push","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/error.rs","byte_start":52225,"byte_end":52318,"line_start":307,"line_end":307,"column_start":5,"column_end":98}},{"value":"/ it to a vector while others may only keep `self` or `err` to avoid allocation","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/error.rs","byte_start":52323,"byte_end":52404,"line_start":308,"line_end":308,"column_start":5,"column_end":86}}]},{"kind":"Method","id":{"krate":0,"index":149},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/error.rs","byte_start":52460,"byte_end":52472,"line_start":311,"line_end":311,"column_start":8,"column_end":20},"name":"add_expected","qualname":"::error::ParseError::add_expected","value":"pub fn add_expected(&mut Self, Info<Item, Range>)","parent":{"krate":0,"index":139},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":150},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/error.rs","byte_start":52577,"byte_end":52591,"line_start":315,"line_end":315,"column_start":8,"column_end":22},"name":"add_unexpected","qualname":"::error::ParseError::add_unexpected","value":"pub fn add_unexpected(&mut Self, Info<Item, Range>)","parent":{"krate":0,"index":139},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":151},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/error.rs","byte_start":52698,"byte_end":52709,"line_start":319,"line_end":319,"column_start":8,"column_end":19},"name":"add_message","qualname":"::error::ParseError::add_message","value":"pub fn add_message(&mut Self, Info<Item, Range>)","parent":{"krate":0,"index":139},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":152},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/error.rs","byte_start":52874,"byte_end":52886,"line_start":324,"line_end":324,"column_start":8,"column_end":20},"name":"set_expected","qualname":"::error::ParseError::set_expected","value":"pub fn set_expected<F>(&mut Tracked<Self>, Self::StreamError, F) where\nF: FnOnce(&mut Tracked<Self>) -> ()","parent":{"krate":0,"index":139},"children":[],"decl_id":null,"docs":" Sets `info` as the *only* `Expected` error of `self`\n","sig":null,"attributes":[{"value":"/ Sets `info` as the *only* `Expected` error of `self`","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/error.rs","byte_start":52810,"byte_end":52866,"line_start":323,"line_end":323,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":154},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/error.rs","byte_start":53061,"byte_end":53075,"line_start":329,"line_end":329,"column_start":8,"column_end":22},"name":"clear_expected","qualname":"::error::ParseError::clear_expected","value":"pub fn clear_expected(&mut Self)","parent":{"krate":0,"index":139},"children":[],"decl_id":null,"docs":" Removes any expected errors currently in `self`\n","sig":null,"attributes":[{"value":"/ Removes any expected errors currently in `self`","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/error.rs","byte_start":53002,"byte_end":53053,"line_start":328,"line_end":328,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":155},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/error.rs","byte_start":53098,"byte_end":53124,"line_start":331,"line_end":331,"column_start":8,"column_end":34},"name":"is_unexpected_end_of_input","qualname":"::error::ParseError::is_unexpected_end_of_input","value":"pub fn is_unexpected_end_of_input(&Self) -> bool","parent":{"krate":0,"index":139},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":156},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/error.rs","byte_start":53223,"byte_end":53233,"line_start":334,"line_end":334,"column_start":8,"column_end":18},"name":"into_other","qualname":"::error::ParseError::into_other","value":"pub fn into_other<T>(Self) -> T where T: ParseError<Item, Range, Position>","parent":{"krate":0,"index":139},"children":[],"decl_id":null,"docs":" Does a best-effort conversion of `self` into another `ParseError`\n","sig":null,"attributes":[{"value":"/ Does a best-effort conversion of `self` into another `ParseError`","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/error.rs","byte_start":53146,"byte_end":53215,"line_start":333,"line_end":333,"column_start":5,"column_end":74}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2294},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/error.rs","byte_start":53379,"byte_end":53382,"line_start":341,"line_end":341,"column_start":5,"column_end":8},"name":"Eoi","qualname":"::error::UnexpectedParse::Eoi","value":"UnexpectedParse::Eoi","parent":{"krate":0,"index":2293},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2296},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/error.rs","byte_start":53388,"byte_end":53398,"line_start":342,"line_end":342,"column_start":5,"column_end":15},"name":"Unexpected","qualname":"::error::UnexpectedParse::Unexpected","value":"UnexpectedParse::Unexpected","parent":{"krate":0,"index":2293},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2293},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/error.rs","byte_start":53357,"byte_end":53372,"line_start":340,"line_end":340,"column_start":10,"column_end":25},"name":"UnexpectedParse","qualname":"::error::UnexpectedParse","value":"pub enum UnexpectedParse { Eoi, Unexpected, }","parent":null,"children":[{"krate":0,"index":2294},{"krate":0,"index":2296}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2307},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/error.rs","byte_start":56359,"byte_end":56374,"line_start":474,"line_end":474,"column_start":5,"column_end":20},"name":"UnexpectedParse","qualname":"::error::StringStreamError::UnexpectedParse","value":"StringStreamError::UnexpectedParse","parent":{"krate":0,"index":2306},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2309},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/error.rs","byte_start":56380,"byte_end":56383,"line_start":475,"line_end":475,"column_start":5,"column_end":8},"name":"Eoi","qualname":"::error::StringStreamError::Eoi","value":"StringStreamError::Eoi","parent":{"krate":0,"index":2306},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2311},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/error.rs","byte_start":56389,"byte_end":56406,"line_start":476,"line_end":476,"column_start":5,"column_end":22},"name":"CharacterBoundary","qualname":"::error::StringStreamError::CharacterBoundary","value":"StringStreamError::CharacterBoundary","parent":{"krate":0,"index":2306},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2306},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/error.rs","byte_start":56335,"byte_end":56352,"line_start":473,"line_end":473,"column_start":10,"column_end":27},"name":"StringStreamError","qualname":"::error::StringStreamError","value":"pub enum StringStreamError { UnexpectedParse, Eoi, CharacterBoundary, }","parent":null,"children":[{"krate":0,"index":2307},{"krate":0,"index":2309},{"krate":0,"index":2311}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2321},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/error.rs","byte_start":60170,"byte_end":60177,"line_start":618,"line_end":618,"column_start":12,"column_end":19},"name":"Tracked","qualname":"::error::Tracked","value":"Tracked { error, offset }","parent":null,"children":[{"krate":0,"index":2323},{"krate":0,"index":2324}],"decl_id":null,"docs":" Error wrapper which lets parsers track which parser in a sequence of sub-parsers has emitted\n the error. `Tracked::from` can be used to construct this and it should otherwise be\n ignored outside of combine.\n","sig":null,"attributes":[{"value":"/ Error wrapper which lets parsers track which parser in a sequence of sub-parsers has emitted","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/error.rs","byte_start":59901,"byte_end":59997,"line_start":614,"line_end":614,"column_start":1,"column_end":97}},{"value":"/ the error. `Tracked::from` can be used to construct this and it should otherwise be","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/error.rs","byte_start":59998,"byte_end":60085,"line_start":615,"line_end":615,"column_start":1,"column_end":88}},{"value":"/ ignored outside of combine.","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/error.rs","byte_start":60086,"byte_end":60117,"line_start":616,"line_end":616,"column_start":1,"column_end":32}}]},{"kind":"Field","id":{"krate":0,"index":2323},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/error.rs","byte_start":60218,"byte_end":60223,"line_start":620,"line_end":620,"column_start":9,"column_end":14},"name":"error","qualname":"::error::Tracked::error","value":"E","parent":{"krate":0,"index":2321},"children":[],"decl_id":null,"docs":" The error returned\n","sig":null,"attributes":[{"value":"/ The error returned","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/error.rs","byte_start":60187,"byte_end":60209,"line_start":619,"line_end":619,"column_start":5,"column_end":27}}]},{"kind":"Field","id":{"krate":0,"index":2324},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/error.rs","byte_start":60255,"byte_end":60261,"line_start":622,"line_end":622,"column_start":9,"column_end":15},"name":"offset","qualname":"::error::Tracked::offset","value":"ErrorOffset","parent":{"krate":0,"index":2321},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2342},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/error.rs","byte_start":60516,"byte_end":60526,"line_start":636,"line_end":636,"column_start":5,"column_end":15},"name":"ConsumedOk","qualname":"::error::FastResult::ConsumedOk","value":"FastResult::ConsumedOk(T)","parent":{"krate":0,"index":2339},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2345},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/error.rs","byte_start":60535,"byte_end":60542,"line_start":637,"line_end":637,"column_start":5,"column_end":12},"name":"EmptyOk","qualname":"::error::FastResult::EmptyOk","value":"FastResult::EmptyOk(T)","parent":{"krate":0,"index":2339},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2348},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/error.rs","byte_start":60551,"byte_end":60562,"line_start":638,"line_end":638,"column_start":5,"column_end":16},"name":"ConsumedErr","qualname":"::error::FastResult::ConsumedErr","value":"FastResult::ConsumedErr(E)","parent":{"krate":0,"index":2339},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2351},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/error.rs","byte_start":60571,"byte_end":60579,"line_start":639,"line_end":639,"column_start":5,"column_end":13},"name":"EmptyErr","qualname":"::error::FastResult::EmptyErr","value":"FastResult::EmptyErr(Tracked<E>)","parent":{"krate":0,"index":2339},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2339},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/error.rs","byte_start":60493,"byte_end":60503,"line_start":635,"line_end":635,"column_start":10,"column_end":20},"name":"FastResult","qualname":"::error::FastResult","value":"pub enum FastResult<T, E> {\n    ConsumedOk(T),\n    EmptyOk(T),\n    ConsumedErr(E),\n    EmptyErr(Tracked<E>),\n}","parent":null,"children":[{"krate":0,"index":2342},{"krate":0,"index":2345},{"krate":0,"index":2348},{"krate":0,"index":2351}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":236},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/error.rs","byte_start":60651,"byte_end":60656,"line_start":644,"line_end":644,"column_start":12,"column_end":17},"name":"is_ok","qualname":"<FastResult<T, E>>::is_ok","value":"pub fn is_ok(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/error.rs","byte_start":60630,"byte_end":60639,"line_start":643,"line_end":643,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":237},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/error.rs","byte_start":60822,"byte_end":60828,"line_start":650,"line_end":650,"column_start":12,"column_end":18},"name":"as_ref","qualname":"<FastResult<T, E>>::as_ref","value":"pub fn as_ref(&Self) -> FastResult<&T, &E>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":238},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/error.rs","byte_start":61183,"byte_end":61191,"line_start":662,"line_end":662,"column_start":12,"column_end":20},"name":"and_then","qualname":"<FastResult<T, E>>::and_then","value":"pub fn and_then<F, T2>(Self, F) -> F::Output where F: FnOnce(T) ->\nFastResult<T2, E>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":241},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/error.rs","byte_start":61674,"byte_end":61681,"line_start":678,"line_end":678,"column_start":12,"column_end":19},"name":"map_err","qualname":"<FastResult<T, E>>::map_err","value":"pub fn map_err<F, E2>(Self, F) -> FastResult<T, F::Output> where F: FnOnce(E)\n-> E2","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":247},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/error.rs","byte_start":62116,"byte_end":62119,"line_start":695,"line_end":695,"column_start":12,"column_end":15},"name":"map","qualname":"<FastResult<T, E>>::map","value":"pub fn map<F, T2>(Self, F) -> FastResult<F::Output, E> where F: FnOnce(T) ->\nT2","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":250},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/error.rs","byte_start":62623,"byte_end":62637,"line_start":711,"line_end":711,"column_start":10,"column_end":24},"name":"ConsumedResult","qualname":"::error::ConsumedResult","value":"FastResult<O, <I as StreamOnce>::Error>","parent":null,"children":[],"decl_id":null,"docs":" A `Result` type which has the consumed status flattened into the result.\n Conversions to and from `std::result::Result` can be done using `result.into()` or\n `From::from(result)`\n","sig":null,"attributes":[{"value":"/ A `Result` type which has the consumed status flattened into the result.","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/error.rs","byte_start":62425,"byte_end":62501,"line_start":708,"line_end":708,"column_start":1,"column_end":77}},{"value":"/ Conversions to and from `std::result::Result` can be done using `result.into()` or","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/error.rs","byte_start":62502,"byte_end":62588,"line_start":709,"line_end":709,"column_start":1,"column_end":87}},{"value":"/ `From::from(result)`","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/error.rs","byte_start":62589,"byte_end":62613,"line_start":710,"line_end":710,"column_start":1,"column_end":25}}]},{"kind":"Mod","id":{"krate":0,"index":267},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"stream","qualname":"::stream","value":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/mod.rs","parent":null,"children":[{"krate":0,"index":268},{"krate":0,"index":269},{"krate":0,"index":270},{"krate":0,"index":271},{"krate":0,"index":272},{"krate":0,"index":273},{"krate":0,"index":274},{"krate":0,"index":275},{"krate":0,"index":276},{"krate":0,"index":277},{"krate":0,"index":278},{"krate":0,"index":279},{"krate":0,"index":280},{"krate":0,"index":281},{"krate":0,"index":282},{"krate":0,"index":283},{"krate":0,"index":285},{"krate":0,"index":312},{"krate":0,"index":517},{"krate":0,"index":633},{"krate":0,"index":635},{"krate":0,"index":637},{"krate":0,"index":644},{"krate":0,"index":2532},{"krate":0,"index":2537},{"krate":0,"index":2543},{"krate":0,"index":2549},{"krate":0,"index":648},{"krate":0,"index":649},{"krate":0,"index":651},{"krate":0,"index":653},{"krate":0,"index":661},{"krate":0,"index":662},{"krate":0,"index":664},{"krate":0,"index":666},{"krate":0,"index":669},{"krate":0,"index":671},{"krate":0,"index":673},{"krate":0,"index":676},{"krate":0,"index":679},{"krate":0,"index":682},{"krate":0,"index":686},{"krate":0,"index":695},{"krate":0,"index":698},{"krate":0,"index":701},{"krate":0,"index":705},{"krate":0,"index":710},{"krate":0,"index":719},{"krate":0,"index":723},{"krate":0,"index":726},{"krate":0,"index":733},{"krate":0,"index":737},{"krate":0,"index":2554},{"krate":0,"index":2585},{"krate":0,"index":2582},{"krate":0,"index":2577},{"krate":0,"index":2579},{"krate":0,"index":2571},{"krate":0,"index":2573},{"krate":0,"index":2568},{"krate":0,"index":2561},{"krate":0,"index":2558},{"krate":0,"index":745},{"krate":0,"index":748},{"krate":0,"index":753},{"krate":0,"index":761},{"krate":0,"index":769},{"krate":0,"index":2587},{"krate":0,"index":2623},{"krate":0,"index":2616},{"krate":0,"index":2619},{"krate":0,"index":2608},{"krate":0,"index":2611},{"krate":0,"index":2604},{"krate":0,"index":2596},{"krate":0,"index":2592},{"krate":0,"index":772},{"krate":0,"index":776},{"krate":0,"index":780},{"krate":0,"index":788},{"krate":0,"index":793},{"krate":0,"index":802},{"krate":0,"index":2626},{"krate":0,"index":2636},{"krate":0,"index":2633},{"krate":0,"index":2630},{"krate":0,"index":806},{"krate":0,"index":810},{"krate":0,"index":814},{"krate":0,"index":821},{"krate":0,"index":824},{"krate":0,"index":831},{"krate":0,"index":2638},{"krate":0,"index":2661},{"krate":0,"index":2660},{"krate":0,"index":2658},{"krate":0,"index":2656},{"krate":0,"index":2653},{"krate":0,"index":2654},{"krate":0,"index":2649},{"krate":0,"index":2650},{"krate":0,"index":2647},{"krate":0,"index":2641},{"krate":0,"index":834},{"krate":0,"index":836},{"krate":0,"index":839}],"decl_id":null,"docs":" Traits and implementations of arbitrary data streams.","sig":null,"attributes":[{"value":"macro_use","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/lib.rs","byte_start":27209,"byte_end":27221,"line_start":762,"line_end":762,"column_start":1,"column_end":13}},{"value":"/ Traits and implementations of arbitrary data streams.","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/mod.rs","byte_start":65534,"byte_end":65591,"line_start":1,"line_end":1,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/mod.rs","byte_start":65592,"byte_end":65595,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ Streams are similar to the `Iterator` trait in that they represent some sequential set of items","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/mod.rs","byte_start":65596,"byte_end":65695,"line_start":3,"line_end":3,"column_start":1,"column_end":100}},{"value":"/ which can be retrieved one by one. Where `Stream`s differ is that they are allowed to return","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/mod.rs","byte_start":65696,"byte_end":65792,"line_start":4,"line_end":4,"column_start":1,"column_end":97}},{"value":"/ errors instead of just `None` and if they implement the `RangeStreamOnce` trait they are also","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/mod.rs","byte_start":65793,"byte_end":65890,"line_start":5,"line_end":5,"column_start":1,"column_end":98}},{"value":"/ capable of returning multiple items at the same time, usually in the form of a slice.","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/mod.rs","byte_start":65891,"byte_end":65980,"line_start":6,"line_end":6,"column_start":1,"column_end":90}},{"value":"/","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/mod.rs","byte_start":65981,"byte_end":65984,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ In addition to he functionality above, a proper `Stream` usable by a `Parser` must also have a","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/mod.rs","byte_start":65985,"byte_end":66083,"line_start":8,"line_end":8,"column_start":1,"column_end":99}},{"value":"/ position (marked by the `Positioned` trait) and must also be resetable (marked by the","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/mod.rs","byte_start":66084,"byte_end":66173,"line_start":9,"line_end":9,"column_start":1,"column_end":90}},{"value":"/ `Resetable` trait). The former is used to ensure that errors at different points in the stream","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/mod.rs","byte_start":66174,"byte_end":66272,"line_start":10,"line_end":10,"column_start":1,"column_end":99}},{"value":"/ aren't combined and the latter is used in parsers such as `or` to try multiple alternative","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/mod.rs","byte_start":66273,"byte_end":66367,"line_start":11,"line_end":11,"column_start":1,"column_end":95}},{"value":"/ parses.","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/mod.rs","byte_start":66368,"byte_end":66379,"line_start":12,"line_end":12,"column_start":1,"column_end":12}}]},{"kind":"Mod","id":{"krate":0,"index":285},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/buffered.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"buffered","qualname":"::stream::buffered","value":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/buffered.rs","parent":null,"children":[{"krate":0,"index":286},{"krate":0,"index":287},{"krate":0,"index":288},{"krate":0,"index":289},{"krate":0,"index":290},{"krate":0,"index":291},{"krate":0,"index":292},{"krate":0,"index":2373},{"krate":0,"index":2385},{"krate":0,"index":2379},{"krate":0,"index":2381},{"krate":0,"index":293},{"krate":0,"index":298},{"krate":0,"index":301},{"krate":0,"index":304}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/mod.rs","byte_start":67082,"byte_end":67105,"line_start":49,"line_end":49,"column_start":1,"column_end":24}}]},{"kind":"Struct","id":{"krate":0,"index":2373},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/buffered.rs","byte_start":95463,"byte_end":95477,"line_start":26,"line_end":26,"column_start":12,"column_end":26},"name":"BufferedStream","qualname":"::stream::buffered::BufferedStream","value":"BufferedStream {  }","parent":null,"children":[{"krate":0,"index":2375},{"krate":0,"index":2376},{"krate":0,"index":2377},{"krate":0,"index":2378}],"decl_id":null,"docs":" `Stream` which buffers items from an instance of `StreamOnce` into a ring buffer.\n Instances of `StreamOnce` which is not able to implement `Resetable` (such as `ReadStream`) may\n use this as a way to implement `Resetable` and become a full `Stream` instance.","sig":null,"attributes":[{"value":"/ `Stream` which buffers items from an instance of `StreamOnce` into a ring buffer.","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/buffered.rs","byte_start":94445,"byte_end":94530,"line_start":6,"line_end":6,"column_start":1,"column_end":86}},{"value":"/ Instances of `StreamOnce` which is not able to implement `Resetable` (such as `ReadStream`) may","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/buffered.rs","byte_start":94531,"byte_end":94630,"line_start":7,"line_end":7,"column_start":1,"column_end":100}},{"value":"/ use this as a way to implement `Resetable` and become a full `Stream` instance.","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/buffered.rs","byte_start":94631,"byte_end":94714,"line_start":8,"line_end":8,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/buffered.rs","byte_start":94715,"byte_end":94718,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ The drawback is that the buffer only stores a limited number of items which limits how many","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/buffered.rs","byte_start":94719,"byte_end":94814,"line_start":10,"line_end":10,"column_start":1,"column_end":96}},{"value":"/ tokens that can be reset and replayed. If a `BufferedStream` is reset past this limit an error","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/buffered.rs","byte_start":94815,"byte_end":94913,"line_start":11,"line_end":11,"column_start":1,"column_end":99}},{"value":"/ will be returned when `uncons` is next called.","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/buffered.rs","byte_start":94914,"byte_end":94964,"line_start":12,"line_end":12,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/buffered.rs","byte_start":94965,"byte_end":94968,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ NOTE: If this stream is used in conjunction with an error enhancing stream such as","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/buffered.rs","byte_start":94969,"byte_end":95055,"line_start":14,"line_end":14,"column_start":1,"column_end":87}},{"value":"/ `easy::Stream` (also via the `easy_parser` method) it is recommended that the `BufferedStream`","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/buffered.rs","byte_start":95056,"byte_end":95154,"line_start":15,"line_end":15,"column_start":1,"column_end":99}},{"value":"/ instance wraps the `easy::Stream` instance instead of the other way around.","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/buffered.rs","byte_start":95155,"byte_end":95234,"line_start":16,"line_end":16,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/buffered.rs","byte_start":95235,"byte_end":95238,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ ```ignore","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/buffered.rs","byte_start":95239,"byte_end":95252,"line_start":18,"line_end":18,"column_start":1,"column_end":14}},{"value":"/ // DO","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/buffered.rs","byte_start":95253,"byte_end":95262,"line_start":19,"line_end":19,"column_start":1,"column_end":10}},{"value":"/ BufferedStream::new(easy::Stream(..), ..)","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/buffered.rs","byte_start":95263,"byte_end":95308,"line_start":20,"line_end":20,"column_start":1,"column_end":46}},{"value":"/ // DON'T","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/buffered.rs","byte_start":95309,"byte_end":95321,"line_start":21,"line_end":21,"column_start":1,"column_end":13}},{"value":"/ easy::Stream(BufferedStream::new(.., ..))","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/buffered.rs","byte_start":95322,"byte_end":95367,"line_start":22,"line_end":22,"column_start":1,"column_end":46}},{"value":"/ parser.easy_parse(BufferedStream::new(..));","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/buffered.rs","byte_start":95368,"byte_end":95415,"line_start":23,"line_end":23,"column_start":1,"column_end":48}},{"value":"/ ```","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/buffered.rs","byte_start":95416,"byte_end":95423,"line_start":24,"line_end":24,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":300},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/buffered.rs","byte_start":96168,"byte_end":96171,"line_start":57,"line_end":57,"column_start":12,"column_end":15},"name":"new","qualname":"<BufferedStream<I>>::new","value":"pub fn new(I, usize) -> BufferedStream<I>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new `BufferedStream` from a `StreamOnce` instance with a `lookahead`\n number of elements that can be stored in the buffer.\n","sig":null,"attributes":[{"value":"/ Constructs a new `BufferedStream` from a `StreamOnce` instance with a `lookahead`","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/buffered.rs","byte_start":96010,"byte_end":96095,"line_start":55,"line_end":55,"column_start":5,"column_end":90}},{"value":"/ number of elements that can be stored in the buffer.","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/buffered.rs","byte_start":96100,"byte_end":96156,"line_start":56,"line_end":56,"column_start":5,"column_end":61}}]},{"kind":"Mod","id":{"krate":0,"index":312},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/easy.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"easy","qualname":"::stream::easy","value":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/easy.rs","parent":null,"children":[{"krate":0,"index":313},{"krate":0,"index":314},{"krate":0,"index":315},{"krate":0,"index":316},{"krate":0,"index":317},{"krate":0,"index":318},{"krate":0,"index":319},{"krate":0,"index":320},{"krate":0,"index":321},{"krate":0,"index":322},{"krate":0,"index":323},{"krate":0,"index":324},{"krate":0,"index":325},{"krate":0,"index":326},{"krate":0,"index":327},{"krate":0,"index":2388},{"krate":0,"index":2407},{"krate":0,"index":2403},{"krate":0,"index":328},{"krate":0,"index":332},{"krate":0,"index":343},{"krate":0,"index":347},{"krate":0,"index":351},{"krate":0,"index":354},{"krate":0,"index":358},{"krate":0,"index":362},{"krate":0,"index":2411},{"krate":0,"index":2426},{"krate":0,"index":365},{"krate":0,"index":387},{"krate":0,"index":401},{"krate":0,"index":420},{"krate":0,"index":431},{"krate":0,"index":435},{"krate":0,"index":440},{"krate":0,"index":449},{"krate":0,"index":2430},{"krate":0,"index":2446},{"krate":0,"index":2436},{"krate":0,"index":2440},{"krate":0,"index":451},{"krate":0,"index":476},{"krate":0,"index":481},{"krate":0,"index":486},{"krate":0,"index":2451},{"krate":0,"index":2461},{"krate":0,"index":2458},{"krate":0,"index":2455},{"krate":0,"index":490},{"krate":0,"index":495},{"krate":0,"index":503},{"krate":0,"index":511},{"krate":0,"index":514}],"decl_id":null,"docs":" Stream wrapper which provides an informative and easy to use error type.","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/mod.rs","byte_start":67124,"byte_end":67147,"line_start":51,"line_end":51,"column_start":1,"column_end":24}},{"value":"/ Stream wrapper which provides an informative and easy to use error type.","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/easy.rs","byte_start":98539,"byte_end":98615,"line_start":1,"line_end":1,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/easy.rs","byte_start":98616,"byte_end":98619,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ Unless you have specific constraints preventing you from using this error type (such as being","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/easy.rs","byte_start":98620,"byte_end":98717,"line_start":3,"line_end":3,"column_start":1,"column_end":98}},{"value":"/ a `no_std` environment) you probably want to use this stream type. It can easily be used","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/easy.rs","byte_start":98718,"byte_end":98810,"line_start":4,"line_end":4,"column_start":1,"column_end":93}},{"value":"/ through the [`Parser::easy_parse`][] method.","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/easy.rs","byte_start":98811,"byte_end":98859,"line_start":5,"line_end":5,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/easy.rs","byte_start":98860,"byte_end":98863,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ The provided `Errors` type is roughly the same as `ParseError` in combine 1.x and 2.x.","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/easy.rs","byte_start":98864,"byte_end":98954,"line_start":7,"line_end":7,"column_start":1,"column_end":91}},{"value":"/","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/easy.rs","byte_start":98955,"byte_end":98958,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/easy.rs","byte_start":98959,"byte_end":98966,"line_start":9,"line_end":9,"column_start":1,"column_end":8}},{"value":"/ #[macro_use]","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/easy.rs","byte_start":98967,"byte_end":98983,"line_start":10,"line_end":10,"column_start":1,"column_end":17}},{"value":"/ extern crate combine;","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/easy.rs","byte_start":98984,"byte_end":99009,"line_start":11,"line_end":11,"column_start":1,"column_end":26}},{"value":"/ use combine::{easy, Parser, Stream, many1};","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/easy.rs","byte_start":99010,"byte_end":99057,"line_start":12,"line_end":12,"column_start":1,"column_end":48}},{"value":"/ use combine::parser::char::letter;","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/easy.rs","byte_start":99058,"byte_end":99096,"line_start":13,"line_end":13,"column_start":1,"column_end":39}},{"value":"/ use combine::stream::StreamErrorFor;","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/easy.rs","byte_start":99097,"byte_end":99137,"line_start":14,"line_end":14,"column_start":1,"column_end":41}},{"value":"/ use combine::error::{ParseError, StreamError};","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/easy.rs","byte_start":99138,"byte_end":99188,"line_start":15,"line_end":15,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/easy.rs","byte_start":99189,"byte_end":99192,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ fn main() {","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/easy.rs","byte_start":99193,"byte_end":99208,"line_start":17,"line_end":17,"column_start":1,"column_end":16}},{"value":"/     parser!{","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/easy.rs","byte_start":99209,"byte_end":99225,"line_start":18,"line_end":18,"column_start":1,"column_end":17}},{"value":"/        fn parser[I]()(I) -> String","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/easy.rs","byte_start":99226,"byte_end":99264,"line_start":19,"line_end":19,"column_start":1,"column_end":39}},{"value":"/         where [","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/easy.rs","byte_start":99265,"byte_end":99284,"line_start":20,"line_end":20,"column_start":1,"column_end":20}},{"value":"/             I: Stream<Item=char, Error = easy::ParseError<I>>,","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/easy.rs","byte_start":99285,"byte_end":99351,"line_start":21,"line_end":21,"column_start":1,"column_end":67}},{"value":"/             // If we want to use the error type explicitly we need to help rustc infer","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/easy.rs","byte_start":99352,"byte_end":99442,"line_start":22,"line_end":22,"column_start":1,"column_end":91}},{"value":"/             // `StreamError` to `easy::Error` (rust-lang/rust#24159)","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/easy.rs","byte_start":99443,"byte_end":99515,"line_start":23,"line_end":23,"column_start":1,"column_end":73}},{"value":"/             I::Error: ParseError<","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/easy.rs","byte_start":99516,"byte_end":99553,"line_start":24,"line_end":24,"column_start":1,"column_end":38}},{"value":"/                 I::Item,","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/easy.rs","byte_start":99554,"byte_end":99582,"line_start":25,"line_end":25,"column_start":1,"column_end":29}},{"value":"/                 I::Range,","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/easy.rs","byte_start":99583,"byte_end":99612,"line_start":26,"line_end":26,"column_start":1,"column_end":30}},{"value":"/                 I::Position,","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/easy.rs","byte_start":99613,"byte_end":99645,"line_start":27,"line_end":27,"column_start":1,"column_end":33}},{"value":"/                 StreamError = easy::Error<I::Item, I::Range>","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/easy.rs","byte_start":99646,"byte_end":99710,"line_start":28,"line_end":28,"column_start":1,"column_end":65}},{"value":"/             >","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/easy.rs","byte_start":99711,"byte_end":99728,"line_start":29,"line_end":29,"column_start":1,"column_end":18}},{"value":"/         ]","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/easy.rs","byte_start":99729,"byte_end":99742,"line_start":30,"line_end":30,"column_start":1,"column_end":14}},{"value":"/         {","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/easy.rs","byte_start":99743,"byte_end":99756,"line_start":31,"line_end":31,"column_start":1,"column_end":14}},{"value":"/             many1(letter()).and_then(|word: String| {","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/easy.rs","byte_start":99757,"byte_end":99814,"line_start":32,"line_end":32,"column_start":1,"column_end":58}},{"value":"/                 if word == \"combine\" {","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/easy.rs","byte_start":99815,"byte_end":99857,"line_start":33,"line_end":33,"column_start":1,"column_end":43}},{"value":"/                     Ok(word)","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/easy.rs","byte_start":99858,"byte_end":99890,"line_start":34,"line_end":34,"column_start":1,"column_end":33}},{"value":"/                 } else {","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/easy.rs","byte_start":99891,"byte_end":99919,"line_start":35,"line_end":35,"column_start":1,"column_end":29}},{"value":"/                     Err(easy::Error::Expected(easy::Info::Borrowed(\"combine\")))","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/easy.rs","byte_start":99920,"byte_end":100003,"line_start":36,"line_end":36,"column_start":1,"column_end":84}},{"value":"/                 }","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/easy.rs","byte_start":100004,"byte_end":100025,"line_start":37,"line_end":37,"column_start":1,"column_end":22}},{"value":"/             })","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/easy.rs","byte_start":100026,"byte_end":100044,"line_start":38,"line_end":38,"column_start":1,"column_end":19}},{"value":"/         }","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/easy.rs","byte_start":100045,"byte_end":100058,"line_start":39,"line_end":39,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/easy.rs","byte_start":100059,"byte_end":100068,"line_start":40,"line_end":40,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/easy.rs","byte_start":100069,"byte_end":100072,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/     parser!{","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/easy.rs","byte_start":100073,"byte_end":100089,"line_start":42,"line_end":42,"column_start":1,"column_end":17}},{"value":"/        fn parser2[I]()(I) -> String","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/easy.rs","byte_start":100090,"byte_end":100129,"line_start":43,"line_end":43,"column_start":1,"column_end":40}},{"value":"/         where [","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/easy.rs","byte_start":100130,"byte_end":100149,"line_start":44,"line_end":44,"column_start":1,"column_end":20}},{"value":"/             I: Stream<Item=char>,","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/easy.rs","byte_start":100150,"byte_end":100187,"line_start":45,"line_end":45,"column_start":1,"column_end":38}},{"value":"/         ]","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/easy.rs","byte_start":100188,"byte_end":100201,"line_start":46,"line_end":46,"column_start":1,"column_end":14}},{"value":"/         {","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/easy.rs","byte_start":100202,"byte_end":100215,"line_start":47,"line_end":47,"column_start":1,"column_end":14}},{"value":"/             many1(letter()).and_then(|word: String| {","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/easy.rs","byte_start":100216,"byte_end":100273,"line_start":48,"line_end":48,"column_start":1,"column_end":58}},{"value":"/                 if word == \"combine\" {","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/easy.rs","byte_start":100274,"byte_end":100316,"line_start":49,"line_end":49,"column_start":1,"column_end":43}},{"value":"/                     Ok(word)","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/easy.rs","byte_start":100317,"byte_end":100349,"line_start":50,"line_end":50,"column_start":1,"column_end":33}},{"value":"/                 } else {","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/easy.rs","byte_start":100350,"byte_end":100378,"line_start":51,"line_end":51,"column_start":1,"column_end":29}},{"value":"/                     // Alternatively it is possible to only use the methods provided by the","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/easy.rs","byte_start":100379,"byte_end":100474,"line_start":52,"line_end":52,"column_start":1,"column_end":96}},{"value":"/                     // `StreamError` trait.","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/easy.rs","byte_start":100475,"byte_end":100522,"line_start":53,"line_end":53,"column_start":1,"column_end":48}},{"value":"/                     // In that case the extra bound is not necessary (and this method will work","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/easy.rs","byte_start":100523,"byte_end":100622,"line_start":54,"line_end":54,"column_start":1,"column_end":100}},{"value":"/                     // for other errors than `easy::Errors`)","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/easy.rs","byte_start":100623,"byte_end":100687,"line_start":55,"line_end":55,"column_start":1,"column_end":65}},{"value":"/                     Err(StreamErrorFor::<I>::expected_static_message(\"combine\"))","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/easy.rs","byte_start":100688,"byte_end":100772,"line_start":56,"line_end":56,"column_start":1,"column_end":85}},{"value":"/                 }","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/easy.rs","byte_start":100773,"byte_end":100794,"line_start":57,"line_end":57,"column_start":1,"column_end":22}},{"value":"/             })","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/easy.rs","byte_start":100795,"byte_end":100813,"line_start":58,"line_end":58,"column_start":1,"column_end":19}},{"value":"/         }","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/easy.rs","byte_start":100814,"byte_end":100827,"line_start":59,"line_end":59,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/easy.rs","byte_start":100828,"byte_end":100837,"line_start":60,"line_end":60,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/easy.rs","byte_start":100838,"byte_end":100841,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/     let input = \"combin\";","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/easy.rs","byte_start":100842,"byte_end":100871,"line_start":62,"line_end":62,"column_start":1,"column_end":30}},{"value":"/     let expected_error = Err(easy::Errors {","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/easy.rs","byte_start":100872,"byte_end":100919,"line_start":63,"line_end":63,"column_start":1,"column_end":48}},{"value":"/         errors: vec![","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/easy.rs","byte_start":100920,"byte_end":100945,"line_start":64,"line_end":64,"column_start":1,"column_end":26}},{"value":"/             easy::Error::Expected(\"combine\".into())","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/easy.rs","byte_start":100946,"byte_end":101001,"line_start":65,"line_end":65,"column_start":1,"column_end":56}},{"value":"/         ],","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/easy.rs","byte_start":101002,"byte_end":101016,"line_start":66,"line_end":66,"column_start":1,"column_end":15}},{"value":"/         position: 0,","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/easy.rs","byte_start":101017,"byte_end":101041,"line_start":67,"line_end":67,"column_start":1,"column_end":25}},{"value":"/     });","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/easy.rs","byte_start":101042,"byte_end":101053,"line_start":68,"line_end":68,"column_start":1,"column_end":12}},{"value":"/     assert_eq!(","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/easy.rs","byte_start":101054,"byte_end":101073,"line_start":69,"line_end":69,"column_start":1,"column_end":20}},{"value":"/         parser().easy_parse(input).map_err(|err| err.map_position(|p| p.translate_position(input))),","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/easy.rs","byte_start":101074,"byte_end":101178,"line_start":70,"line_end":70,"column_start":1,"column_end":105}},{"value":"/         expected_error","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/easy.rs","byte_start":101179,"byte_end":101205,"line_start":71,"line_end":71,"column_start":1,"column_end":27}},{"value":"/     );","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/easy.rs","byte_start":101206,"byte_end":101216,"line_start":72,"line_end":72,"column_start":1,"column_end":11}},{"value":"/     assert_eq!(","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/easy.rs","byte_start":101217,"byte_end":101236,"line_start":73,"line_end":73,"column_start":1,"column_end":20}},{"value":"/         parser2().easy_parse(input).map_err(|err| err.map_position(|p| p.translate_position(input))),","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/easy.rs","byte_start":101237,"byte_end":101342,"line_start":74,"line_end":74,"column_start":1,"column_end":106}},{"value":"/         expected_error","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/easy.rs","byte_start":101343,"byte_end":101369,"line_start":75,"line_end":75,"column_start":1,"column_end":27}},{"value":"/     );","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/easy.rs","byte_start":101370,"byte_end":101380,"line_start":76,"line_end":76,"column_start":1,"column_end":11}},{"value":"/ }","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/easy.rs","byte_start":101381,"byte_end":101386,"line_start":77,"line_end":77,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/easy.rs","byte_start":101387,"byte_end":101390,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/easy.rs","byte_start":101391,"byte_end":101398,"line_start":79,"line_end":79,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/easy.rs","byte_start":101399,"byte_end":101402,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ [`Parser::easy_parse`]: ../parser/trait.Parser.html#method.easy_parse","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/easy.rs","byte_start":101403,"byte_end":101476,"line_start":81,"line_end":81,"column_start":1,"column_end":74}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2391},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/easy.rs","byte_start":102132,"byte_end":102137,"line_start":99,"line_end":99,"column_start":5,"column_end":10},"name":"Token","qualname":"::stream::easy::Info::Token","value":"Info::Token(T)","parent":{"krate":0,"index":2388},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2394},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/easy.rs","byte_start":102146,"byte_end":102151,"line_start":100,"line_end":100,"column_start":5,"column_end":10},"name":"Range","qualname":"::stream::easy::Info::Range","value":"Info::Range(R)","parent":{"krate":0,"index":2388},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2397},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/easy.rs","byte_start":102160,"byte_end":102165,"line_start":101,"line_end":101,"column_start":5,"column_end":10},"name":"Owned","qualname":"::stream::easy::Info::Owned","value":"Info::Owned(String)","parent":{"krate":0,"index":2388},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2400},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/easy.rs","byte_start":102179,"byte_end":102187,"line_start":102,"line_end":102,"column_start":5,"column_end":13},"name":"Borrowed","qualname":"::stream::easy::Info::Borrowed","value":"Info::Borrowed(&'static str)","parent":{"krate":0,"index":2388},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2388},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/easy.rs","byte_start":102115,"byte_end":102119,"line_start":98,"line_end":98,"column_start":10,"column_end":14},"name":"Info","qualname":"::stream::easy::Info","value":"pub enum Info<T, R> {\n    Token(T),\n    Range(R),\n    Owned(String),\n    Borrowed(&'static str),\n}","parent":null,"children":[{"krate":0,"index":2391},{"krate":0,"index":2394},{"krate":0,"index":2397},{"krate":0,"index":2400}],"decl_id":null,"docs":" Enum holding error information. Variants are defined for `Stream::Item` and `Stream::Range` as\n well as string variants holding easy descriptions.","sig":null,"attributes":[{"value":"/ Enum holding error information. Variants are defined for `Stream::Item` and `Stream::Range` as","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/easy.rs","byte_start":101721,"byte_end":101819,"line_start":91,"line_end":91,"column_start":1,"column_end":99}},{"value":"/ well as string variants holding easy descriptions.","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/easy.rs","byte_start":101820,"byte_end":101874,"line_start":92,"line_end":92,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/easy.rs","byte_start":101875,"byte_end":101878,"line_start":93,"line_end":93,"column_start":1,"column_end":4}},{"value":"/ As there is implementations of `From` for `String` and `&'static str` the","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/easy.rs","byte_start":101879,"byte_end":101956,"line_start":94,"line_end":94,"column_start":1,"column_end":78}},{"value":"/ constructor need not be used directly as calling `msg.into()` should turn a message into the","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/easy.rs","byte_start":101957,"byte_end":102053,"line_start":95,"line_end":95,"column_start":1,"column_end":97}},{"value":"/ correct `Info` variant.","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/easy.rs","byte_start":102054,"byte_end":102081,"line_start":96,"line_end":96,"column_start":1,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":335},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/easy.rs","byte_start":102555,"byte_end":102564,"line_start":116,"line_end":116,"column_start":12,"column_end":21},"name":"map_token","qualname":"<Info<T, R>>::map_token","value":"pub fn map_token<F, U>(Self, F) -> Info<U, R> where F: FnOnce(T) -> U","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":339},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/easy.rs","byte_start":102861,"byte_end":102870,"line_start":129,"line_end":129,"column_start":12,"column_end":21},"name":"map_range","qualname":"<Info<T, R>>::map_range","value":"pub fn map_range<F, S>(Self, F) -> Info<T, S> where F: FnOnce(R) -> S","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2414},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/easy.rs","byte_start":104773,"byte_end":104783,"line_start":194,"line_end":194,"column_start":5,"column_end":15},"name":"Unexpected","qualname":"::stream::easy::Error::Unexpected","value":"Error::Unexpected(Info<T, R>)","parent":{"krate":0,"index":2411},"children":[],"decl_id":null,"docs":" Error indicating an unexpected token has been encountered in the stream\n","sig":null,"attributes":[{"value":"/ Error indicating an unexpected token has been encountered in the stream","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/easy.rs","byte_start":104693,"byte_end":104768,"line_start":193,"line_end":193,"column_start":5,"column_end":80}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2417},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/easy.rs","byte_start":104866,"byte_end":104874,"line_start":196,"line_end":196,"column_start":5,"column_end":13},"name":"Expected","qualname":"::stream::easy::Error::Expected","value":"Error::Expected(Info<T, R>)","parent":{"krate":0,"index":2411},"children":[],"decl_id":null,"docs":" Error indicating that the parser expected something else\n","sig":null,"attributes":[{"value":"/ Error indicating that the parser expected something else","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/easy.rs","byte_start":104801,"byte_end":104861,"line_start":195,"line_end":195,"column_start":5,"column_end":65}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2420},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/easy.rs","byte_start":104916,"byte_end":104923,"line_start":198,"line_end":198,"column_start":5,"column_end":12},"name":"Message","qualname":"::stream::easy::Error::Message","value":"Error::Message(Info<T, R>)","parent":{"krate":0,"index":2411},"children":[],"decl_id":null,"docs":" Generic message\n","sig":null,"attributes":[{"value":"/ Generic message","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/easy.rs","byte_start":104892,"byte_end":104911,"line_start":197,"line_end":197,"column_start":5,"column_end":24}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2423},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/easy.rs","byte_start":104994,"byte_end":104999,"line_start":200,"line_end":200,"column_start":5,"column_end":10},"name":"Other","qualname":"::stream::easy::Error::Other","value":"Error::Other(Box<StdError + Send + Sync>)","parent":{"krate":0,"index":2411},"children":[],"decl_id":null,"docs":" Variant for containing other types of errors\n","sig":null,"attributes":[{"value":"/ Variant for containing other types of errors","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/easy.rs","byte_start":104941,"byte_end":104989,"line_start":199,"line_end":199,"column_start":5,"column_end":53}}]},{"kind":"Enum","id":{"krate":0,"index":2411},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/easy.rs","byte_start":104675,"byte_end":104680,"line_start":192,"line_end":192,"column_start":10,"column_end":15},"name":"Error","qualname":"::stream::easy::Error","value":"pub enum Error<T, R> {\n\n    /// Error indicating an unexpected token has been encountered in the stream\n    Unexpected(Info<T, R>),\n\n    /// Error indicating that the parser expected something else\n    Expected(Info<T, R>),\n\n    /// Generic message\n    Message(Info<T, R>),\n\n    /// Variant for containing other types of errors\n    Other(Box<StdError + Send + Sync>),\n}","parent":null,"children":[{"krate":0,"index":2414},{"krate":0,"index":2417},{"krate":0,"index":2420},{"krate":0,"index":2423}],"decl_id":null,"docs":" Enum used to store information about an error that has occurred during parsing.\n","sig":null,"attributes":[{"value":"/ Enum used to store information about an error that has occurred during parsing.","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/easy.rs","byte_start":104565,"byte_end":104648,"line_start":190,"line_end":190,"column_start":1,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":423},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/easy.rs","byte_start":111019,"byte_end":111028,"line_start":431,"line_end":431,"column_start":12,"column_end":21},"name":"map_token","qualname":"<Error<T, R>>::map_token","value":"pub fn map_token<F, U>(Self, F) -> Error<U, R> where F: FnOnce(T) -> U","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":427},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/easy.rs","byte_start":111377,"byte_end":111386,"line_start":444,"line_end":444,"column_start":12,"column_end":21},"name":"map_range","qualname":"<Error<T, R>>::map_range","value":"pub fn map_range<F, S>(Self, F) -> Error<T, S> where F: FnOnce(R) -> S","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":443},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/easy.rs","byte_start":112357,"byte_end":112369,"line_start":480,"line_end":480,"column_start":12,"column_end":24},"name":"end_of_input","qualname":"<Error<T, R>>::end_of_input","value":"pub fn end_of_input() -> Error<T, R>","parent":null,"children":[],"decl_id":null,"docs":" Returns the `end_of_input` error.\n","sig":null,"attributes":[{"value":"/ Returns the `end_of_input` error.","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/easy.rs","byte_start":112308,"byte_end":112345,"line_start":479,"line_end":479,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":444},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/easy.rs","byte_start":113143,"byte_end":113153,"line_start":506,"line_end":506,"column_start":12,"column_end":22},"name":"fmt_errors","qualname":"<Error<T, R>>::fmt_errors","value":"pub fn fmt_errors(&[Error<T, R>], &mut fmt::Formatter) -> fmt::Result where\nT: fmt::Display, R: fmt::Display","parent":null,"children":[],"decl_id":null,"docs":" Formats a slice of errors in a human readable way.","sig":null,"attributes":[{"value":"/ Formats a slice of errors in a human readable way.","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/easy.rs","byte_start":112449,"byte_end":112503,"line_start":484,"line_end":484,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/easy.rs","byte_start":112508,"byte_end":112511,"line_start":485,"line_end":485,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/easy.rs","byte_start":112516,"byte_end":112527,"line_start":486,"line_end":486,"column_start":5,"column_end":16}},{"value":"/ # extern crate combine;","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/easy.rs","byte_start":112532,"byte_end":112559,"line_start":487,"line_end":487,"column_start":5,"column_end":32}},{"value":"/ # use combine::*;","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/easy.rs","byte_start":112564,"byte_end":112585,"line_start":488,"line_end":488,"column_start":5,"column_end":26}},{"value":"/ # use combine::parser::char::*;","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/easy.rs","byte_start":112590,"byte_end":112625,"line_start":489,"line_end":489,"column_start":5,"column_end":40}},{"value":"/ # use combine::stream::state::{State, SourcePosition};","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/easy.rs","byte_start":112630,"byte_end":112688,"line_start":490,"line_end":490,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/easy.rs","byte_start":112693,"byte_end":112696,"line_start":491,"line_end":491,"column_start":5,"column_end":8}},{"value":"/ # fn main() {","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/easy.rs","byte_start":112701,"byte_end":112718,"line_start":492,"line_end":492,"column_start":5,"column_end":22}},{"value":"/ let input = r\"","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/easy.rs","byte_start":112723,"byte_end":112741,"line_start":493,"line_end":493,"column_start":5,"column_end":23}},{"value":"/   ,123","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/easy.rs","byte_start":112746,"byte_end":112756,"line_start":494,"line_end":494,"column_start":5,"column_end":15}},{"value":"/ \";","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/easy.rs","byte_start":112761,"byte_end":112767,"line_start":495,"line_end":495,"column_start":5,"column_end":11}},{"value":"/ let result = spaces().silent().with(char('.').or(char('a')).or(digit()))","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/easy.rs","byte_start":112772,"byte_end":112848,"line_start":496,"line_end":496,"column_start":5,"column_end":81}},{"value":"/     .easy_parse(State::new(input));","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/easy.rs","byte_start":112853,"byte_end":112892,"line_start":497,"line_end":497,"column_start":5,"column_end":44}},{"value":"/ let m = format!(\"{}\", result.unwrap_err());","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/easy.rs","byte_start":112897,"byte_end":112944,"line_start":498,"line_end":498,"column_start":5,"column_end":52}},{"value":"/ let expected = r\"Parse error at line: 2, column: 3","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/easy.rs","byte_start":112949,"byte_end":113003,"line_start":499,"line_end":499,"column_start":5,"column_end":59}},{"value":"/ Unexpected `,`","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/easy.rs","byte_start":113008,"byte_end":113026,"line_start":500,"line_end":500,"column_start":5,"column_end":23}},{"value":"/ Expected `.`, `a` or `digit`","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/easy.rs","byte_start":113031,"byte_end":113063,"line_start":501,"line_end":501,"column_start":5,"column_end":37}},{"value":"/ \";","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/easy.rs","byte_start":113068,"byte_end":113074,"line_start":502,"line_end":502,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(m, expected);","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/easy.rs","byte_start":113079,"byte_end":113107,"line_start":503,"line_end":503,"column_start":5,"column_end":33}},{"value":"/ # }","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/easy.rs","byte_start":113112,"byte_end":113119,"line_start":504,"line_end":504,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/easy.rs","byte_start":113124,"byte_end":113131,"line_start":505,"line_end":505,"column_start":5,"column_end":12}}]},{"kind":"Type","id":{"krate":0,"index":449},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/easy.rs","byte_start":115018,"byte_end":115028,"line_start":558,"line_end":558,"column_start":10,"column_end":20},"name":"ParseError","qualname":"::stream::easy::ParseError","value":"Errors<<S as StreamOnce>::Item, <S as StreamOnce>::Range,\n       <S as StreamOnce>::Position>","parent":null,"children":[],"decl_id":null,"docs":" Convenience alias over `Errors` for `StreamOnce` types which makes it possible to specify the\n `Errors` type from a `StreamOnce` by writing `ParseError<I>` instead of `Errors<I::Item,\n I::Range, I::Position>`\n","sig":null,"attributes":[{"value":"/ Convenience alias over `Errors` for `StreamOnce` types which makes it possible to specify the","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/easy.rs","byte_start":114790,"byte_end":114887,"line_start":555,"line_end":555,"column_start":1,"column_end":98}},{"value":"/ `Errors` type from a `StreamOnce` by writing `ParseError<I>` instead of `Errors<I::Item,","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/easy.rs","byte_start":114888,"byte_end":114980,"line_start":556,"line_end":556,"column_start":1,"column_end":93}},{"value":"/ I::Range, I::Position>`","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/easy.rs","byte_start":114981,"byte_end":115008,"line_start":557,"line_end":557,"column_start":1,"column_end":28}}]},{"kind":"Struct","id":{"krate":0,"index":2430},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/easy.rs","byte_start":115350,"byte_end":115356,"line_start":564,"line_end":564,"column_start":12,"column_end":18},"name":"Errors","qualname":"::stream::easy::Errors","value":"Errors { position, errors }","parent":null,"children":[{"krate":0,"index":2434},{"krate":0,"index":2435}],"decl_id":null,"docs":" Struct which hold information about an error that occurred at a specific position.\n Can hold multiple instances of `Error` if more that one error occurred in the same position.\n","sig":null,"attributes":[{"value":"/ Struct which hold information about an error that occurred at a specific position.","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/easy.rs","byte_start":115127,"byte_end":115213,"line_start":561,"line_end":561,"column_start":1,"column_end":87}},{"value":"/ Can hold multiple instances of `Error` if more that one error occurred in the same position.","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/easy.rs","byte_start":115214,"byte_end":115310,"line_start":562,"line_end":562,"column_start":1,"column_end":97}}]},{"kind":"Field","id":{"krate":0,"index":2434},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/easy.rs","byte_start":115422,"byte_end":115430,"line_start":566,"line_end":566,"column_start":9,"column_end":17},"name":"position","qualname":"::stream::easy::Errors::position","value":"P","parent":{"krate":0,"index":2430},"children":[],"decl_id":null,"docs":" The position where the error occurred\n","sig":null,"attributes":[{"value":"/ The position where the error occurred","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/easy.rs","byte_start":115372,"byte_end":115413,"line_start":565,"line_end":565,"column_start":5,"column_end":46}}]},{"kind":"Field","id":{"krate":0,"index":2435},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/easy.rs","byte_start":115776,"byte_end":115782,"line_start":571,"line_end":571,"column_start":9,"column_end":15},"name":"errors","qualname":"::stream::easy::Errors::errors","value":"std::vec::Vec<stream::easy::Error<I, R>>","parent":{"krate":0,"index":2430},"children":[],"decl_id":null,"docs":" A vector containing specific information on what errors occurred at `position`. Usually\n a fully formed message contains one `Unexpected` error and one or more `Expected` errors.\n `Message` and `Other` may also appear (`combine` never generates these errors on its own)\n and may warrant custom handling.\n","sig":null,"attributes":[{"value":"/ A vector containing specific information on what errors occurred at `position`. Usually","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/easy.rs","byte_start":115439,"byte_end":115530,"line_start":567,"line_end":567,"column_start":5,"column_end":96}},{"value":"/ a fully formed message contains one `Unexpected` error and one or more `Expected` errors.","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/easy.rs","byte_start":115535,"byte_end":115628,"line_start":568,"line_end":568,"column_start":5,"column_end":98}},{"value":"/ `Message` and `Other` may also appear (`combine` never generates these errors on its own)","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/easy.rs","byte_start":115633,"byte_end":115726,"line_start":569,"line_end":569,"column_start":5,"column_end":98}},{"value":"/ and may warrant custom handling.","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/easy.rs","byte_start":115731,"byte_end":115767,"line_start":570,"line_end":570,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":455},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/easy.rs","byte_start":115930,"byte_end":115933,"line_start":577,"line_end":577,"column_start":12,"column_end":15},"name":"new","qualname":"<Errors<I, R, P>>::new","value":"pub fn new(P, Error<I, R>) -> Errors<I, R, P>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new `ParseError` which occurred at `position`.\n","sig":null,"attributes":[{"value":"/ Constructs a new `ParseError` which occurred at `position`.","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/easy.rs","byte_start":115841,"byte_end":115904,"line_start":575,"line_end":575,"column_start":5,"column_end":68}},{"value":"inline","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/easy.rs","byte_start":115909,"byte_end":115918,"line_start":576,"line_end":576,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":456},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/easy.rs","byte_start":116157,"byte_end":116162,"line_start":583,"line_end":583,"column_start":12,"column_end":17},"name":"empty","qualname":"<Errors<I, R, P>>::empty","value":"pub fn empty(P) -> Errors<I, R, P>","parent":null,"children":[],"decl_id":null,"docs":" Constructs an error with no other information than the position it occurred at.\n","sig":null,"attributes":[{"value":"/ Constructs an error with no other information than the position it occurred at.","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/easy.rs","byte_start":116048,"byte_end":116131,"line_start":581,"line_end":581,"column_start":5,"column_end":88}},{"value":"inline","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/easy.rs","byte_start":116136,"byte_end":116145,"line_start":582,"line_end":582,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":457},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/easy.rs","byte_start":116329,"byte_end":116340,"line_start":589,"line_end":589,"column_start":12,"column_end":23},"name":"from_errors","qualname":"<Errors<I, R, P>>::from_errors","value":"pub fn from_errors(P, Vec<Error<I, R>>) -> Errors<I, R, P>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a `ParseError` with multiple causes.\n","sig":null,"attributes":[{"value":"/ Constructs a `ParseError` with multiple causes.","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/easy.rs","byte_start":116252,"byte_end":116303,"line_start":587,"line_end":587,"column_start":5,"column_end":56}},{"value":"inline","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/easy.rs","byte_start":116308,"byte_end":116317,"line_start":588,"line_end":588,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":458},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/easy.rs","byte_start":116643,"byte_end":116655,"line_start":599,"line_end":599,"column_start":12,"column_end":24},"name":"end_of_input","qualname":"<Errors<I, R, P>>::end_of_input","value":"pub fn end_of_input(P) -> Errors<I, R, P>","parent":null,"children":[],"decl_id":null,"docs":" Constructs an end of input error. Should be returned by parsers which encounter end of\n input unexpectedly.\n","sig":null,"attributes":[{"value":"/ Constructs an end of input error. Should be returned by parsers which encounter end of","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/easy.rs","byte_start":116499,"byte_end":116589,"line_start":596,"line_end":596,"column_start":5,"column_end":95}},{"value":"/ input unexpectedly.","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/easy.rs","byte_start":116594,"byte_end":116617,"line_start":597,"line_end":597,"column_start":5,"column_end":28}},{"value":"inline","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/easy.rs","byte_start":116622,"byte_end":116631,"line_start":598,"line_end":598,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":459},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/easy.rs","byte_start":116878,"byte_end":116887,"line_start":605,"line_end":605,"column_start":12,"column_end":21},"name":"add_error","qualname":"<Errors<I, R, P>>::add_error","value":"pub fn add_error(&mut Self, Error<I, R>) where I: PartialEq, R: PartialEq","parent":null,"children":[],"decl_id":null,"docs":" Adds an error if `error` does not exist in this `ParseError` already (as determined byte\n `PartialEq`).\n","sig":null,"attributes":[{"value":"/ Adds an error if `error` does not exist in this `ParseError` already (as determined byte","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/easy.rs","byte_start":116752,"byte_end":116844,"line_start":603,"line_end":603,"column_start":5,"column_end":97}},{"value":"/ `PartialEq`).","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/easy.rs","byte_start":116849,"byte_end":116866,"line_start":604,"line_end":604,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":461},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/easy.rs","byte_start":117212,"byte_end":117224,"line_start":617,"line_end":617,"column_start":12,"column_end":24},"name":"set_expected","qualname":"<Errors<I, R, P>>::set_expected","value":"pub fn set_expected(&mut Self, Info<I, R>)","parent":null,"children":[],"decl_id":null,"docs":" Removes all `Expected` errors in `self` and adds `info` instead.\n","sig":null,"attributes":[{"value":"/ Removes all `Expected` errors in `self` and adds `info` instead.","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/easy.rs","byte_start":117132,"byte_end":117200,"line_start":616,"line_end":616,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":463},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/easy.rs","byte_start":117763,"byte_end":117768,"line_start":629,"line_end":629,"column_start":12,"column_end":17},"name":"merge","qualname":"<Errors<I, R, P>>::merge","value":"pub fn merge(Self, Errors<I, R, P>) -> Errors<I, R, P> where P: Ord,\nI: PartialEq, R: PartialEq","parent":null,"children":[],"decl_id":null,"docs":" Merges two `ParseError`s. If they exist at the same position the errors of `other` are\n added to `self` (using `add_error` to skip duplicates). If they are not at the same\n position the error furthest ahead are returned, ignoring the other `ParseError`.\n","sig":null,"attributes":[{"value":"/ Merges two `ParseError`s. If they exist at the same position the errors of `other` are","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/easy.rs","byte_start":117480,"byte_end":117570,"line_start":626,"line_end":626,"column_start":5,"column_end":95}},{"value":"/ added to `self` (using `add_error` to skip duplicates). If they are not at the same","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/easy.rs","byte_start":117575,"byte_end":117662,"line_start":627,"line_end":627,"column_start":5,"column_end":92}},{"value":"/ position the error furthest ahead are returned, ignoring the other `ParseError`.","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/easy.rs","byte_start":117667,"byte_end":117751,"line_start":628,"line_end":628,"column_start":5,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":465},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/easy.rs","byte_start":118404,"byte_end":118416,"line_start":650,"line_end":650,"column_start":12,"column_end":24},"name":"map_position","qualname":"<Errors<I, R, P>>::map_position","value":"pub fn map_position<F, Q>(Self, F) -> Errors<I, R, Q> where F: FnOnce(P) -> Q","parent":null,"children":[],"decl_id":null,"docs":" Maps the position to a new value\n","sig":null,"attributes":[{"value":"/ Maps the position to a new value","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/easy.rs","byte_start":118356,"byte_end":118392,"line_start":649,"line_end":649,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":468},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/easy.rs","byte_start":118621,"byte_end":118630,"line_start":658,"line_end":658,"column_start":12,"column_end":21},"name":"map_token","qualname":"<Errors<I, R, P>>::map_token","value":"pub fn map_token<F, U>(Self, F) -> Errors<U, R, P> where F: FnMut(I) -> U","parent":null,"children":[],"decl_id":null,"docs":" Maps all token variants to a new value\n","sig":null,"attributes":[{"value":"/ Maps all token variants to a new value","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/easy.rs","byte_start":118567,"byte_end":118609,"line_start":657,"line_end":657,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":472},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/easy.rs","byte_start":119287,"byte_end":119296,"line_start":684,"line_end":684,"column_start":12,"column_end":21},"name":"map_range","qualname":"<Errors<I, R, P>>::map_range","value":"pub fn map_range<F, S>(Self, F) -> Errors<I, S, P> where F: FnMut(R) -> S","parent":null,"children":[],"decl_id":null,"docs":" Maps all range variants to a new value.","sig":null,"attributes":[{"value":"/ Maps all range variants to a new value.","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/easy.rs","byte_start":118926,"byte_end":118969,"line_start":671,"line_end":671,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/easy.rs","byte_start":118974,"byte_end":118977,"line_start":672,"line_end":672,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/easy.rs","byte_start":118982,"byte_end":118989,"line_start":673,"line_end":673,"column_start":5,"column_end":12}},{"value":"/ use combine::Parser;","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/easy.rs","byte_start":118994,"byte_end":119018,"line_start":674,"line_end":674,"column_start":5,"column_end":29}},{"value":"/ use combine::parser::range::range;","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/easy.rs","byte_start":119023,"byte_end":119061,"line_start":675,"line_end":675,"column_start":5,"column_end":43}},{"value":"/ println!(","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/easy.rs","byte_start":119066,"byte_end":119079,"line_start":676,"line_end":676,"column_start":5,"column_end":18}},{"value":"/     \"{}\",","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/easy.rs","byte_start":119084,"byte_end":119097,"line_start":677,"line_end":677,"column_start":5,"column_end":18}},{"value":"/     range(&\"HTTP\"[..])","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/easy.rs","byte_start":119102,"byte_end":119128,"line_start":678,"line_end":678,"column_start":5,"column_end":31}},{"value":"/         .easy_parse(\"HTT\")","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/easy.rs","byte_start":119133,"byte_end":119163,"line_start":679,"line_end":679,"column_start":5,"column_end":35}},{"value":"/         .unwrap_err()","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/easy.rs","byte_start":119168,"byte_end":119193,"line_start":680,"line_end":680,"column_start":5,"column_end":30}},{"value":"/         .map_range(|bytes| format!(\"{:?}\", bytes))","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/easy.rs","byte_start":119198,"byte_end":119252,"line_start":681,"line_end":681,"column_start":5,"column_end":59}},{"value":"/ );","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/easy.rs","byte_start":119257,"byte_end":119263,"line_start":682,"line_end":682,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/easy.rs","byte_start":119268,"byte_end":119275,"line_start":683,"line_end":683,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":2451},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/easy.rs","byte_start":120555,"byte_end":120561,"line_start":733,"line_end":733,"column_start":12,"column_end":18},"name":"Stream","qualname":"::stream::easy::Stream","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2454},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/easy.rs","byte_start":120565,"byte_end":120570,"line_start":733,"line_end":733,"column_start":22,"column_end":27},"name":"0","qualname":"::stream::easy::Stream::0","value":"S","parent":{"krate":0,"index":2451},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":517},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/state.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"state","qualname":"::stream::state","value":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/state.rs","parent":null,"children":[{"krate":0,"index":518},{"krate":0,"index":519},{"krate":0,"index":520},{"krate":0,"index":521},{"krate":0,"index":522},{"krate":0,"index":523},{"krate":0,"index":524},{"krate":0,"index":525},{"krate":0,"index":8096},{"krate":0,"index":526},{"krate":0,"index":527},{"krate":0,"index":528},{"krate":0,"index":529},{"krate":0,"index":8104},{"krate":0,"index":530},{"krate":0,"index":531},{"krate":0,"index":532},{"krate":0,"index":533},{"krate":0,"index":538},{"krate":0,"index":542},{"krate":0,"index":544},{"krate":0,"index":547},{"krate":0,"index":551},{"krate":0,"index":555},{"krate":0,"index":558},{"krate":0,"index":2463},{"krate":0,"index":2480},{"krate":0,"index":2476},{"krate":0,"index":2468},{"krate":0,"index":2471},{"krate":0,"index":561},{"krate":0,"index":565},{"krate":0,"index":568},{"krate":0,"index":573},{"krate":0,"index":2484},{"krate":0,"index":2495},{"krate":0,"index":2493},{"krate":0,"index":2491},{"krate":0,"index":2487},{"krate":0,"index":2488},{"krate":0,"index":2497},{"krate":0,"index":584},{"krate":0,"index":589},{"krate":0,"index":592},{"krate":0,"index":2501},{"krate":0,"index":2526},{"krate":0,"index":2525},{"krate":0,"index":2523},{"krate":0,"index":2520},{"krate":0,"index":2521},{"krate":0,"index":2516},{"krate":0,"index":2517},{"krate":0,"index":2514},{"krate":0,"index":2504},{"krate":0,"index":2528},{"krate":0,"index":596},{"krate":0,"index":598},{"krate":0,"index":600},{"krate":0,"index":602},{"krate":0,"index":606},{"krate":0,"index":609},{"krate":0,"index":622},{"krate":0,"index":628}],"decl_id":null,"docs":" Stateful stream wrappers.\n","sig":null,"attributes":[{"value":"/ Stateful stream wrappers.","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/mod.rs","byte_start":67162,"byte_end":67191,"line_start":53,"line_end":53,"column_start":1,"column_end":30}}]},{"kind":"Trait","id":{"krate":0,"index":533},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/state.rs","byte_start":123496,"byte_end":123506,"line_start":13,"line_end":13,"column_start":11,"column_end":21},"name":"Positioner","qualname":"::stream::state::Positioner","value":"Positioner<Item>","parent":null,"children":[{"krate":0,"index":535},{"krate":0,"index":536},{"krate":0,"index":537}],"decl_id":null,"docs":" Trait for tracking the current position of a `Stream`.\n","sig":null,"attributes":[{"value":"/ Trait for tracking the current position of a `Stream`.","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/state.rs","byte_start":123427,"byte_end":123485,"line_start":12,"line_end":12,"column_start":1,"column_end":59}}]},{"kind":"Type","id":{"krate":0,"index":535},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/state.rs","byte_start":123575,"byte_end":123583,"line_start":15,"line_end":15,"column_start":10,"column_end":18},"name":"Position","qualname":"::stream::state::Positioner::Position","value":"type Position: Clone + Ord;","parent":{"krate":0,"index":533},"children":[],"decl_id":null,"docs":" The type which keeps track of the position\n","sig":null,"attributes":[{"value":"/ The type which keeps track of the position","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/state.rs","byte_start":123519,"byte_end":123565,"line_start":14,"line_end":14,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":536},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/state.rs","byte_start":123642,"byte_end":123650,"line_start":17,"line_end":17,"column_start":8,"column_end":16},"name":"position","qualname":"::stream::state::Positioner::position","value":"pub fn position(&Self) -> Self::Position","parent":{"krate":0,"index":533},"children":[],"decl_id":null,"docs":" Returns the current position\n","sig":null,"attributes":[{"value":"/ Returns the current position","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/state.rs","byte_start":123602,"byte_end":123634,"line_start":16,"line_end":16,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":537},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/state.rs","byte_start":123762,"byte_end":123768,"line_start":19,"line_end":19,"column_start":8,"column_end":14},"name":"update","qualname":"::stream::state::Positioner::update","value":"pub fn update(&mut Self, &Item)","parent":{"krate":0,"index":533},"children":[],"decl_id":null,"docs":" Updates the position given that `item` has been taken from the stream\n","sig":null,"attributes":[{"value":"/ Updates the position given that `item` has been taken from the stream","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/state.rs","byte_start":123681,"byte_end":123754,"line_start":18,"line_end":18,"column_start":5,"column_end":78}}]},{"kind":"Trait","id":{"krate":0,"index":538},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/state.rs","byte_start":123871,"byte_end":123886,"line_start":23,"line_end":23,"column_start":11,"column_end":26},"name":"RangePositioner","qualname":"::stream::state::RangePositioner","value":"RangePositioner<Item, Range>: Positioner<Item>","parent":null,"children":[{"krate":0,"index":541}],"decl_id":null,"docs":" Trait for tracking the current position of a `RangeStream`.\n","sig":null,"attributes":[{"value":"/ Trait for tracking the current position of a `RangeStream`.","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/state.rs","byte_start":123797,"byte_end":123860,"line_start":22,"line_end":22,"column_start":1,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":541},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/state.rs","byte_start":124006,"byte_end":124018,"line_start":25,"line_end":25,"column_start":8,"column_end":20},"name":"update_range","qualname":"::stream::state::RangePositioner::update_range","value":"pub fn update_range(&mut Self, &Range)","parent":{"krate":0,"index":538},"children":[],"decl_id":null,"docs":" Updates the position given that `range` has been taken from the stream\n","sig":null,"attributes":[{"value":"/ Updates the position given that `range` has been taken from the stream","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/state.rs","byte_start":123924,"byte_end":123998,"line_start":24,"line_end":24,"column_start":5,"column_end":79}}]},{"kind":"Trait","id":{"krate":0,"index":542},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/state.rs","byte_start":124131,"byte_end":124148,"line_start":29,"line_end":29,"column_start":11,"column_end":28},"name":"DefaultPositioned","qualname":"::stream::state::DefaultPositioned","value":"DefaultPositioned","parent":null,"children":[{"krate":0,"index":543}],"decl_id":null,"docs":" Defines a default `Positioner` type for a particular `Stream` type.\n","sig":null,"attributes":[{"value":"/ Defines a default `Positioner` type for a particular `Stream` type.","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/state.rs","byte_start":124049,"byte_end":124120,"line_start":28,"line_end":28,"column_start":1,"column_end":72}}]},{"kind":"Type","id":{"krate":0,"index":543},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/state.rs","byte_start":124160,"byte_end":124170,"line_start":30,"line_end":30,"column_start":10,"column_end":20},"name":"Positioner","qualname":"::stream::state::DefaultPositioned::Positioner","value":"type Positioner: Default;","parent":{"krate":0,"index":542},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2463},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/state.rs","byte_start":125449,"byte_end":125454,"line_start":78,"line_end":78,"column_start":12,"column_end":17},"name":"State","qualname":"::stream::state::State","value":"State { input, positioner }","parent":null,"children":[{"krate":0,"index":2466},{"krate":0,"index":2467}],"decl_id":null,"docs":" The `State<I>` struct maintains the current position in the stream `I` using\n the `Positioner` trait to track the position.","sig":null,"attributes":[{"value":"/ The `State<I>` struct maintains the current position in the stream `I` using","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/state.rs","byte_start":124653,"byte_end":124733,"line_start":54,"line_end":54,"column_start":1,"column_end":81}},{"value":"/ the `Positioner` trait to track the position.","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/state.rs","byte_start":124734,"byte_end":124783,"line_start":55,"line_end":55,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/state.rs","byte_start":124784,"byte_end":124787,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/state.rs","byte_start":124788,"byte_end":124795,"line_start":57,"line_end":57,"column_start":1,"column_end":8}},{"value":"/ # #![cfg(feature = \"std\")]","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/state.rs","byte_start":124796,"byte_end":124826,"line_start":58,"line_end":58,"column_start":1,"column_end":31}},{"value":"/ # extern crate combine;","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/state.rs","byte_start":124827,"byte_end":124854,"line_start":59,"line_end":59,"column_start":1,"column_end":28}},{"value":"/ # use combine::{token, Parser};","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/state.rs","byte_start":124855,"byte_end":124890,"line_start":60,"line_end":60,"column_start":1,"column_end":36}},{"value":"/ # use combine::stream::easy;","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/state.rs","byte_start":124891,"byte_end":124923,"line_start":61,"line_end":61,"column_start":1,"column_end":33}},{"value":"/ # use combine::stream::state::State;","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/state.rs","byte_start":124924,"byte_end":124964,"line_start":62,"line_end":62,"column_start":1,"column_end":41}},{"value":"/ # fn main() {","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/state.rs","byte_start":124965,"byte_end":124982,"line_start":63,"line_end":63,"column_start":1,"column_end":18}},{"value":"/     let result = token(b'9')","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/state.rs","byte_start":124983,"byte_end":125015,"line_start":64,"line_end":64,"column_start":1,"column_end":33}},{"value":"/         .message(\"Not a nine\")","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/state.rs","byte_start":125016,"byte_end":125050,"line_start":65,"line_end":65,"column_start":1,"column_end":35}},{"value":"/         .easy_parse(State::new(&b\"8\"[..]));","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/state.rs","byte_start":125051,"byte_end":125098,"line_start":66,"line_end":66,"column_start":1,"column_end":48}},{"value":"/     assert_eq!(result, Err(easy::Errors {","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/state.rs","byte_start":125099,"byte_end":125144,"line_start":67,"line_end":67,"column_start":1,"column_end":46}},{"value":"/         position: 0,","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/state.rs","byte_start":125145,"byte_end":125169,"line_start":68,"line_end":68,"column_start":1,"column_end":25}},{"value":"/         errors: vec![","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/state.rs","byte_start":125170,"byte_end":125195,"line_start":69,"line_end":69,"column_start":1,"column_end":26}},{"value":"/             easy::Error::Unexpected(b'8'.into()),","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/state.rs","byte_start":125196,"byte_end":125249,"line_start":70,"line_end":70,"column_start":1,"column_end":54}},{"value":"/             easy::Error::Expected(b'9'.into()),","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/state.rs","byte_start":125250,"byte_end":125301,"line_start":71,"line_end":71,"column_start":1,"column_end":52}},{"value":"/             easy::Error::Message(\"Not a nine\".into())","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/state.rs","byte_start":125302,"byte_end":125359,"line_start":72,"line_end":72,"column_start":1,"column_end":58}},{"value":"/         ]","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/state.rs","byte_start":125360,"byte_end":125373,"line_start":73,"line_end":73,"column_start":1,"column_end":14}},{"value":"/     }));","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/state.rs","byte_start":125374,"byte_end":125386,"line_start":74,"line_end":74,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/state.rs","byte_start":125387,"byte_end":125394,"line_start":75,"line_end":75,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/state.rs","byte_start":125395,"byte_end":125402,"line_start":76,"line_end":76,"column_start":1,"column_end":8}}]},{"kind":"Field","id":{"krate":0,"index":2466},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/state.rs","byte_start":125526,"byte_end":125531,"line_start":80,"line_end":80,"column_start":9,"column_end":14},"name":"input","qualname":"::stream::state::State::input","value":"I","parent":{"krate":0,"index":2463},"children":[],"decl_id":null,"docs":" The input stream used when items are requested\n","sig":null,"attributes":[{"value":"/ The input stream used when items are requested","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/state.rs","byte_start":125467,"byte_end":125517,"line_start":79,"line_end":79,"column_start":5,"column_end":55}}]},{"kind":"Field","id":{"krate":0,"index":2467},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/state.rs","byte_start":125603,"byte_end":125613,"line_start":82,"line_end":82,"column_start":9,"column_end":19},"name":"positioner","qualname":"::stream::state::State::positioner","value":"X","parent":{"krate":0,"index":2463},"children":[],"decl_id":null,"docs":" The positioner used to update the current position\n","sig":null,"attributes":[{"value":"/ The positioner used to update the current position","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/state.rs","byte_start":125540,"byte_end":125594,"line_start":81,"line_end":81,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":564},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/state.rs","byte_start":125785,"byte_end":125800,"line_start":91,"line_end":91,"column_start":12,"column_end":27},"name":"with_positioner","qualname":"<State<I, X>>::with_positioner","value":"pub fn with_positioner(I, X) -> State<I, X>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `State<I, X>` from an input stream and a positioner.\n","sig":null,"attributes":[{"value":"/ Creates a new `State<I, X>` from an input stream and a positioner.","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/state.rs","byte_start":125703,"byte_end":125773,"line_start":90,"line_end":90,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":567},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/state.rs","byte_start":126103,"byte_end":126106,"line_start":102,"line_end":102,"column_start":12,"column_end":15},"name":"new","qualname":"<State<I, I::Positioner>>::new","value":"pub fn new(I) -> State<I, I::Positioner>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `State<I, X>` from an input stream and its default positioner.\n","sig":null,"attributes":[{"value":"/ Creates a new `State<I, X>` from an input stream and its default positioner.","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/state.rs","byte_start":126011,"byte_end":126091,"line_start":101,"line_end":101,"column_start":5,"column_end":85}}]},{"kind":"Struct","id":{"krate":0,"index":2484},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/state.rs","byte_start":127581,"byte_end":127596,"line_start":151,"line_end":151,"column_start":12,"column_end":27},"name":"IndexPositioner","qualname":"::stream::state::IndexPositioner","value":"","parent":null,"children":[],"decl_id":null,"docs":" The `IndexPositioner<Item, Range>` struct maintains the current index into the stream `I`.  The\n initial index is index 0.  Each `Item` consumed increments the index by 1; each `range` consumed\n increments the position by `range.len()`.\n","sig":null,"attributes":[{"value":"/ The `IndexPositioner<Item, Range>` struct maintains the current index into the stream `I`.  The","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/state.rs","byte_start":127279,"byte_end":127378,"line_start":147,"line_end":147,"column_start":1,"column_end":100}},{"value":"/ initial index is index 0.  Each `Item` consumed increments the index by 1; each `range` consumed","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/state.rs","byte_start":127379,"byte_end":127479,"line_start":148,"line_end":148,"column_start":1,"column_end":101}},{"value":"/ increments the position by `range.len()`.","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/state.rs","byte_start":127480,"byte_end":127525,"line_start":149,"line_end":149,"column_start":1,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":590},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/state.rs","byte_start":127956,"byte_end":127959,"line_start":173,"line_end":173,"column_start":12,"column_end":15},"name":"new","qualname":"<IndexPositioner>::new","value":"pub fn new() -> IndexPositioner","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":591},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/state.rs","byte_start":128047,"byte_end":128064,"line_start":177,"line_end":177,"column_start":12,"column_end":29},"name":"new_with_position","qualname":"<IndexPositioner>::new_with_position","value":"pub fn new_with_position(usize) -> IndexPositioner","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2501},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/state.rs","byte_start":128515,"byte_end":128529,"line_start":194,"line_end":194,"column_start":12,"column_end":26},"name":"SourcePosition","qualname":"::stream::state::SourcePosition","value":"SourcePosition { line, column }","parent":null,"children":[{"krate":0,"index":2502},{"krate":0,"index":2503}],"decl_id":null,"docs":" Struct which represents a position in a source file.\n","sig":null,"attributes":[{"value":"/ Struct which represents a position in a source file.","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/state.rs","byte_start":128385,"byte_end":128441,"line_start":192,"line_end":192,"column_start":1,"column_end":57}}]},{"kind":"Field","id":{"krate":0,"index":2502},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/state.rs","byte_start":128574,"byte_end":128578,"line_start":196,"line_end":196,"column_start":9,"column_end":13},"name":"line","qualname":"::stream::state::SourcePosition::line","value":"i32","parent":{"krate":0,"index":2501},"children":[],"decl_id":null,"docs":" Current line of the input\n","sig":null,"attributes":[{"value":"/ Current line of the input","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/state.rs","byte_start":128536,"byte_end":128565,"line_start":195,"line_end":195,"column_start":5,"column_end":34}}]},{"kind":"Field","id":{"krate":0,"index":2503},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/state.rs","byte_start":128629,"byte_end":128635,"line_start":198,"line_end":198,"column_start":9,"column_end":15},"name":"column","qualname":"::stream::state::SourcePosition::column","value":"i32","parent":{"krate":0,"index":2501},"children":[],"decl_id":null,"docs":" Current column of the input\n","sig":null,"attributes":[{"value":"/ Current column of the input","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/state.rs","byte_start":128589,"byte_end":128620,"line_start":197,"line_end":197,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":601},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/state.rs","byte_start":129007,"byte_end":129010,"line_start":216,"line_end":216,"column_start":12,"column_end":15},"name":"new","qualname":"<SourcePosition>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":633},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/mod.rs","byte_start":67251,"byte_end":67261,"line_start":57,"line_end":57,"column_start":11,"column_end":21},"name":"Positioned","qualname":"::stream::Positioned","value":"Positioned: StreamOnce","parent":null,"children":[{"krate":0,"index":634}],"decl_id":null,"docs":" A type which has a position.\n","sig":null,"attributes":[{"value":"/ A type which has a position.","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/mod.rs","byte_start":67208,"byte_end":67240,"line_start":56,"line_end":56,"column_start":1,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":634},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/mod.rs","byte_start":67335,"byte_end":67343,"line_start":59,"line_end":59,"column_start":8,"column_end":16},"name":"position","qualname":"::stream::Positioned::position","value":"pub fn position(&Self) -> Self::Position","parent":{"krate":0,"index":633},"children":[],"decl_id":null,"docs":" Returns the current position of the stream.\n","sig":null,"attributes":[{"value":"/ Returns the current position of the stream.","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/mod.rs","byte_start":67280,"byte_end":67327,"line_start":58,"line_end":58,"column_start":5,"column_end":52}}]},{"kind":"Type","id":{"krate":0,"index":635},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/mod.rs","byte_start":68190,"byte_end":68204,"line_start":90,"line_end":90,"column_start":10,"column_end":24},"name":"StreamErrorFor","qualname":"::stream::StreamErrorFor","value":"<<I as StreamOnce>::Error as\nParseError<<I as StreamOnce>::Item, <I as StreamOnce>::Range,\n           <I as StreamOnce>::Position>>::StreamError","parent":null,"children":[],"decl_id":null,"docs":" Convenience alias over the `StreamError` for the input stream `I`","sig":null,"attributes":[{"value":"/ Convenience alias over the `StreamError` for the input stream `I`","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/mod.rs","byte_start":67373,"byte_end":67442,"line_start":62,"line_end":62,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/mod.rs","byte_start":67443,"byte_end":67446,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/mod.rs","byte_start":67447,"byte_end":67454,"line_start":64,"line_end":64,"column_start":1,"column_end":8}},{"value":"/ #[macro_use]","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/mod.rs","byte_start":67455,"byte_end":67471,"line_start":65,"line_end":65,"column_start":1,"column_end":17}},{"value":"/ extern crate combine;","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/mod.rs","byte_start":67472,"byte_end":67497,"line_start":66,"line_end":66,"column_start":1,"column_end":26}},{"value":"/ use combine::{easy, Parser, Stream, many1};","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/mod.rs","byte_start":67498,"byte_end":67545,"line_start":67,"line_end":67,"column_start":1,"column_end":48}},{"value":"/ use combine::parser::char::letter;","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/mod.rs","byte_start":67546,"byte_end":67584,"line_start":68,"line_end":68,"column_start":1,"column_end":39}},{"value":"/ use combine::stream::StreamErrorFor;","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/mod.rs","byte_start":67585,"byte_end":67625,"line_start":69,"line_end":69,"column_start":1,"column_end":41}},{"value":"/ use combine::error::{ParseError, StreamError};","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/mod.rs","byte_start":67626,"byte_end":67676,"line_start":70,"line_end":70,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/mod.rs","byte_start":67677,"byte_end":67680,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ parser!{","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/mod.rs","byte_start":67681,"byte_end":67693,"line_start":72,"line_end":72,"column_start":1,"column_end":13}},{"value":"/    fn parser[I]()(I) -> String","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/mod.rs","byte_start":67694,"byte_end":67728,"line_start":73,"line_end":73,"column_start":1,"column_end":35}},{"value":"/     where [ I: Stream<Item = char>, ]","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/mod.rs","byte_start":67729,"byte_end":67770,"line_start":74,"line_end":74,"column_start":1,"column_end":42}},{"value":"/     {","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/mod.rs","byte_start":67771,"byte_end":67780,"line_start":75,"line_end":75,"column_start":1,"column_end":10}},{"value":"/         many1(letter()).and_then(|word: String| {","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/mod.rs","byte_start":67781,"byte_end":67834,"line_start":76,"line_end":76,"column_start":1,"column_end":54}},{"value":"/             if word == \"combine\" {","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/mod.rs","byte_start":67835,"byte_end":67873,"line_start":77,"line_end":77,"column_start":1,"column_end":39}},{"value":"/                 Ok(word)","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/mod.rs","byte_start":67874,"byte_end":67902,"line_start":78,"line_end":78,"column_start":1,"column_end":29}},{"value":"/             } else {","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/mod.rs","byte_start":67903,"byte_end":67927,"line_start":79,"line_end":79,"column_start":1,"column_end":25}},{"value":"/                 // The alias makes it easy to refer to the `StreamError` type of `I`","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/mod.rs","byte_start":67928,"byte_end":68016,"line_start":80,"line_end":80,"column_start":1,"column_end":89}},{"value":"/                 Err(StreamErrorFor::<I>::expected_static_message(\"combine\"))","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/mod.rs","byte_start":68017,"byte_end":68097,"line_start":81,"line_end":81,"column_start":1,"column_end":81}},{"value":"/             }","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/mod.rs","byte_start":68098,"byte_end":68115,"line_start":82,"line_end":82,"column_start":1,"column_end":18}},{"value":"/         })","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/mod.rs","byte_start":68116,"byte_end":68130,"line_start":83,"line_end":83,"column_start":1,"column_end":15}},{"value":"/     }","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/mod.rs","byte_start":68131,"byte_end":68140,"line_start":84,"line_end":84,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/mod.rs","byte_start":68141,"byte_end":68146,"line_start":85,"line_end":85,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/mod.rs","byte_start":68147,"byte_end":68150,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"/ fn main() {","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/mod.rs","byte_start":68151,"byte_end":68166,"line_start":87,"line_end":87,"column_start":1,"column_end":16}},{"value":"/ }","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/mod.rs","byte_start":68167,"byte_end":68172,"line_start":88,"line_end":88,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/mod.rs","byte_start":68173,"byte_end":68180,"line_start":89,"line_end":89,"column_start":1,"column_end":8}}]},{"kind":"Trait","id":{"krate":0,"index":637},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/mod.rs","byte_start":68453,"byte_end":68463,"line_start":97,"line_end":97,"column_start":11,"column_end":21},"name":"StreamOnce","qualname":"::stream::StreamOnce","value":"StreamOnce","parent":null,"children":[{"krate":0,"index":638},{"krate":0,"index":639},{"krate":0,"index":640},{"krate":0,"index":641},{"krate":0,"index":642},{"krate":0,"index":643}],"decl_id":null,"docs":" `StreamOnce` represents a sequence of items that can be extracted one by one.\n","sig":null,"attributes":[{"value":"/ `StreamOnce` represents a sequence of items that can be extracted one by one.","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/mod.rs","byte_start":68361,"byte_end":68442,"line_start":96,"line_end":96,"column_start":1,"column_end":82}}]},{"kind":"Type","id":{"krate":0,"index":638},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/mod.rs","byte_start":68536,"byte_end":68540,"line_start":99,"line_end":99,"column_start":10,"column_end":14},"name":"Item","qualname":"::stream::StreamOnce::Item","value":"type Item: Clone + PartialEq;","parent":{"krate":0,"index":637},"children":[],"decl_id":null,"docs":" The type of items which is yielded from this stream.\n","sig":null,"attributes":[{"value":"/ The type of items which is yielded from this stream.","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/mod.rs","byte_start":68470,"byte_end":68526,"line_start":98,"line_end":98,"column_start":5,"column_end":61}}]},{"kind":"Type","id":{"krate":0,"index":639},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/mod.rs","byte_start":68758,"byte_end":68763,"line_start":104,"line_end":104,"column_start":10,"column_end":15},"name":"Range","qualname":"::stream::StreamOnce::Range","value":"type Range: Clone + PartialEq;","parent":{"krate":0,"index":637},"children":[],"decl_id":null,"docs":" The type of a range of items yielded from this stream.\n Types which do not a have a way of yielding ranges of items should just use the\n `Self::Item` for this type.\n","sig":null,"attributes":[{"value":"/ The type of a range of items yielded from this stream.","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/mod.rs","byte_start":68566,"byte_end":68624,"line_start":101,"line_end":101,"column_start":5,"column_end":63}},{"value":"/ Types which do not a have a way of yielding ranges of items should just use the","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/mod.rs","byte_start":68629,"byte_end":68712,"line_start":102,"line_end":102,"column_start":5,"column_end":88}},{"value":"/ `Self::Item` for this type.","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/mod.rs","byte_start":68717,"byte_end":68748,"line_start":103,"line_end":103,"column_start":5,"column_end":36}}]},{"kind":"Type","id":{"krate":0,"index":640},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/mod.rs","byte_start":68948,"byte_end":68956,"line_start":108,"line_end":108,"column_start":10,"column_end":18},"name":"Position","qualname":"::stream::StreamOnce::Position","value":"type Position: Clone + Ord;","parent":{"krate":0,"index":637},"children":[],"decl_id":null,"docs":" Type which represents the position in a stream.\n `Ord` is required to allow parsers to determine which of two positions are further ahead.\n","sig":null,"attributes":[{"value":"/ Type which represents the position in a stream.","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/mod.rs","byte_start":68789,"byte_end":68840,"line_start":106,"line_end":106,"column_start":5,"column_end":56}},{"value":"/ `Ord` is required to allow parsers to determine which of two positions are further ahead.","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/mod.rs","byte_start":68845,"byte_end":68938,"line_start":107,"line_end":107,"column_start":5,"column_end":98}}]},{"kind":"Type","id":{"krate":0,"index":641},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/mod.rs","byte_start":68981,"byte_end":68986,"line_start":110,"line_end":110,"column_start":10,"column_end":15},"name":"Error","qualname":"::stream::StreamOnce::Error","value":"type Error: ParseError<Self::Item, Self::Range, Self::Position>;","parent":{"krate":0,"index":637},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":642},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/mod.rs","byte_start":69203,"byte_end":69209,"line_start":113,"line_end":113,"column_start":8,"column_end":14},"name":"uncons","qualname":"::stream::StreamOnce::uncons","value":"pub fn uncons(&mut Self) -> Result<Self::Item, StreamErrorFor<Self>>","parent":{"krate":0,"index":637},"children":[],"decl_id":null,"docs":" Takes a stream and removes its first item, yielding the item and the rest of the elements.\n Returns `Err` if no element could be retrieved.\n","sig":null,"attributes":[{"value":"/ Takes a stream and removes its first item, yielding the item and the rest of the elements.","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/mod.rs","byte_start":69045,"byte_end":69139,"line_start":111,"line_end":111,"column_start":5,"column_end":99}},{"value":"/ Returns `Err` if no element could be retrieved.","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/mod.rs","byte_start":69144,"byte_end":69195,"line_start":112,"line_end":112,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":643},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/mod.rs","byte_start":69378,"byte_end":69388,"line_start":118,"line_end":118,"column_start":8,"column_end":18},"name":"is_partial","qualname":"::stream::StreamOnce::is_partial","value":"pub fn is_partial(&Self) -> bool","parent":{"krate":0,"index":637},"children":[],"decl_id":null,"docs":" Returns `true` if this stream only contains partial input.","sig":null,"attributes":[{"value":"/ Returns `true` if this stream only contains partial input.","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/mod.rs","byte_start":69271,"byte_end":69333,"line_start":115,"line_end":115,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/mod.rs","byte_start":69338,"byte_end":69341,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ See `PartialStream`.","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/mod.rs","byte_start":69346,"byte_end":69370,"line_start":117,"line_end":117,"column_start":5,"column_end":29}}]},{"kind":"Trait","id":{"krate":0,"index":644},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/mod.rs","byte_start":69439,"byte_end":69448,"line_start":123,"line_end":123,"column_start":11,"column_end":20},"name":"Resetable","qualname":"::stream::Resetable","value":"Resetable","parent":null,"children":[{"krate":0,"index":645},{"krate":0,"index":646},{"krate":0,"index":647}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":645},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/mod.rs","byte_start":69460,"byte_end":69470,"line_start":124,"line_end":124,"column_start":10,"column_end":20},"name":"Checkpoint","qualname":"::stream::Resetable::Checkpoint","value":"type Checkpoint: Clone;","parent":{"krate":0,"index":644},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":646},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/mod.rs","byte_start":69487,"byte_end":69497,"line_start":126,"line_end":126,"column_start":8,"column_end":18},"name":"checkpoint","qualname":"::stream::Resetable::checkpoint","value":"pub fn checkpoint(&Self) -> Self::Checkpoint","parent":{"krate":0,"index":644},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":647},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/mod.rs","byte_start":69533,"byte_end":69538,"line_start":127,"line_end":127,"column_start":8,"column_end":13},"name":"reset","qualname":"::stream::Resetable::reset","value":"pub fn reset(&mut Self, Self::Checkpoint)","parent":{"krate":0,"index":644},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":648},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/mod.rs","byte_start":69804,"byte_end":69810,"line_start":136,"line_end":136,"column_start":11,"column_end":17},"name":"Stream","qualname":"::stream::Stream","value":"Stream: StreamOnce + Resetable + Positioned","parent":null,"children":[],"decl_id":null,"docs":" A stream of tokens which can be duplicated\n","sig":null,"attributes":[{"value":"/ A stream of tokens which can be duplicated","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/mod.rs","byte_start":69747,"byte_end":69793,"line_start":135,"line_end":135,"column_start":1,"column_end":47}}]},{"kind":"Function","id":{"krate":0,"index":651},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/mod.rs","byte_start":70003,"byte_end":70009,"line_start":146,"line_end":146,"column_start":8,"column_end":14},"name":"uncons","qualname":"::stream::uncons","value":"pub fn uncons<I: ?Sized>(&mut I) -> ConsumedResult<I::Item, I> where I: Stream","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/mod.rs","byte_start":69986,"byte_end":69995,"line_start":145,"line_end":145,"column_start":1,"column_end":10}}]},{"kind":"Trait","id":{"krate":0,"index":653},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/mod.rs","byte_start":70307,"byte_end":70322,"line_start":157,"line_end":157,"column_start":11,"column_end":26},"name":"RangeStreamOnce","qualname":"::stream::RangeStreamOnce","value":"RangeStreamOnce: StreamOnce + Resetable","parent":null,"children":[{"krate":0,"index":654},{"krate":0,"index":655},{"krate":0,"index":657},{"krate":0,"index":660}],"decl_id":null,"docs":" A `RangeStream` is an extension of `StreamOnce` which allows for zero copy parsing.\n","sig":null,"attributes":[{"value":"/ A `RangeStream` is an extension of `StreamOnce` which allows for zero copy parsing.","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/mod.rs","byte_start":70209,"byte_end":70296,"line_start":156,"line_end":156,"column_start":1,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":654},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/mod.rs","byte_start":70466,"byte_end":70478,"line_start":160,"line_end":160,"column_start":8,"column_end":20},"name":"uncons_range","qualname":"::stream::RangeStreamOnce::uncons_range","value":"pub fn uncons_range(&mut Self, usize)\n-> Result<Self::Range, StreamErrorFor<Self>>","parent":{"krate":0,"index":653},"children":[],"decl_id":null,"docs":" Takes `size` elements from the stream.\n Fails if the length of the stream is less than `size`.\n","sig":null,"attributes":[{"value":"/ Takes `size` elements from the stream.","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/mod.rs","byte_start":70353,"byte_end":70395,"line_start":158,"line_end":158,"column_start":5,"column_end":47}},{"value":"/ Fails if the length of the stream is less than `size`.","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/mod.rs","byte_start":70400,"byte_end":70458,"line_start":159,"line_end":159,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":655},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/mod.rs","byte_start":70686,"byte_end":70698,"line_start":164,"line_end":164,"column_start":8,"column_end":20},"name":"uncons_while","qualname":"::stream::RangeStreamOnce::uncons_while","value":"pub fn uncons_while<F>(&mut Self, F)\n-> Result<Self::Range, StreamErrorFor<Self>> where F: FnMut(Self::Item) ->\nbool","parent":{"krate":0,"index":653},"children":[],"decl_id":null,"docs":" Takes items from stream, testing each one with `predicate`.\n returns the range of items which passed `predicate`.\n","sig":null,"attributes":[{"value":"/ Takes items from stream, testing each one with `predicate`.","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/mod.rs","byte_start":70554,"byte_end":70617,"line_start":162,"line_end":162,"column_start":5,"column_end":68}},{"value":"/ returns the range of items which passed `predicate`.","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/mod.rs","byte_start":70622,"byte_end":70678,"line_start":163,"line_end":163,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":657},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/mod.rs","byte_start":71081,"byte_end":71094,"line_start":175,"line_end":175,"column_start":8,"column_end":21},"name":"uncons_while1","qualname":"::stream::RangeStreamOnce::uncons_while1","value":"pub fn uncons_while1<F>(&mut Self, F)\n-> FastResult<Self::Range, StreamErrorFor<Self>> where F: FnMut(Self::Item) ->\nbool","parent":{"krate":0,"index":653},"children":[],"decl_id":null,"docs":" Takes items from stream, testing each one with `predicate`\n returns a range of at least one items which passed `predicate`.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/mod.rs","byte_start":70817,"byte_end":70826,"line_start":168,"line_end":168,"column_start":5,"column_end":14}},{"value":"/ Takes items from stream, testing each one with `predicate`","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/mod.rs","byte_start":70831,"byte_end":70893,"line_start":169,"line_end":169,"column_start":5,"column_end":67}},{"value":"/ returns a range of at least one items which passed `predicate`.","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/mod.rs","byte_start":70898,"byte_end":70965,"line_start":170,"line_end":170,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/mod.rs","byte_start":70970,"byte_end":70973,"line_start":171,"line_end":171,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/mod.rs","byte_start":70978,"byte_end":70988,"line_start":172,"line_end":172,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/mod.rs","byte_start":70993,"byte_end":70996,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/ This may not return `EmptyOk` as it should uncons at least one item.","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/mod.rs","byte_start":71001,"byte_end":71073,"line_start":174,"line_end":174,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":660},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/mod.rs","byte_start":71945,"byte_end":71953,"line_start":204,"line_end":204,"column_start":8,"column_end":16},"name":"distance","qualname":"::stream::RangeStreamOnce::distance","value":"pub fn distance(&Self, &Self::Checkpoint) -> usize","parent":{"krate":0,"index":653},"children":[],"decl_id":null,"docs":" Returns the distance between `self` and `end`. The returned `usize` must be so that","sig":null,"attributes":[{"value":"/ Returns the distance between `self` and `end`. The returned `usize` must be so that","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/mod.rs","byte_start":71688,"byte_end":71775,"line_start":197,"line_end":197,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/mod.rs","byte_start":71780,"byte_end":71783,"line_start":198,"line_end":198,"column_start":5,"column_end":8}},{"value":"/ ```ignore","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/mod.rs","byte_start":71788,"byte_end":71801,"line_start":199,"line_end":199,"column_start":5,"column_end":18}},{"value":"/ let start = stream.checkpoint();","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/mod.rs","byte_start":71806,"byte_end":71842,"line_start":200,"line_end":200,"column_start":5,"column_end":41}},{"value":"/ stream.uncons_range(distance);","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/mod.rs","byte_start":71847,"byte_end":71881,"line_start":201,"line_end":201,"column_start":5,"column_end":39}},{"value":"/ stream.distance(&start) == distance","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/mod.rs","byte_start":71886,"byte_end":71925,"line_start":202,"line_end":202,"column_start":5,"column_end":44}},{"value":"/ ```","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/mod.rs","byte_start":71930,"byte_end":71937,"line_start":203,"line_end":203,"column_start":5,"column_end":12}}]},{"kind":"Trait","id":{"krate":0,"index":661},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/mod.rs","byte_start":72092,"byte_end":72103,"line_start":208,"line_end":208,"column_start":11,"column_end":22},"name":"RangeStream","qualname":"::stream::RangeStream","value":"RangeStream: Stream + RangeStreamOnce","parent":null,"children":[],"decl_id":null,"docs":" A `RangeStream` is an extension of `Stream` which allows for zero copy parsing.\n","sig":null,"attributes":[{"value":"/ A `RangeStream` is an extension of `Stream` which allows for zero copy parsing.","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/mod.rs","byte_start":71998,"byte_end":72081,"line_start":207,"line_end":207,"column_start":1,"column_end":84}}]},{"kind":"Trait","id":{"krate":0,"index":664},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/mod.rs","byte_start":72277,"byte_end":72292,"line_start":213,"line_end":213,"column_start":11,"column_end":26},"name":"FullRangeStream","qualname":"::stream::FullRangeStream","value":"FullRangeStream: RangeStream","parent":null,"children":[{"krate":0,"index":665}],"decl_id":null,"docs":" A `RangeStream` which is capable of providing it's entire range.\n","sig":null,"attributes":[{"value":"/ A `RangeStream` which is capable of providing it's entire range.","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/mod.rs","byte_start":72198,"byte_end":72266,"line_start":212,"line_end":212,"column_start":1,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":665},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/mod.rs","byte_start":72358,"byte_end":72363,"line_start":215,"line_end":215,"column_start":8,"column_end":13},"name":"range","qualname":"::stream::FullRangeStream::range","value":"pub fn range(&Self) -> Self::Range","parent":{"krate":0,"index":664},"children":[],"decl_id":null,"docs":" Returns the entire range of `self`\n","sig":null,"attributes":[{"value":"/ Returns the entire range of `self`","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/mod.rs","byte_start":72312,"byte_end":72350,"line_start":214,"line_end":214,"column_start":5,"column_end":43}}]},{"kind":"Function","id":{"krate":0,"index":666},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/mod.rs","byte_start":72422,"byte_end":72439,"line_start":220,"line_end":220,"column_start":8,"column_end":25},"name":"wrap_stream_error","qualname":"::stream::wrap_stream_error","value":"pub fn wrap_stream_error<T,\n                         I: ?Sized>(&I,\n                                    <I::Error as\n                                    ParseError<I::Item, I::Range,\n                                               I::Position>>::StreamError)\n-> ConsumedResult<T, I> where I: StreamOnce + Positioned","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/mod.rs","byte_start":72405,"byte_end":72414,"line_start":219,"line_end":219,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":669},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/mod.rs","byte_start":72797,"byte_end":72809,"line_start":236,"line_end":236,"column_start":8,"column_end":20},"name":"uncons_range","qualname":"::stream::uncons_range","value":"pub fn uncons_range<I: ?Sized>(&mut I, usize) -> ConsumedResult<I::Range, I>\nwhere I: RangeStream","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/mod.rs","byte_start":72780,"byte_end":72789,"line_start":235,"line_end":235,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":671},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/mod.rs","byte_start":73176,"byte_end":73188,"line_start":253,"line_end":253,"column_start":8,"column_end":20},"name":"input_at_eof","qualname":"::stream::input_at_eof","value":"pub fn input_at_eof<I: ?Sized>(&mut I) -> bool where I: Stream","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":673},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/mod.rs","byte_start":73466,"byte_end":73478,"line_start":265,"line_end":265,"column_start":8,"column_end":20},"name":"uncons_while","qualname":"::stream::uncons_while","value":"pub fn uncons_while<I: ?Sized, F>(&mut I, F) -> ConsumedResult<I::Range, I>\nwhere F: FnMut(I::Item) -> bool, I: RangeStream, I::Range: Range","parent":null,"children":[],"decl_id":null,"docs":" Removes items from the input while `predicate` returns `true`.\n","sig":null,"attributes":[{"value":"/ Removes items from the input while `predicate` returns `true`.","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/mod.rs","byte_start":73382,"byte_end":73448,"line_start":263,"line_end":263,"column_start":1,"column_end":67}},{"value":"inline","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/mod.rs","byte_start":73449,"byte_end":73458,"line_start":264,"line_end":264,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":676},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/mod.rs","byte_start":74471,"byte_end":74484,"line_start":297,"line_end":297,"column_start":8,"column_end":21},"name":"uncons_while1","qualname":"::stream::uncons_while1","value":"pub fn uncons_while1<I: ?Sized, F>(&mut I, F) -> ConsumedResult<I::Range, I>\nwhere F: FnMut(I::Item) -> bool, I: RangeStream","parent":null,"children":[],"decl_id":null,"docs":" Takes items from stream, testing each one with `predicate`\n returns a range of at least one items which passed `predicate`.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/mod.rs","byte_start":74231,"byte_end":74240,"line_start":290,"line_end":290,"column_start":1,"column_end":10}},{"value":"/ Takes items from stream, testing each one with `predicate`","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/mod.rs","byte_start":74241,"byte_end":74303,"line_start":291,"line_end":291,"column_start":1,"column_end":63}},{"value":"/ returns a range of at least one items which passed `predicate`.","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/mod.rs","byte_start":74304,"byte_end":74371,"line_start":292,"line_end":292,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/mod.rs","byte_start":74372,"byte_end":74375,"line_start":293,"line_end":293,"column_start":1,"column_end":4}},{"value":"/ # Note","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/mod.rs","byte_start":74376,"byte_end":74386,"line_start":294,"line_end":294,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/mod.rs","byte_start":74387,"byte_end":74390,"line_start":295,"line_end":295,"column_start":1,"column_end":4}},{"value":"/ This may not return `EmptyOk` as it should uncons at least one item.","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/mod.rs","byte_start":74391,"byte_end":74463,"line_start":296,"line_end":296,"column_start":1,"column_end":73}}]},{"kind":"Trait","id":{"krate":0,"index":679},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/mod.rs","byte_start":76134,"byte_end":76139,"line_start":344,"line_end":344,"column_start":11,"column_end":16},"name":"Range","qualname":"::stream::Range","value":"Range","parent":null,"children":[{"krate":0,"index":680},{"krate":0,"index":681}],"decl_id":null,"docs":" Trait representing a range of elements.\n","sig":null,"attributes":[{"value":"/ Trait representing a range of elements.","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/mod.rs","byte_start":76080,"byte_end":76123,"line_start":343,"line_end":343,"column_start":1,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":680},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/mod.rs","byte_start":76289,"byte_end":76292,"line_start":347,"line_end":347,"column_start":8,"column_end":11},"name":"len","qualname":"::stream::Range::len","value":"pub fn len(&Self) -> usize","parent":{"krate":0,"index":679},"children":[],"decl_id":null,"docs":" Returns the remaining length of `self`.\n The returned length need not be the same as the number of items left in the stream.\n","sig":null,"attributes":[{"value":"/ Returns the remaining length of `self`.","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/mod.rs","byte_start":76146,"byte_end":76189,"line_start":345,"line_end":345,"column_start":5,"column_end":48}},{"value":"/ The returned length need not be the same as the number of items left in the stream.","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/mod.rs","byte_start":76194,"byte_end":76281,"line_start":346,"line_end":346,"column_start":5,"column_end":92}}]},{"kind":"Method","id":{"krate":0,"index":681},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/mod.rs","byte_start":76406,"byte_end":76414,"line_start":350,"line_end":350,"column_start":8,"column_end":16},"name":"is_empty","qualname":"::stream::Range::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":{"krate":0,"index":679},"children":[],"decl_id":null,"docs":" Returns `true` if the range does not contain any elements (`Range::len() == 0`)\n","sig":null,"attributes":[{"value":"/ Returns `true` if the range does not contain any elements (`Range::len() == 0`)","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/mod.rs","byte_start":76315,"byte_end":76398,"line_start":349,"line_end":349,"column_start":5,"column_end":88}}]},{"kind":"Struct","id":{"krate":0,"index":2554},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/mod.rs","byte_start":82749,"byte_end":82762,"line_start":619,"line_end":619,"column_start":12,"column_end":25},"name":"PartialStream","qualname":"::stream::PartialStream","value":"","parent":null,"children":[],"decl_id":null,"docs":" Stream type which indicates that the stream is partial if end of input is reached\n","sig":null,"attributes":[{"value":"/ Stream type which indicates that the stream is partial if end of input is reached","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/mod.rs","byte_start":82590,"byte_end":82675,"line_start":617,"line_end":617,"column_start":1,"column_end":86}}]},{"kind":"Field","id":{"krate":0,"index":2557},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/mod.rs","byte_start":82766,"byte_end":82771,"line_start":619,"line_end":619,"column_start":29,"column_end":34},"name":"0","qualname":"::stream::PartialStream::0","value":"S","parent":{"krate":0,"index":2554},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2587},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/mod.rs","byte_start":84691,"byte_end":84702,"line_start":709,"line_end":709,"column_start":12,"column_end":23},"name":"SliceStream","qualname":"::stream::SliceStream","value":"","parent":null,"children":[],"decl_id":null,"docs":" Newtype for constructing a stream from a slice where the items in the slice are not copyable.\n","sig":null,"attributes":[{"value":"/ Newtype for constructing a stream from a slice where the items in the slice are not copyable.","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/mod.rs","byte_start":84527,"byte_end":84624,"line_start":707,"line_end":707,"column_start":1,"column_end":98}}]},{"kind":"Field","id":{"krate":0,"index":2591},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/mod.rs","byte_start":84714,"byte_end":84725,"line_start":709,"line_end":709,"column_start":35,"column_end":46},"name":"0","qualname":"::stream::SliceStream::0","value":"&'a [T]","parent":{"krate":0,"index":2587},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2626},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/mod.rs","byte_start":87781,"byte_end":87795,"line_start":845,"line_end":845,"column_start":12,"column_end":26},"name":"IteratorStream","qualname":"::stream::IteratorStream","value":"","parent":null,"children":[],"decl_id":null,"docs":" Wrapper around iterators which allows them to be treated as a stream.\n Returned by [`from_iter`].","sig":null,"attributes":[{"value":"/ Wrapper around iterators which allows them to be treated as a stream.","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/mod.rs","byte_start":87594,"byte_end":87667,"line_start":840,"line_end":840,"column_start":1,"column_end":74}},{"value":"/ Returned by [`from_iter`].","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/mod.rs","byte_start":87668,"byte_end":87698,"line_start":841,"line_end":841,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/mod.rs","byte_start":87699,"byte_end":87702,"line_start":842,"line_end":842,"column_start":1,"column_end":4}},{"value":"/ [`from_iter`]: fn.from_iter.html","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/mod.rs","byte_start":87703,"byte_end":87739,"line_start":843,"line_end":843,"column_start":1,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":808},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/mod.rs","byte_start":88110,"byte_end":88113,"line_start":855,"line_end":855,"column_start":12,"column_end":15},"name":"new","qualname":"<IteratorStream<I>>::new","value":"pub fn new<T>(T) -> IteratorStream<I> where T: IntoIterator<IntoIter = I, Item\n= I>","parent":null,"children":[],"decl_id":null,"docs":" Converts an `Iterator` into a stream.","sig":null,"attributes":[{"value":"/ Converts an `Iterator` into a stream.","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/mod.rs","byte_start":87859,"byte_end":87900,"line_start":851,"line_end":851,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/mod.rs","byte_start":87905,"byte_end":87908,"line_start":852,"line_end":852,"column_start":5,"column_end":8}},{"value":"/ NOTE: This type do not implement `Positioned` and `Clone` and must be wrapped with types","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/mod.rs","byte_start":87913,"byte_end":88005,"line_start":853,"line_end":853,"column_start":5,"column_end":97}},{"value":"/     such as `BufferedStreamRef` and `State` to become a `Stream` which can be parsed","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/mod.rs","byte_start":88010,"byte_end":88098,"line_start":854,"line_end":854,"column_start":5,"column_end":93}}]},{"kind":"Struct","id":{"krate":0,"index":821},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/mod.rs","byte_start":88874,"byte_end":88884,"line_start":892,"line_end":892,"column_start":12,"column_end":22},"name":"ReadStream","qualname":"::stream::ReadStream","value":"ReadStream {  }","parent":null,"children":[{"krate":0,"index":823}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/mod.rs","byte_start":88839,"byte_end":88862,"line_start":891,"line_end":891,"column_start":1,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":833},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/mod.rs","byte_start":90408,"byte_end":90411,"line_start":942,"line_end":942,"column_start":12,"column_end":15},"name":"new","qualname":"<ReadStream<R>>::new","value":"pub fn new(R) -> ReadStream<R>","parent":null,"children":[],"decl_id":null,"docs":" Creates a `StreamOnce` instance from a value implementing `std::io::Read`.","sig":null,"attributes":[{"value":"/ Creates a `StreamOnce` instance from a value implementing `std::io::Read`.","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/mod.rs","byte_start":89463,"byte_end":89541,"line_start":918,"line_end":918,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/mod.rs","byte_start":89546,"byte_end":89549,"line_start":919,"line_end":919,"column_start":5,"column_end":8}},{"value":"/ NOTE: This type do not implement `Positioned` and `Clone` and must be wrapped with types","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/mod.rs","byte_start":89554,"byte_end":89646,"line_start":920,"line_end":920,"column_start":5,"column_end":97}},{"value":"/     such as `BufferedStreamRef` and `State` to become a `Stream` which can be parsed","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/mod.rs","byte_start":89651,"byte_end":89739,"line_start":921,"line_end":921,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/mod.rs","byte_start":89744,"byte_end":89747,"line_start":922,"line_end":922,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/mod.rs","byte_start":89752,"byte_end":89763,"line_start":923,"line_end":923,"column_start":5,"column_end":16}},{"value":"/ # #![cfg(feature = \"std\")]","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/mod.rs","byte_start":89768,"byte_end":89798,"line_start":924,"line_end":924,"column_start":5,"column_end":35}},{"value":"/ # extern crate combine;","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/mod.rs","byte_start":89803,"byte_end":89830,"line_start":925,"line_end":925,"column_start":5,"column_end":32}},{"value":"/ use combine::*;","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/mod.rs","byte_start":89835,"byte_end":89854,"line_start":926,"line_end":926,"column_start":5,"column_end":24}},{"value":"/ use combine::parser::byte::*;","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/mod.rs","byte_start":89859,"byte_end":89892,"line_start":927,"line_end":927,"column_start":5,"column_end":38}},{"value":"/ use combine::stream::ReadStream;","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/mod.rs","byte_start":89897,"byte_end":89933,"line_start":928,"line_end":928,"column_start":5,"column_end":41}},{"value":"/ use combine::stream::buffered::BufferedStream;","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/mod.rs","byte_start":89938,"byte_end":89988,"line_start":929,"line_end":929,"column_start":5,"column_end":55}},{"value":"/ use combine::stream::state::State;","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/mod.rs","byte_start":89993,"byte_end":90031,"line_start":930,"line_end":930,"column_start":5,"column_end":43}},{"value":"/ use std::io::Read;","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/mod.rs","byte_start":90036,"byte_end":90058,"line_start":931,"line_end":931,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/mod.rs","byte_start":90063,"byte_end":90066,"line_start":932,"line_end":932,"column_start":5,"column_end":8}},{"value":"/ # fn main() {","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/mod.rs","byte_start":90071,"byte_end":90088,"line_start":933,"line_end":933,"column_start":5,"column_end":22}},{"value":"/ let input: &[u8] = b\"123,\";","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/mod.rs","byte_start":90093,"byte_end":90124,"line_start":934,"line_end":934,"column_start":5,"column_end":36}},{"value":"/ let stream = BufferedStream::new(State::new(ReadStream::new(input)), 1);","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/mod.rs","byte_start":90129,"byte_end":90205,"line_start":935,"line_end":935,"column_start":5,"column_end":81}},{"value":"/ let result = (many(digit()), byte(b','))","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/mod.rs","byte_start":90210,"byte_end":90254,"line_start":936,"line_end":936,"column_start":5,"column_end":49}},{"value":"/     .parse(stream)","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/mod.rs","byte_start":90259,"byte_end":90281,"line_start":937,"line_end":937,"column_start":5,"column_end":27}},{"value":"/     .map(|t| t.0);","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/mod.rs","byte_start":90286,"byte_end":90308,"line_start":938,"line_end":938,"column_start":5,"column_end":27}},{"value":"/ assert_eq!(result, Ok((vec![b'1', b'2', b'3'], b',')));","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/mod.rs","byte_start":90313,"byte_end":90372,"line_start":939,"line_end":939,"column_start":5,"column_end":64}},{"value":"/ # }","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/mod.rs","byte_start":90377,"byte_end":90384,"line_start":940,"line_end":940,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/mod.rs","byte_start":90389,"byte_end":90396,"line_start":941,"line_end":941,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":2638},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/mod.rs","byte_start":90668,"byte_end":90681,"line_start":951,"line_end":951,"column_start":12,"column_end":25},"name":"PointerOffset","qualname":"::stream::PointerOffset","value":"","parent":null,"children":[],"decl_id":null,"docs":" Newtype around a pointer offset into a slice stream (`&[T]`/`&str`).\n","sig":null,"attributes":[{"value":"/ Newtype around a pointer offset into a slice stream (`&[T]`/`&str`).","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/mod.rs","byte_start":90513,"byte_end":90585,"line_start":949,"line_end":949,"column_start":1,"column_end":73}}]},{"kind":"Field","id":{"krate":0,"index":2640},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/mod.rs","byte_start":90682,"byte_end":90691,"line_start":951,"line_end":951,"column_start":26,"column_end":35},"name":"0","qualname":"::stream::PointerOffset::0","value":"usize","parent":{"krate":0,"index":2638},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":837},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/mod.rs","byte_start":91304,"byte_end":91322,"line_start":972,"line_end":972,"column_start":12,"column_end":30},"name":"translate_position","qualname":"<PointerOffset>::translate_position","value":"pub fn translate_position<T: ?Sized>(Self, &T) -> usize where T","parent":null,"children":[],"decl_id":null,"docs":" Converts the pointer-based position into an indexed position.","sig":null,"attributes":[{"value":"/ Converts the pointer-based position into an indexed position.","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/mod.rs","byte_start":90873,"byte_end":90938,"line_start":960,"line_end":960,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/mod.rs","byte_start":90943,"byte_end":90946,"line_start":961,"line_end":961,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/mod.rs","byte_start":90951,"byte_end":90962,"line_start":962,"line_end":962,"column_start":5,"column_end":16}},{"value":"/ # extern crate combine;","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/mod.rs","byte_start":90967,"byte_end":90994,"line_start":963,"line_end":963,"column_start":5,"column_end":32}},{"value":"/ # use combine::*;","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/mod.rs","byte_start":90999,"byte_end":91020,"line_start":964,"line_end":964,"column_start":5,"column_end":26}},{"value":"/ # fn main() {","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/mod.rs","byte_start":91025,"byte_end":91042,"line_start":965,"line_end":965,"column_start":5,"column_end":22}},{"value":"/ let text = \"b\";","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/mod.rs","byte_start":91047,"byte_end":91066,"line_start":966,"line_end":966,"column_start":5,"column_end":24}},{"value":"/ let err = token('a').easy_parse(text).unwrap_err();","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/mod.rs","byte_start":91071,"byte_end":91126,"line_start":967,"line_end":967,"column_start":5,"column_end":60}},{"value":"/ assert_eq!(err.position.0, text.as_ptr() as usize);","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/mod.rs","byte_start":91131,"byte_end":91186,"line_start":968,"line_end":968,"column_start":5,"column_end":60}},{"value":"/ assert_eq!(err.map_position(|p| p.translate_position(text)).position, 0);","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/mod.rs","byte_start":91191,"byte_end":91268,"line_start":969,"line_end":969,"column_start":5,"column_end":82}},{"value":"/ # }","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/mod.rs","byte_start":91273,"byte_end":91280,"line_start":970,"line_end":970,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/mod.rs","byte_start":91285,"byte_end":91292,"line_start":971,"line_end":971,"column_start":5,"column_end":12}}]},{"kind":"Function","id":{"krate":0,"index":839},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/mod.rs","byte_start":91842,"byte_end":91848,"line_start":989,"line_end":989,"column_start":8,"column_end":14},"name":"decode","qualname":"::stream::decode","value":"pub fn decode<P>(P, P::Input, &mut P::PartialState)\n-> Result<(Option<P::Output>, usize), <P::Input as StreamOnce>::Error> where\nP: Parser, P::Input: RangeStream","parent":null,"children":[],"decl_id":null,"docs":" Decodes `input` using `parser`.","sig":null,"attributes":[{"value":"/ Decodes `input` using `parser`.","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/mod.rs","byte_start":91492,"byte_end":91527,"line_start":981,"line_end":981,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/mod.rs","byte_start":91528,"byte_end":91531,"line_start":982,"line_end":982,"column_start":1,"column_end":4}},{"value":"/ Return `Ok(Some(item), consumed_data)` if there was enough data to finish parsing using","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/mod.rs","byte_start":91532,"byte_end":91623,"line_start":983,"line_end":983,"column_start":1,"column_end":92}},{"value":"/ `parser`.","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/mod.rs","byte_start":91624,"byte_end":91637,"line_start":984,"line_end":984,"column_start":1,"column_end":14}},{"value":"/ Returns `Ok(None, consumed_data)` if `input` did not contain enough data to finish parsing","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/mod.rs","byte_start":91638,"byte_end":91732,"line_start":985,"line_end":985,"column_start":1,"column_end":95}},{"value":"/ using `parser`.","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/mod.rs","byte_start":91733,"byte_end":91752,"line_start":986,"line_end":986,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/mod.rs","byte_start":91753,"byte_end":91756,"line_start":987,"line_end":987,"column_start":1,"column_end":4}},{"value":"/ See `examples/async.rs` for example usage in a `tokio_io::codec::Decoder`","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/mod.rs","byte_start":91757,"byte_end":91834,"line_start":988,"line_end":988,"column_start":1,"column_end":78}}]},{"kind":"Mod","id":{"krate":0,"index":841},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"parser","qualname":"::parser","value":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","parent":null,"children":[{"krate":0,"index":842},{"krate":0,"index":843},{"krate":0,"index":844},{"krate":0,"index":845},{"krate":0,"index":846},{"krate":0,"index":847},{"krate":0,"index":848},{"krate":0,"index":849},{"krate":0,"index":850},{"krate":0,"index":851},{"krate":0,"index":852},{"krate":0,"index":853},{"krate":0,"index":854},{"krate":0,"index":855},{"krate":0,"index":856},{"krate":0,"index":857},{"krate":0,"index":858},{"krate":0,"index":859},{"krate":0,"index":860},{"krate":0,"index":861},{"krate":0,"index":862},{"krate":0,"index":863},{"krate":0,"index":864},{"krate":0,"index":865},{"krate":0,"index":866},{"krate":0,"index":867},{"krate":0,"index":868},{"krate":0,"index":869},{"krate":0,"index":870},{"krate":0,"index":871},{"krate":0,"index":872},{"krate":0,"index":873},{"krate":0,"index":874},{"krate":0,"index":8166},{"krate":0,"index":875},{"krate":0,"index":876},{"krate":0,"index":877},{"krate":0,"index":878},{"krate":0,"index":879},{"krate":0,"index":880},{"krate":0,"index":881},{"krate":0,"index":882},{"krate":0,"index":885},{"krate":0,"index":981},{"krate":0,"index":1048},{"krate":0,"index":1137},{"krate":0,"index":1420},{"krate":0,"index":1483},{"krate":0,"index":1534},{"krate":0,"index":1671},{"krate":0,"index":1809},{"krate":0,"index":2051},{"krate":0,"index":2157},{"krate":0,"index":2224},{"krate":0,"index":2227},{"krate":0,"index":2229},{"krate":0,"index":7888},{"krate":0,"index":7892},{"krate":0,"index":7890},{"krate":0,"index":2234},{"krate":0,"index":7893},{"krate":0,"index":7899},{"krate":0,"index":7897},{"krate":0,"index":7895},{"krate":0,"index":2237}],"decl_id":null,"docs":" A collection of both concrete parsers as well as parser combinators.","sig":null,"attributes":[{"value":"macro_use","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/lib.rs","byte_start":27238,"byte_end":27250,"line_start":764,"line_end":764,"column_start":1,"column_end":13}},{"value":"/ A collection of both concrete parsers as well as parser combinators.","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":133578,"byte_end":133650,"line_start":1,"line_end":1,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":133651,"byte_end":133654,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ Implements the `Parser` trait which is the core of `combine` and contains the submodules","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":133655,"byte_end":133747,"line_start":3,"line_end":3,"column_start":1,"column_end":93}},{"value":"/ implementing all combine parsers.","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":133748,"byte_end":133785,"line_start":4,"line_end":4,"column_start":1,"column_end":38}}]},{"kind":"Mod","id":{"krate":0,"index":885},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/byte.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"byte","qualname":"::parser::byte","value":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/byte.rs","parent":null,"children":[{"krate":0,"index":886},{"krate":0,"index":887},{"krate":0,"index":8180},{"krate":0,"index":888},{"krate":0,"index":889},{"krate":0,"index":890},{"krate":0,"index":891},{"krate":0,"index":892},{"krate":0,"index":893},{"krate":0,"index":894},{"krate":0,"index":895},{"krate":0,"index":896},{"krate":0,"index":897},{"krate":0,"index":898},{"krate":0,"index":899},{"krate":0,"index":900},{"krate":0,"index":901},{"krate":0,"index":902},{"krate":0,"index":903},{"krate":0,"index":904},{"krate":0,"index":905},{"krate":0,"index":906},{"krate":0,"index":907},{"krate":0,"index":908},{"krate":0,"index":909},{"krate":0,"index":910},{"krate":0,"index":911},{"krate":0,"index":912},{"krate":0,"index":913},{"krate":0,"index":914},{"krate":0,"index":2668},{"krate":0,"index":2673},{"krate":0,"index":2663},{"krate":0,"index":917},{"krate":0,"index":2689},{"krate":0,"index":2694},{"krate":0,"index":2684},{"krate":0,"index":919},{"krate":0,"index":2710},{"krate":0,"index":2715},{"krate":0,"index":2705},{"krate":0,"index":921},{"krate":0,"index":2729},{"krate":0,"index":2734},{"krate":0,"index":2724},{"krate":0,"index":923},{"krate":0,"index":2749},{"krate":0,"index":2754},{"krate":0,"index":2744},{"krate":0,"index":925},{"krate":0,"index":2769},{"krate":0,"index":2774},{"krate":0,"index":2764},{"krate":0,"index":927},{"krate":0,"index":2789},{"krate":0,"index":2794},{"krate":0,"index":2784},{"krate":0,"index":929},{"krate":0,"index":2810},{"krate":0,"index":2815},{"krate":0,"index":2805},{"krate":0,"index":931},{"krate":0,"index":2831},{"krate":0,"index":2836},{"krate":0,"index":2826},{"krate":0,"index":933},{"krate":0,"index":2852},{"krate":0,"index":2857},{"krate":0,"index":2847},{"krate":0,"index":935},{"krate":0,"index":2873},{"krate":0,"index":2878},{"krate":0,"index":2868},{"krate":0,"index":937},{"krate":0,"index":2893},{"krate":0,"index":2898},{"krate":0,"index":2888},{"krate":0,"index":939},{"krate":0,"index":2909},{"krate":0,"index":2917},{"krate":0,"index":2914},{"krate":0,"index":941},{"krate":0,"index":952},{"krate":0,"index":2919},{"krate":0,"index":2930},{"krate":0,"index":2926},{"krate":0,"index":955},{"krate":0,"index":966},{"krate":0,"index":2946},{"krate":0,"index":2950},{"krate":0,"index":2933},{"krate":0,"index":2944},{"krate":0,"index":2969},{"krate":0,"index":2974},{"krate":0,"index":2956},{"krate":0,"index":2967},{"krate":0,"index":2993},{"krate":0,"index":2999},{"krate":0,"index":2980},{"krate":0,"index":2991},{"krate":0,"index":3005},{"krate":0,"index":3010},{"krate":0,"index":3022},{"krate":0,"index":971},{"krate":0,"index":972}],"decl_id":null,"docs":" Module containing parsers specialized on byte streams.\n","sig":null,"attributes":[{"value":"/ Module containing parsers specialized on byte streams.","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/byte.rs","byte_start":169929,"byte_end":169987,"line_start":1,"line_end":1,"column_start":1,"column_end":59}}]},{"kind":"Function","id":{"krate":0,"index":914},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/byte.rs","byte_start":170722,"byte_end":170726,"line_start":27,"line_end":27,"column_start":8,"column_end":12},"name":"byte","qualname":"::parser::byte::byte","value":"pub fn byte<I>(u8) -> Token<I> where I: Stream<Item = u8>,\nI::Error: ParseError<I::Item, I::Range, I::Position>","parent":null,"children":[],"decl_id":null,"docs":" Parses a byte and succeeds if the byte is equal to `c`.","sig":null,"attributes":[{"value":"/ Parses a byte and succeeds if the byte is equal to `c`.","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/byte.rs","byte_start":170387,"byte_end":170446,"line_start":17,"line_end":17,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/byte.rs","byte_start":170447,"byte_end":170450,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/byte.rs","byte_start":170451,"byte_end":170458,"line_start":19,"line_end":19,"column_start":1,"column_end":8}},{"value":"/ use combine::Parser;","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/byte.rs","byte_start":170459,"byte_end":170483,"line_start":20,"line_end":20,"column_start":1,"column_end":25}},{"value":"/ use combine::parser::byte::byte;","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/byte.rs","byte_start":170484,"byte_end":170520,"line_start":21,"line_end":21,"column_start":1,"column_end":37}},{"value":"/ assert_eq!(byte(b'!').parse(&b\"!\"[..]), Ok((b'!', &b\"\"[..])));","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/byte.rs","byte_start":170521,"byte_end":170587,"line_start":22,"line_end":22,"column_start":1,"column_end":67}},{"value":"/ assert!(byte(b'A').parse(&b\"\"[..]).is_err());","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/byte.rs","byte_start":170588,"byte_end":170637,"line_start":23,"line_end":23,"column_start":1,"column_end":50}},{"value":"/ assert!(byte(b'A').parse(&b\"!\"[..]).is_err());","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/byte.rs","byte_start":170638,"byte_end":170688,"line_start":24,"line_end":24,"column_start":1,"column_end":51}},{"value":"/ ```","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/byte.rs","byte_start":170689,"byte_end":170696,"line_start":25,"line_end":25,"column_start":1,"column_end":8}},{"value":"inline(always)","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/byte.rs","byte_start":170697,"byte_end":170714,"line_start":26,"line_end":26,"column_start":1,"column_end":18}}]},{"kind":"Struct","id":{"krate":0,"index":2668},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/byte.rs","byte_start":170878,"byte_end":170883,"line_start":35,"line_end":35,"column_start":22,"column_end":27},"name":"Digit","qualname":"::parser::byte::Digit","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":917},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/byte.rs","byte_start":171460,"byte_end":171465,"line_start":55,"line_end":55,"column_start":8,"column_end":13},"name":"digit","qualname":"::parser::byte::digit","value":"pub fn digit<I>() -> Digit<I> where I: Stream<Item = u8>,\nI::Error: ParseError<I::Item, I::Range, I::Position>","parent":null,"children":[],"decl_id":null,"docs":" Parses a base-10 digit (0–9).","sig":null,"attributes":[{"value":"/ Parses a base-10 digit (0–9).","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/byte.rs","byte_start":171204,"byte_end":171239,"line_start":46,"line_end":46,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/byte.rs","byte_start":171240,"byte_end":171243,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/byte.rs","byte_start":171244,"byte_end":171251,"line_start":48,"line_end":48,"column_start":1,"column_end":8}},{"value":"/ use combine::Parser;","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/byte.rs","byte_start":171252,"byte_end":171276,"line_start":49,"line_end":49,"column_start":1,"column_end":25}},{"value":"/ use combine::parser::byte::digit;","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/byte.rs","byte_start":171277,"byte_end":171314,"line_start":50,"line_end":50,"column_start":1,"column_end":38}},{"value":"/ assert_eq!(digit().parse(&b\"9\"[..]), Ok((b'9', &b\"\"[..])));","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/byte.rs","byte_start":171315,"byte_end":171378,"line_start":51,"line_end":51,"column_start":1,"column_end":64}},{"value":"/ assert!(digit().parse(&b\"A\"[..]).is_err());","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/byte.rs","byte_start":171379,"byte_end":171426,"line_start":52,"line_end":52,"column_start":1,"column_end":48}},{"value":"/ ```","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/byte.rs","byte_start":171427,"byte_end":171434,"line_start":53,"line_end":53,"column_start":1,"column_end":8}},{"value":"inline(always)","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/byte.rs","byte_start":171435,"byte_end":171452,"line_start":54,"line_end":54,"column_start":1,"column_end":18}}]},{"kind":"Struct","id":{"krate":0,"index":2689},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/byte.rs","byte_start":171640,"byte_end":171645,"line_start":63,"line_end":63,"column_start":22,"column_end":27},"name":"Space","qualname":"::parser::byte::Space","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":919},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/byte.rs","byte_start":172078,"byte_end":172083,"line_start":76,"line_end":76,"column_start":8,"column_end":13},"name":"space","qualname":"::parser::byte::space","value":"pub fn space<I>() -> Space<I> where I: Stream<Item = u8>,\nI::Error: ParseError<I::Item, I::Range, I::Position>","parent":null,"children":[],"decl_id":null,"docs":" Parses a `b' '`, `b'\\t'`, `b'\\n'` or `'b\\'r'`.","sig":null,"attributes":[{"value":"/ Parses a `b' '`, `b'\\t'`, `b'\\n'` or `'b\\'r'`.","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/byte.rs","byte_start":171694,"byte_end":171744,"line_start":65,"line_end":65,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/byte.rs","byte_start":171745,"byte_end":171748,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/byte.rs","byte_start":171749,"byte_end":171756,"line_start":67,"line_end":67,"column_start":1,"column_end":8}},{"value":"/ use combine::Parser;","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/byte.rs","byte_start":171757,"byte_end":171781,"line_start":68,"line_end":68,"column_start":1,"column_end":25}},{"value":"/ use combine::parser::byte::space;","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/byte.rs","byte_start":171782,"byte_end":171819,"line_start":69,"line_end":69,"column_start":1,"column_end":38}},{"value":"/ assert_eq!(space().parse(&b\" \"[..]), Ok((b' ', &b\"\"[..])));","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/byte.rs","byte_start":171820,"byte_end":171883,"line_start":70,"line_end":70,"column_start":1,"column_end":64}},{"value":"/ assert_eq!(space().parse(&b\"  \"[..]), Ok((b' ', &b\" \"[..])));","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/byte.rs","byte_start":171884,"byte_end":171949,"line_start":71,"line_end":71,"column_start":1,"column_end":66}},{"value":"/ assert!(space().parse(&b\"!\"[..]).is_err());","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/byte.rs","byte_start":171950,"byte_end":171997,"line_start":72,"line_end":72,"column_start":1,"column_end":48}},{"value":"/ assert!(space().parse(&b\"\"[..]).is_err());","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/byte.rs","byte_start":171998,"byte_end":172044,"line_start":73,"line_end":73,"column_start":1,"column_end":47}},{"value":"/ ```","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/byte.rs","byte_start":172045,"byte_end":172052,"line_start":74,"line_end":74,"column_start":1,"column_end":8}},{"value":"inline(always)","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/byte.rs","byte_start":172053,"byte_end":172070,"line_start":75,"line_end":75,"column_start":1,"column_end":18}}]},{"kind":"Struct","id":{"krate":0,"index":2710},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/byte.rs","byte_start":172263,"byte_end":172269,"line_start":84,"line_end":84,"column_start":22,"column_end":28},"name":"Spaces","qualname":"::parser::byte::Spaces","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":921},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/byte.rs","byte_start":172621,"byte_end":172627,"line_start":96,"line_end":96,"column_start":8,"column_end":14},"name":"spaces","qualname":"::parser::byte::spaces","value":"pub fn spaces<I>() -> Spaces<I> where I: Stream<Item = u8>,\nI::Error: ParseError<I::Item, I::Range, I::Position>","parent":null,"children":[],"decl_id":null,"docs":" Skips over [`space`] zero or more times","sig":null,"attributes":[{"value":"/ Skips over [`space`] zero or more times","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/byte.rs","byte_start":172308,"byte_end":172351,"line_start":85,"line_end":85,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/byte.rs","byte_start":172352,"byte_end":172355,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"/ [`space`]: fn.space.html","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/byte.rs","byte_start":172356,"byte_end":172384,"line_start":87,"line_end":87,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/byte.rs","byte_start":172385,"byte_end":172388,"line_start":88,"line_end":88,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/byte.rs","byte_start":172389,"byte_end":172396,"line_start":89,"line_end":89,"column_start":1,"column_end":8}},{"value":"/ use combine::Parser;","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/byte.rs","byte_start":172397,"byte_end":172421,"line_start":90,"line_end":90,"column_start":1,"column_end":25}},{"value":"/ use combine::parser::byte::spaces;","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/byte.rs","byte_start":172422,"byte_end":172460,"line_start":91,"line_end":91,"column_start":1,"column_end":39}},{"value":"/ assert_eq!(spaces().parse(&b\"\"[..]), Ok(((), &b\"\"[..])));","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/byte.rs","byte_start":172461,"byte_end":172522,"line_start":92,"line_end":92,"column_start":1,"column_end":62}},{"value":"/ assert_eq!(spaces().parse(&b\"   \"[..]), Ok(((), &b\"\"[..])));","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/byte.rs","byte_start":172523,"byte_end":172587,"line_start":93,"line_end":93,"column_start":1,"column_end":65}},{"value":"/ ```","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/byte.rs","byte_start":172588,"byte_end":172595,"line_start":94,"line_end":94,"column_start":1,"column_end":8}},{"value":"inline(always)","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/byte.rs","byte_start":172596,"byte_end":172613,"line_start":95,"line_end":95,"column_start":1,"column_end":18}}]},{"kind":"Struct","id":{"krate":0,"index":2729},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/byte.rs","byte_start":172830,"byte_end":172837,"line_start":104,"line_end":104,"column_start":22,"column_end":29},"name":"Newline","qualname":"::parser::byte::Newline","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":923},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/byte.rs","byte_start":173152,"byte_end":173159,"line_start":115,"line_end":115,"column_start":8,"column_end":15},"name":"newline","qualname":"::parser::byte::newline","value":"pub fn newline<I>() -> Newline<I> where I: Stream<Item = u8>,\nI::Error: ParseError<I::Item, I::Range, I::Position>","parent":null,"children":[],"decl_id":null,"docs":" Parses a newline byte (`b'\\n'`).","sig":null,"attributes":[{"value":"/ Parses a newline byte (`b'\\n'`).","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/byte.rs","byte_start":172886,"byte_end":172922,"line_start":106,"line_end":106,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/byte.rs","byte_start":172923,"byte_end":172926,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/byte.rs","byte_start":172927,"byte_end":172934,"line_start":108,"line_end":108,"column_start":1,"column_end":8}},{"value":"/ use combine::Parser;","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/byte.rs","byte_start":172935,"byte_end":172959,"line_start":109,"line_end":109,"column_start":1,"column_end":25}},{"value":"/ use combine::parser::byte::newline;","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/byte.rs","byte_start":172960,"byte_end":172999,"line_start":110,"line_end":110,"column_start":1,"column_end":40}},{"value":"/ assert_eq!(newline().parse(&b\"\\n\"[..]), Ok((b'\\n', &b\"\"[..])));","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/byte.rs","byte_start":173000,"byte_end":173067,"line_start":111,"line_end":111,"column_start":1,"column_end":68}},{"value":"/ assert!(newline().parse(&b\"\\r\"[..]).is_err());","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/byte.rs","byte_start":173068,"byte_end":173118,"line_start":112,"line_end":112,"column_start":1,"column_end":51}},{"value":"/ ```","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/byte.rs","byte_start":173119,"byte_end":173126,"line_start":113,"line_end":113,"column_start":1,"column_end":8}},{"value":"inline(always)","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/byte.rs","byte_start":173127,"byte_end":173144,"line_start":114,"line_end":114,"column_start":1,"column_end":18}}]},{"kind":"Struct","id":{"krate":0,"index":2749},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/byte.rs","byte_start":173421,"byte_end":173425,"line_start":126,"line_end":126,"column_start":22,"column_end":26},"name":"CrLf","qualname":"::parser::byte::CrLf","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":925},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/byte.rs","byte_start":173843,"byte_end":173847,"line_start":138,"line_end":138,"column_start":8,"column_end":12},"name":"crlf","qualname":"::parser::byte::crlf","value":"pub fn crlf<I>() -> CrLf<I> where I: Stream<Item = u8>,\nI::Error: ParseError<I::Item, I::Range, I::Position>","parent":null,"children":[],"decl_id":null,"docs":" Parses carriage return and newline (`&b\"\\r\\n\"`), returning the newline byte.","sig":null,"attributes":[{"value":"/ Parses carriage return and newline (`&b\"\\r\\n\"`), returning the newline byte.","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/byte.rs","byte_start":173492,"byte_end":173572,"line_start":128,"line_end":128,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/byte.rs","byte_start":173573,"byte_end":173576,"line_start":129,"line_end":129,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/byte.rs","byte_start":173577,"byte_end":173584,"line_start":130,"line_end":130,"column_start":1,"column_end":8}},{"value":"/ use combine::Parser;","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/byte.rs","byte_start":173585,"byte_end":173609,"line_start":131,"line_end":131,"column_start":1,"column_end":25}},{"value":"/ use combine::parser::byte::crlf;","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/byte.rs","byte_start":173610,"byte_end":173646,"line_start":132,"line_end":132,"column_start":1,"column_end":37}},{"value":"/ assert_eq!(crlf().parse(&b\"\\r\\n\"[..]), Ok((b'\\n', &b\"\"[..])));","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/byte.rs","byte_start":173647,"byte_end":173713,"line_start":133,"line_end":133,"column_start":1,"column_end":67}},{"value":"/ assert!(crlf().parse(&b\"\\r\"[..]).is_err());","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/byte.rs","byte_start":173714,"byte_end":173761,"line_start":134,"line_end":134,"column_start":1,"column_end":48}},{"value":"/ assert!(crlf().parse(&b\"\\n\"[..]).is_err());","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/byte.rs","byte_start":173762,"byte_end":173809,"line_start":135,"line_end":135,"column_start":1,"column_end":48}},{"value":"/ ```","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/byte.rs","byte_start":173810,"byte_end":173817,"line_start":136,"line_end":136,"column_start":1,"column_end":8}},{"value":"inline(always)","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/byte.rs","byte_start":173818,"byte_end":173835,"line_start":137,"line_end":137,"column_start":1,"column_end":18}}]},{"kind":"Struct","id":{"krate":0,"index":2769},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/byte.rs","byte_start":174147,"byte_end":174150,"line_start":151,"line_end":151,"column_start":22,"column_end":25},"name":"Tab","qualname":"::parser::byte::Tab","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":927},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/byte.rs","byte_start":174447,"byte_end":174450,"line_start":161,"line_end":161,"column_start":8,"column_end":11},"name":"tab","qualname":"::parser::byte::tab","value":"pub fn tab<I>() -> Tab<I> where I: Stream<Item = u8>,\nI::Error: ParseError<I::Item, I::Range, I::Position>","parent":null,"children":[],"decl_id":null,"docs":" Parses a tab byte (`b'\\t'`).","sig":null,"attributes":[{"value":"/ Parses a tab byte (`b'\\t'`).","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/byte.rs","byte_start":174198,"byte_end":174230,"line_start":152,"line_end":152,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/byte.rs","byte_start":174231,"byte_end":174234,"line_start":153,"line_end":153,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/byte.rs","byte_start":174235,"byte_end":174242,"line_start":154,"line_end":154,"column_start":1,"column_end":8}},{"value":"/ use combine::Parser;","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/byte.rs","byte_start":174243,"byte_end":174267,"line_start":155,"line_end":155,"column_start":1,"column_end":25}},{"value":"/ use combine::parser::byte::tab;","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/byte.rs","byte_start":174268,"byte_end":174303,"line_start":156,"line_end":156,"column_start":1,"column_end":36}},{"value":"/ assert_eq!(tab().parse(&b\"\\t\"[..]), Ok((b'\\t', &b\"\"[..])));","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/byte.rs","byte_start":174304,"byte_end":174367,"line_start":157,"line_end":157,"column_start":1,"column_end":64}},{"value":"/ assert!(tab().parse(&b\" \"[..]).is_err());","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/byte.rs","byte_start":174368,"byte_end":174413,"line_start":158,"line_end":158,"column_start":1,"column_end":46}},{"value":"/ ```","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/byte.rs","byte_start":174414,"byte_end":174421,"line_start":159,"line_end":159,"column_start":1,"column_end":8}},{"value":"inline(always)","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/byte.rs","byte_start":174422,"byte_end":174439,"line_start":160,"line_end":160,"column_start":1,"column_end":18}}]},{"kind":"Struct","id":{"krate":0,"index":2789},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/byte.rs","byte_start":174697,"byte_end":174702,"line_start":172,"line_end":172,"column_start":22,"column_end":27},"name":"Upper","qualname":"::parser::byte::Upper","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":929},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/byte.rs","byte_start":175016,"byte_end":175021,"line_start":182,"line_end":182,"column_start":8,"column_end":13},"name":"upper","qualname":"::parser::byte::upper","value":"pub fn upper<I>() -> Upper<I> where I: Stream<Item = u8>,\nI::Error: ParseError<I::Item, I::Range, I::Position>","parent":null,"children":[],"decl_id":null,"docs":" Parses an uppercase ASCII letter (A–Z).","sig":null,"attributes":[{"value":"/ Parses an uppercase ASCII letter (A–Z).","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/byte.rs","byte_start":174750,"byte_end":174795,"line_start":173,"line_end":173,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/byte.rs","byte_start":174796,"byte_end":174799,"line_start":174,"line_end":174,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/byte.rs","byte_start":174800,"byte_end":174807,"line_start":175,"line_end":175,"column_start":1,"column_end":8}},{"value":"/ use combine::Parser;","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/byte.rs","byte_start":174808,"byte_end":174832,"line_start":176,"line_end":176,"column_start":1,"column_end":25}},{"value":"/ use combine::parser::byte::upper;","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/byte.rs","byte_start":174833,"byte_end":174870,"line_start":177,"line_end":177,"column_start":1,"column_end":38}},{"value":"/ assert_eq!(upper().parse(&b\"A\"[..]), Ok((b'A', &b\"\"[..])));","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/byte.rs","byte_start":174871,"byte_end":174934,"line_start":178,"line_end":178,"column_start":1,"column_end":64}},{"value":"/ assert!(upper().parse(&b\"a\"[..]).is_err());","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/byte.rs","byte_start":174935,"byte_end":174982,"line_start":179,"line_end":179,"column_start":1,"column_end":48}},{"value":"/ ```","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/byte.rs","byte_start":174983,"byte_end":174990,"line_start":180,"line_end":180,"column_start":1,"column_end":8}},{"value":"inline(always)","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/byte.rs","byte_start":174991,"byte_end":175008,"line_start":181,"line_end":181,"column_start":1,"column_end":18}}]},{"kind":"Struct","id":{"krate":0,"index":2810},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/byte.rs","byte_start":175200,"byte_end":175205,"line_start":190,"line_end":190,"column_start":22,"column_end":27},"name":"Lower","qualname":"::parser::byte::Lower","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":931},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/byte.rs","byte_start":175519,"byte_end":175524,"line_start":200,"line_end":200,"column_start":8,"column_end":13},"name":"lower","qualname":"::parser::byte::lower","value":"pub fn lower<I>() -> Lower<I> where I: Stream<Item = u8>,\nI::Error: ParseError<I::Item, I::Range, I::Position>","parent":null,"children":[],"decl_id":null,"docs":" Parses an lowercase ASCII letter (a–z).","sig":null,"attributes":[{"value":"/ Parses an lowercase ASCII letter (a–z).","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/byte.rs","byte_start":175253,"byte_end":175298,"line_start":191,"line_end":191,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/byte.rs","byte_start":175299,"byte_end":175302,"line_start":192,"line_end":192,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/byte.rs","byte_start":175303,"byte_end":175310,"line_start":193,"line_end":193,"column_start":1,"column_end":8}},{"value":"/ use combine::Parser;","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/byte.rs","byte_start":175311,"byte_end":175335,"line_start":194,"line_end":194,"column_start":1,"column_end":25}},{"value":"/ use combine::parser::byte::lower;","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/byte.rs","byte_start":175336,"byte_end":175373,"line_start":195,"line_end":195,"column_start":1,"column_end":38}},{"value":"/ assert_eq!(lower().parse(&b\"a\"[..]), Ok((b'a', &b\"\"[..])));","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/byte.rs","byte_start":175374,"byte_end":175437,"line_start":196,"line_end":196,"column_start":1,"column_end":64}},{"value":"/ assert!(lower().parse(&b\"A\"[..]).is_err());","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/byte.rs","byte_start":175438,"byte_end":175485,"line_start":197,"line_end":197,"column_start":1,"column_end":48}},{"value":"/ ```","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/byte.rs","byte_start":175486,"byte_end":175493,"line_start":198,"line_end":198,"column_start":1,"column_end":8}},{"value":"inline(always)","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/byte.rs","byte_start":175494,"byte_end":175511,"line_start":199,"line_end":199,"column_start":1,"column_end":18}}]},{"kind":"Struct","id":{"krate":0,"index":2831},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/byte.rs","byte_start":175703,"byte_end":175711,"line_start":208,"line_end":208,"column_start":22,"column_end":30},"name":"AlphaNum","qualname":"::parser::byte::AlphaNum","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":933},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/byte.rs","byte_start":176134,"byte_end":176143,"line_start":219,"line_end":219,"column_start":8,"column_end":17},"name":"alpha_num","qualname":"::parser::byte::alpha_num","value":"pub fn alpha_num<I>() -> AlphaNum<I> where I: Stream<Item = u8>,\nI::Error: ParseError<I::Item, I::Range, I::Position>","parent":null,"children":[],"decl_id":null,"docs":" Parses either an ASCII alphabet letter or digit (a–z, A–Z, 0–9).","sig":null,"attributes":[{"value":"/ Parses either an ASCII alphabet letter or digit (a–z, A–Z, 0–9).","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/byte.rs","byte_start":175759,"byte_end":175833,"line_start":209,"line_end":209,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/byte.rs","byte_start":175834,"byte_end":175837,"line_start":210,"line_end":210,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/byte.rs","byte_start":175838,"byte_end":175845,"line_start":211,"line_end":211,"column_start":1,"column_end":8}},{"value":"/ use combine::Parser;","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/byte.rs","byte_start":175846,"byte_end":175870,"line_start":212,"line_end":212,"column_start":1,"column_end":25}},{"value":"/ use combine::parser::byte::alpha_num;","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/byte.rs","byte_start":175871,"byte_end":175912,"line_start":213,"line_end":213,"column_start":1,"column_end":42}},{"value":"/ assert_eq!(alpha_num().parse(&b\"A\"[..]), Ok((b'A', &b\"\"[..])));","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/byte.rs","byte_start":175913,"byte_end":175980,"line_start":214,"line_end":214,"column_start":1,"column_end":68}},{"value":"/ assert_eq!(alpha_num().parse(&b\"1\"[..]), Ok((b'1', &b\"\"[..])));","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/byte.rs","byte_start":175981,"byte_end":176048,"line_start":215,"line_end":215,"column_start":1,"column_end":68}},{"value":"/ assert!(alpha_num().parse(&b\"!\"[..]).is_err());","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/byte.rs","byte_start":176049,"byte_end":176100,"line_start":216,"line_end":216,"column_start":1,"column_end":52}},{"value":"/ ```","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/byte.rs","byte_start":176101,"byte_end":176108,"line_start":217,"line_end":217,"column_start":1,"column_end":8}},{"value":"inline(always)","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/byte.rs","byte_start":176109,"byte_end":176126,"line_start":218,"line_end":218,"column_start":1,"column_end":18}}]},{"kind":"Struct","id":{"krate":0,"index":2852},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/byte.rs","byte_start":176335,"byte_end":176341,"line_start":227,"line_end":227,"column_start":22,"column_end":28},"name":"Letter","qualname":"::parser::byte::Letter","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":935},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/byte.rs","byte_start":176729,"byte_end":176735,"line_start":238,"line_end":238,"column_start":8,"column_end":14},"name":"letter","qualname":"::parser::byte::letter","value":"pub fn letter<I>() -> Letter<I> where I: Stream<Item = u8>,\nI::Error: ParseError<I::Item, I::Range, I::Position>","parent":null,"children":[],"decl_id":null,"docs":" Parses an ASCII alphabet letter (a–z, A–Z).","sig":null,"attributes":[{"value":"/ Parses an ASCII alphabet letter (a–z, A–Z).","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/byte.rs","byte_start":176389,"byte_end":176440,"line_start":228,"line_end":228,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/byte.rs","byte_start":176441,"byte_end":176444,"line_start":229,"line_end":229,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/byte.rs","byte_start":176445,"byte_end":176452,"line_start":230,"line_end":230,"column_start":1,"column_end":8}},{"value":"/ use combine::Parser;","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/byte.rs","byte_start":176453,"byte_end":176477,"line_start":231,"line_end":231,"column_start":1,"column_end":25}},{"value":"/ use combine::parser::byte::letter;","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/byte.rs","byte_start":176478,"byte_end":176516,"line_start":232,"line_end":232,"column_start":1,"column_end":39}},{"value":"/ assert_eq!(letter().parse(&b\"a\"[..]), Ok((b'a', &b\"\"[..])));","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/byte.rs","byte_start":176517,"byte_end":176581,"line_start":233,"line_end":233,"column_start":1,"column_end":65}},{"value":"/ assert_eq!(letter().parse(&b\"A\"[..]), Ok((b'A', &b\"\"[..])));","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/byte.rs","byte_start":176582,"byte_end":176646,"line_start":234,"line_end":234,"column_start":1,"column_end":65}},{"value":"/ assert!(letter().parse(&b\"9\"[..]).is_err());","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/byte.rs","byte_start":176647,"byte_end":176695,"line_start":235,"line_end":235,"column_start":1,"column_end":49}},{"value":"/ ```","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/byte.rs","byte_start":176696,"byte_end":176703,"line_start":236,"line_end":236,"column_start":1,"column_end":8}},{"value":"inline(always)","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/byte.rs","byte_start":176704,"byte_end":176721,"line_start":237,"line_end":237,"column_start":1,"column_end":18}}]},{"kind":"Struct","id":{"krate":0,"index":2873},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/byte.rs","byte_start":176918,"byte_end":176926,"line_start":246,"line_end":246,"column_start":22,"column_end":30},"name":"OctDigit","qualname":"::parser::byte::OctDigit","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":937},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/byte.rs","byte_start":177234,"byte_end":177243,"line_start":257,"line_end":257,"column_start":8,"column_end":17},"name":"oct_digit","qualname":"::parser::byte::oct_digit","value":"pub fn oct_digit<I>() -> OctDigit<I> where I: Stream<Item = u8>,\nI::Error: ParseError<I::Item, I::Range, I::Position>","parent":null,"children":[],"decl_id":null,"docs":" Parses an octal digit.","sig":null,"attributes":[{"value":"/ Parses an octal digit.","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/byte.rs","byte_start":176975,"byte_end":177001,"line_start":248,"line_end":248,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/byte.rs","byte_start":177002,"byte_end":177005,"line_start":249,"line_end":249,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/byte.rs","byte_start":177006,"byte_end":177013,"line_start":250,"line_end":250,"column_start":1,"column_end":8}},{"value":"/ use combine::Parser;","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/byte.rs","byte_start":177014,"byte_end":177038,"line_start":251,"line_end":251,"column_start":1,"column_end":25}},{"value":"/ use combine::parser::byte::oct_digit;","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/byte.rs","byte_start":177039,"byte_end":177080,"line_start":252,"line_end":252,"column_start":1,"column_end":42}},{"value":"/ assert_eq!(oct_digit().parse(&b\"7\"[..]), Ok((b'7', &b\"\"[..])));","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/byte.rs","byte_start":177081,"byte_end":177148,"line_start":253,"line_end":253,"column_start":1,"column_end":68}},{"value":"/ assert!(oct_digit().parse(&b\"8\"[..]).is_err());","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/byte.rs","byte_start":177149,"byte_end":177200,"line_start":254,"line_end":254,"column_start":1,"column_end":52}},{"value":"/ ```","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/byte.rs","byte_start":177201,"byte_end":177208,"line_start":255,"line_end":255,"column_start":1,"column_end":8}},{"value":"inline(always)","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/byte.rs","byte_start":177209,"byte_end":177226,"line_start":256,"line_end":256,"column_start":1,"column_end":18}}]},{"kind":"Struct","id":{"krate":0,"index":2893},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/byte.rs","byte_start":177521,"byte_end":177529,"line_start":268,"line_end":268,"column_start":22,"column_end":30},"name":"HexDigit","qualname":"::parser::byte::HexDigit","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":939},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/byte.rs","byte_start":177886,"byte_end":177895,"line_start":278,"line_end":278,"column_start":8,"column_end":17},"name":"hex_digit","qualname":"::parser::byte::hex_digit","value":"pub fn hex_digit<I>() -> HexDigit<I> where I: Stream<Item = u8>,\nI::Error: ParseError<I::Item, I::Range, I::Position>","parent":null,"children":[],"decl_id":null,"docs":" Parses an ASCII hexdecimal digit (accepts both uppercase and lowercase).","sig":null,"attributes":[{"value":"/ Parses an ASCII hexdecimal digit (accepts both uppercase and lowercase).","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/byte.rs","byte_start":177577,"byte_end":177653,"line_start":269,"line_end":269,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/byte.rs","byte_start":177654,"byte_end":177657,"line_start":270,"line_end":270,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/byte.rs","byte_start":177658,"byte_end":177665,"line_start":271,"line_end":271,"column_start":1,"column_end":8}},{"value":"/ use combine::Parser;","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/byte.rs","byte_start":177666,"byte_end":177690,"line_start":272,"line_end":272,"column_start":1,"column_end":25}},{"value":"/ use combine::parser::byte::hex_digit;","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/byte.rs","byte_start":177691,"byte_end":177732,"line_start":273,"line_end":273,"column_start":1,"column_end":42}},{"value":"/ assert_eq!(hex_digit().parse(&b\"F\"[..]), Ok((b'F', &b\"\"[..])));","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/byte.rs","byte_start":177733,"byte_end":177800,"line_start":274,"line_end":274,"column_start":1,"column_end":68}},{"value":"/ assert!(hex_digit().parse(&b\"H\"[..]).is_err());","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/byte.rs","byte_start":177801,"byte_end":177852,"line_start":275,"line_end":275,"column_start":1,"column_end":52}},{"value":"/ ```","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/byte.rs","byte_start":177853,"byte_end":177860,"line_start":276,"line_end":276,"column_start":1,"column_end":8}},{"value":"inline(always)","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/byte.rs","byte_start":177861,"byte_end":177878,"line_start":277,"line_end":277,"column_start":1,"column_end":18}}]},{"kind":"Struct","id":{"krate":0,"index":2909},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/byte.rs","byte_start":178091,"byte_end":178096,"line_start":287,"line_end":287,"column_start":12,"column_end":17},"name":"Bytes","qualname":"::parser::byte::Bytes","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":952},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/byte.rs","byte_start":179460,"byte_end":179465,"line_start":332,"line_end":332,"column_start":8,"column_end":13},"name":"bytes","qualname":"::parser::byte::bytes","value":"pub fn bytes<'a, I>(&'static [u8]) -> Bytes<I> where I: Stream<Item = u8,\nRange = u8>, I::Error: ParseError<I::Item, I::Range, I::Position>","parent":null,"children":[],"decl_id":null,"docs":" Parses the bytes `s`.","sig":null,"attributes":[{"value":"/ Parses the bytes `s`.","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/byte.rs","byte_start":178901,"byte_end":178926,"line_start":312,"line_end":312,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/byte.rs","byte_start":178927,"byte_end":178930,"line_start":313,"line_end":313,"column_start":1,"column_end":4}},{"value":"/ If you have a stream implementing [`RangeStream`] such as `&[u8]` you can also use the","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/byte.rs","byte_start":178931,"byte_end":179021,"line_start":314,"line_end":314,"column_start":1,"column_end":91}},{"value":"/ [`range`] parser which may be more efficient.","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/byte.rs","byte_start":179022,"byte_end":179071,"line_start":315,"line_end":315,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/byte.rs","byte_start":179072,"byte_end":179075,"line_start":316,"line_end":316,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/byte.rs","byte_start":179076,"byte_end":179083,"line_start":317,"line_end":317,"column_start":1,"column_end":8}},{"value":"/ # extern crate combine;","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/byte.rs","byte_start":179084,"byte_end":179111,"line_start":318,"line_end":318,"column_start":1,"column_end":28}},{"value":"/ # use combine::*;","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/byte.rs","byte_start":179112,"byte_end":179133,"line_start":319,"line_end":319,"column_start":1,"column_end":22}},{"value":"/ # use combine::parser::byte::bytes;","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/byte.rs","byte_start":179134,"byte_end":179173,"line_start":320,"line_end":320,"column_start":1,"column_end":40}},{"value":"/ # fn main() {","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/byte.rs","byte_start":179174,"byte_end":179191,"line_start":321,"line_end":321,"column_start":1,"column_end":18}},{"value":"/ let result = bytes(&b\"rust\"[..])","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/byte.rs","byte_start":179192,"byte_end":179228,"line_start":322,"line_end":322,"column_start":1,"column_end":37}},{"value":"/     .parse(&b\"rust\"[..])","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/byte.rs","byte_start":179229,"byte_end":179257,"line_start":323,"line_end":323,"column_start":1,"column_end":29}},{"value":"/     .map(|x| x.0);","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/byte.rs","byte_start":179258,"byte_end":179280,"line_start":324,"line_end":324,"column_start":1,"column_end":23}},{"value":"/ assert_eq!(result, Ok(&b\"rust\"[..]));","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/byte.rs","byte_start":179281,"byte_end":179322,"line_start":325,"line_end":325,"column_start":1,"column_end":42}},{"value":"/ # }","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/byte.rs","byte_start":179323,"byte_end":179330,"line_start":326,"line_end":326,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/byte.rs","byte_start":179331,"byte_end":179338,"line_start":327,"line_end":327,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/byte.rs","byte_start":179339,"byte_end":179342,"line_start":328,"line_end":328,"column_start":1,"column_end":4}},{"value":"/ [`RangeStream`]: ../stream/trait.RangeStream.html","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/byte.rs","byte_start":179343,"byte_end":179396,"line_start":329,"line_end":329,"column_start":1,"column_end":54}},{"value":"/ [`range`]: ../range/fn.range.html","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/byte.rs","byte_start":179397,"byte_end":179434,"line_start":330,"line_end":330,"column_start":1,"column_end":38}},{"value":"inline(always)","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/byte.rs","byte_start":179435,"byte_end":179452,"line_start":331,"line_end":331,"column_start":1,"column_end":18}}]},{"kind":"Struct","id":{"krate":0,"index":2919},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/byte.rs","byte_start":179676,"byte_end":179684,"line_start":341,"line_end":341,"column_start":12,"column_end":20},"name":"BytesCmp","qualname":"::parser::byte::BytesCmp","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":966},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/byte.rs","byte_start":181231,"byte_end":181240,"line_start":388,"line_end":388,"column_start":8,"column_end":17},"name":"bytes_cmp","qualname":"::parser::byte::bytes_cmp","value":"pub fn bytes_cmp<'a, C, I>(&'static [u8], C) -> BytesCmp<C, I> where\nC: FnMut(u8, u8) -> bool, I: Stream<Item = u8, Range = u8>,\nI::Error: ParseError<I::Item, I::Range, I::Position>","parent":null,"children":[],"decl_id":null,"docs":" Parses the bytes `s` using `cmp` to compare each token.","sig":null,"attributes":[{"value":"/ Parses the bytes `s` using `cmp` to compare each token.","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/byte.rs","byte_start":180539,"byte_end":180598,"line_start":367,"line_end":367,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/byte.rs","byte_start":180599,"byte_end":180602,"line_start":368,"line_end":368,"column_start":1,"column_end":4}},{"value":"/ If you have a stream implementing [`RangeStream`] such as `&[u8]` you can also use the","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/byte.rs","byte_start":180603,"byte_end":180693,"line_start":369,"line_end":369,"column_start":1,"column_end":91}},{"value":"/ [`range`] parser which may be more efficient.","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/byte.rs","byte_start":180694,"byte_end":180743,"line_start":370,"line_end":370,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/byte.rs","byte_start":180744,"byte_end":180747,"line_start":371,"line_end":371,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/byte.rs","byte_start":180748,"byte_end":180755,"line_start":372,"line_end":372,"column_start":1,"column_end":8}},{"value":"/ # extern crate combine;","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/byte.rs","byte_start":180756,"byte_end":180783,"line_start":373,"line_end":373,"column_start":1,"column_end":28}},{"value":"/ # use combine::*;","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/byte.rs","byte_start":180784,"byte_end":180805,"line_start":374,"line_end":374,"column_start":1,"column_end":22}},{"value":"/ # use combine::parser::byte::bytes_cmp;","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/byte.rs","byte_start":180806,"byte_end":180849,"line_start":375,"line_end":375,"column_start":1,"column_end":44}},{"value":"/ # use combine::stream::easy::Info;","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/byte.rs","byte_start":180850,"byte_end":180888,"line_start":376,"line_end":376,"column_start":1,"column_end":39}},{"value":"/ # fn main() {","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/byte.rs","byte_start":180889,"byte_end":180906,"line_start":377,"line_end":377,"column_start":1,"column_end":18}},{"value":"/ use std::ascii::AsciiExt;","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/byte.rs","byte_start":180907,"byte_end":180936,"line_start":378,"line_end":378,"column_start":1,"column_end":30}},{"value":"/ let result = bytes_cmp(&b\"abc\"[..], |l, r| l.eq_ignore_ascii_case(&r))","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/byte.rs","byte_start":180937,"byte_end":181011,"line_start":379,"line_end":379,"column_start":1,"column_end":75}},{"value":"/     .parse(&b\"AbC\"[..]);","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/byte.rs","byte_start":181012,"byte_end":181040,"line_start":380,"line_end":380,"column_start":1,"column_end":29}},{"value":"/ assert_eq!(result, Ok((&b\"abc\"[..], &b\"\"[..])));","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/byte.rs","byte_start":181041,"byte_end":181093,"line_start":381,"line_end":381,"column_start":1,"column_end":53}},{"value":"/ # }","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/byte.rs","byte_start":181094,"byte_end":181101,"line_start":382,"line_end":382,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/byte.rs","byte_start":181102,"byte_end":181109,"line_start":383,"line_end":383,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/byte.rs","byte_start":181110,"byte_end":181113,"line_start":384,"line_end":384,"column_start":1,"column_end":4}},{"value":"/ [`RangeStream`]: ../stream/trait.RangeStream.html","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/byte.rs","byte_start":181114,"byte_end":181167,"line_start":385,"line_end":385,"column_start":1,"column_end":54}},{"value":"/ [`range`]: ../range/fn.range.html","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/byte.rs","byte_start":181168,"byte_end":181205,"line_start":386,"line_end":386,"column_start":1,"column_end":38}},{"value":"inline(always)","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/byte.rs","byte_start":181206,"byte_end":181223,"line_start":387,"line_end":387,"column_start":1,"column_end":18}}]},{"kind":"Struct","id":{"krate":0,"index":2946},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/byte.rs","byte_start":182988,"byte_end":183001,"line_start":442,"line_end":442,"column_start":5,"column_end":18},"name":"TakeUntilByte","qualname":"::parser::byte::TakeUntilByte","value":"TakeUntilByte { a }","parent":null,"children":[{"krate":0,"index":2948},{"krate":0,"index":2949}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/lib.rs","byte_start":20591,"byte_end":20621,"line_start":574,"line_end":574,"column_start":9,"column_end":39}}]},{"kind":"Field","id":{"krate":0,"index":2948},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/byte.rs","byte_start":183028,"byte_end":183029,"line_start":442,"line_end":442,"column_start":45,"column_end":46},"name":"a","qualname":"::parser::byte::TakeUntilByte::a","value":"u8","parent":{"krate":0,"index":2946},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":2944},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/byte.rs","byte_start":183003,"byte_end":183018,"line_start":442,"line_end":442,"column_start":20,"column_end":35},"name":"take_until_byte","qualname":"::parser::byte::take_until_byte","value":"pub fn take_until_byte<I>(u8) -> TakeUntilByte<I> where\n<I as\ncrate::stream::StreamOnce>::Error: crate::error::ParseError<<I as\n                                                            crate::stream::StreamOnce>::Item,\n                                                            <I as\n                                                            crate::stream::StreamOnce>::Range,\n                                                            <I as\n                                                            crate::stream::StreamOnce>::Position>,\nI: RangeStream + FullRangeStream, I::Range: AsRef<[u8]> + ::stream::Range","parent":null,"children":[],"decl_id":null,"docs":" Zero-copy parser which reads a range of 0 or more tokens until `a` is found.","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/lib.rs","byte_start":23665,"byte_end":23673,"line_start":647,"line_end":647,"column_start":11,"column_end":19}},{"value":"inline(always)","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/lib.rs","byte_start":23684,"byte_end":23701,"line_start":648,"line_end":648,"column_start":9,"column_end":26}}]},{"kind":"Struct","id":{"krate":0,"index":2969},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/byte.rs","byte_start":183693,"byte_end":183707,"line_start":461,"line_end":461,"column_start":5,"column_end":19},"name":"TakeUntilByte2","qualname":"::parser::byte::TakeUntilByte2","value":"TakeUntilByte2 { a, b }","parent":null,"children":[{"krate":0,"index":2971},{"krate":0,"index":2972},{"krate":0,"index":2973}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/lib.rs","byte_start":20591,"byte_end":20621,"line_start":574,"line_end":574,"column_start":9,"column_end":39}}]},{"kind":"Field","id":{"krate":0,"index":2971},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/byte.rs","byte_start":183736,"byte_end":183737,"line_start":461,"line_end":461,"column_start":48,"column_end":49},"name":"a","qualname":"::parser::byte::TakeUntilByte2::a","value":"u8","parent":{"krate":0,"index":2969},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2972},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/byte.rs","byte_start":183739,"byte_end":183740,"line_start":461,"line_end":461,"column_start":51,"column_end":52},"name":"b","qualname":"::parser::byte::TakeUntilByte2::b","value":"u8","parent":{"krate":0,"index":2969},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":2967},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/byte.rs","byte_start":183709,"byte_end":183725,"line_start":461,"line_end":461,"column_start":21,"column_end":37},"name":"take_until_byte2","qualname":"::parser::byte::take_until_byte2","value":"pub fn take_until_byte2<I>(u8, u8) -> TakeUntilByte2<I> where\n<I as\ncrate::stream::StreamOnce>::Error: crate::error::ParseError<<I as\n                                                            crate::stream::StreamOnce>::Item,\n                                                            <I as\n                                                            crate::stream::StreamOnce>::Range,\n                                                            <I as\n                                                            crate::stream::StreamOnce>::Position>,\nI: RangeStream + FullRangeStream, I::Range: AsRef<[u8]> + ::stream::Range","parent":null,"children":[],"decl_id":null,"docs":" Zero-copy parser which reads a range of 0 or more tokens until `a` or `b` is found.","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/lib.rs","byte_start":23665,"byte_end":23673,"line_start":647,"line_end":647,"column_start":11,"column_end":19}},{"value":"inline(always)","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/lib.rs","byte_start":23684,"byte_end":23701,"line_start":648,"line_end":648,"column_start":9,"column_end":26}}]},{"kind":"Struct","id":{"krate":0,"index":2993},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/byte.rs","byte_start":184394,"byte_end":184408,"line_start":480,"line_end":480,"column_start":5,"column_end":19},"name":"TakeUntilByte3","qualname":"::parser::byte::TakeUntilByte3","value":"TakeUntilByte3 { a, b, c }","parent":null,"children":[{"krate":0,"index":2995},{"krate":0,"index":2996},{"krate":0,"index":2997},{"krate":0,"index":2998}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/lib.rs","byte_start":20591,"byte_end":20621,"line_start":574,"line_end":574,"column_start":9,"column_end":39}}]},{"kind":"Field","id":{"krate":0,"index":2995},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/byte.rs","byte_start":184437,"byte_end":184438,"line_start":480,"line_end":480,"column_start":48,"column_end":49},"name":"a","qualname":"::parser::byte::TakeUntilByte3::a","value":"u8","parent":{"krate":0,"index":2993},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2996},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/byte.rs","byte_start":184440,"byte_end":184441,"line_start":480,"line_end":480,"column_start":51,"column_end":52},"name":"b","qualname":"::parser::byte::TakeUntilByte3::b","value":"u8","parent":{"krate":0,"index":2993},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2997},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/byte.rs","byte_start":184443,"byte_end":184444,"line_start":480,"line_end":480,"column_start":54,"column_end":55},"name":"c","qualname":"::parser::byte::TakeUntilByte3::c","value":"u8","parent":{"krate":0,"index":2993},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":2991},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/byte.rs","byte_start":184410,"byte_end":184426,"line_start":480,"line_end":480,"column_start":21,"column_end":37},"name":"take_until_byte3","qualname":"::parser::byte::take_until_byte3","value":"pub fn take_until_byte3<I>(u8, u8, u8) -> TakeUntilByte3<I> where\n<I as\ncrate::stream::StreamOnce>::Error: crate::error::ParseError<<I as\n                                                            crate::stream::StreamOnce>::Item,\n                                                            <I as\n                                                            crate::stream::StreamOnce>::Range,\n                                                            <I as\n                                                            crate::stream::StreamOnce>::Position>,\nI: RangeStream + FullRangeStream, I::Range: AsRef<[u8]> + ::stream::Range","parent":null,"children":[],"decl_id":null,"docs":" Zero-copy parser which reads a range of 0 or more tokens until `a`, 'b' or `c` is found.","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/lib.rs","byte_start":23665,"byte_end":23673,"line_start":647,"line_end":647,"column_start":11,"column_end":19}},{"value":"inline(always)","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/lib.rs","byte_start":23684,"byte_end":23701,"line_start":648,"line_end":648,"column_start":9,"column_end":26}}]},{"kind":"Struct","id":{"krate":0,"index":3005},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/byte.rs","byte_start":185134,"byte_end":185150,"line_start":504,"line_end":504,"column_start":8,"column_end":24},"name":"take_until_bytes","qualname":"::parser::byte::take_until_bytes","value":"take_until_bytes { needle }","parent":null,"children":[{"krate":0,"index":3008},{"krate":0,"index":3009}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/lib.rs","byte_start":20591,"byte_end":20621,"line_start":574,"line_end":574,"column_start":9,"column_end":39}}]},{"kind":"Field","id":{"krate":0,"index":3008},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/byte.rs","byte_start":185158,"byte_end":185164,"line_start":504,"line_end":504,"column_start":32,"column_end":38},"name":"needle","qualname":"::parser::byte::take_until_bytes::needle","value":"&'a [u8]","parent":{"krate":0,"index":3005},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":3022},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/byte.rs","byte_start":185134,"byte_end":185150,"line_start":504,"line_end":504,"column_start":8,"column_end":24},"name":"take_until_bytes","qualname":"::parser::byte::take_until_bytes","value":"pub fn take_until_bytes<'a, I>(&'a [u8]) -> take_until_bytes where\n<I as\ncrate::stream::StreamOnce>::Error: crate::error::ParseError<<I as\n                                                            crate::stream::StreamOnce>::Item,\n                                                            <I as\n                                                            crate::stream::StreamOnce>::Range,\n                                                            <I as\n                                                            crate::stream::StreamOnce>::Position>,\nI: RangeStream + FullRangeStream, I::Range: AsRef<[u8]> + ::stream::Range","parent":null,"children":[],"decl_id":null,"docs":" Zero-copy parser which reads a range of 0 or more tokens until `needle` is found.","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/lib.rs","byte_start":23665,"byte_end":23673,"line_start":647,"line_end":647,"column_start":11,"column_end":19}},{"value":"inline(always)","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/lib.rs","byte_start":23684,"byte_end":23701,"line_start":648,"line_end":648,"column_start":9,"column_end":26}}]},{"kind":"Mod","id":{"krate":0,"index":972},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/byte.rs","byte_start":186033,"byte_end":186036,"line_start":536,"line_end":536,"column_start":9,"column_end":12},"name":"num","qualname":"::parser::byte::num","value":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/byte.rs","parent":null,"children":[{"krate":0,"index":973},{"krate":0,"index":974},{"krate":0,"index":975},{"krate":0,"index":976},{"krate":0,"index":977},{"krate":0,"index":978},{"krate":0,"index":979},{"krate":0,"index":3047},{"krate":0,"index":3052},{"krate":0,"index":3028},{"krate":0,"index":3037},{"krate":0,"index":3041},{"krate":0,"index":3044},{"krate":0,"index":3075},{"krate":0,"index":3080},{"krate":0,"index":3056},{"krate":0,"index":3065},{"krate":0,"index":3069},{"krate":0,"index":3072},{"krate":0,"index":3103},{"krate":0,"index":3108},{"krate":0,"index":3084},{"krate":0,"index":3093},{"krate":0,"index":3097},{"krate":0,"index":3100},{"krate":0,"index":3131},{"krate":0,"index":3136},{"krate":0,"index":3112},{"krate":0,"index":3121},{"krate":0,"index":3125},{"krate":0,"index":3128},{"krate":0,"index":3159},{"krate":0,"index":3164},{"krate":0,"index":3140},{"krate":0,"index":3149},{"krate":0,"index":3153},{"krate":0,"index":3156},{"krate":0,"index":3187},{"krate":0,"index":3192},{"krate":0,"index":3168},{"krate":0,"index":3177},{"krate":0,"index":3181},{"krate":0,"index":3184},{"krate":0,"index":3215},{"krate":0,"index":3220},{"krate":0,"index":3196},{"krate":0,"index":3205},{"krate":0,"index":3209},{"krate":0,"index":3212},{"krate":0,"index":3243},{"krate":0,"index":3248},{"krate":0,"index":3224},{"krate":0,"index":3233},{"krate":0,"index":3237},{"krate":0,"index":3240}],"decl_id":null,"docs":" Parsers for decoding numbers in big-endian or little-endian order.\n","sig":null,"attributes":[{"value":"/ Parsers for decoding numbers in big-endian or little-endian order.","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/byte.rs","byte_start":185954,"byte_end":186024,"line_start":535,"line_end":535,"column_start":1,"column_end":71}}]},{"kind":"Struct","id":{"krate":0,"index":3047},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/byte.rs","byte_start":188664,"byte_end":188667,"line_start":620,"line_end":620,"column_start":13,"column_end":16},"name":"U16","qualname":"::parser::byte::num::U16","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":3037},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/byte.rs","byte_start":188669,"byte_end":188672,"line_start":620,"line_end":620,"column_start":18,"column_end":21},"name":"u16","qualname":"::parser::byte::num::u16","value":"pub fn u16<'a, B, I>() -> U16<B, I> where I: Stream<Item = u8>,\nI::Error: ParseError<I::Item, I::Range, I::Position>, B: ByteOrder","parent":null,"children":[],"decl_id":null,"docs":" Reads a u16 out of the byte stream with the specified endianess","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/byte.rs","byte_start":187317,"byte_end":187334,"line_start":577,"line_end":577,"column_start":13,"column_end":30}}]},{"kind":"Function","id":{"krate":0,"index":3041},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/byte.rs","byte_start":188674,"byte_end":188680,"line_start":620,"line_end":620,"column_start":23,"column_end":29},"name":"be_u16","qualname":"::parser::byte::num::be_u16","value":"pub fn be_u16<'a, I>() -> U16<BE, I> where I: Stream<Item = u8>,\nI::Error: ParseError<I::Item, I::Range, I::Position>","parent":null,"children":[],"decl_id":null,"docs":" Reads a u16 out of the byte stream with the specified endianess","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/byte.rs","byte_start":187659,"byte_end":187676,"line_start":588,"line_end":588,"column_start":13,"column_end":30}}]},{"kind":"Function","id":{"krate":0,"index":3044},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/byte.rs","byte_start":188682,"byte_end":188688,"line_start":620,"line_end":620,"column_start":31,"column_end":37},"name":"le_u16","qualname":"::parser::byte::num::le_u16","value":"pub fn le_u16<'a, I>() -> U16<LE, I> where I: Stream<Item = u8>,\nI::Error: ParseError<I::Item, I::Range, I::Position>","parent":null,"children":[],"decl_id":null,"docs":" Reads a u16 out of the byte stream with the specified endianess","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/byte.rs","byte_start":187956,"byte_end":187973,"line_start":598,"line_end":598,"column_start":13,"column_end":30}}]},{"kind":"Struct","id":{"krate":0,"index":3075},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/byte.rs","byte_start":189148,"byte_end":189151,"line_start":633,"line_end":633,"column_start":13,"column_end":16},"name":"U32","qualname":"::parser::byte::num::U32","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":3065},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/byte.rs","byte_start":189153,"byte_end":189156,"line_start":633,"line_end":633,"column_start":18,"column_end":21},"name":"u32","qualname":"::parser::byte::num::u32","value":"pub fn u32<'a, B, I>() -> U32<B, I> where I: Stream<Item = u8>,\nI::Error: ParseError<I::Item, I::Range, I::Position>, B: ByteOrder","parent":null,"children":[],"decl_id":null,"docs":" Reads a u32 out of the byte stream with the specified endianess","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/byte.rs","byte_start":187317,"byte_end":187334,"line_start":577,"line_end":577,"column_start":13,"column_end":30}}]},{"kind":"Function","id":{"krate":0,"index":3069},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/byte.rs","byte_start":189158,"byte_end":189164,"line_start":633,"line_end":633,"column_start":23,"column_end":29},"name":"be_u32","qualname":"::parser::byte::num::be_u32","value":"pub fn be_u32<'a, I>() -> U32<BE, I> where I: Stream<Item = u8>,\nI::Error: ParseError<I::Item, I::Range, I::Position>","parent":null,"children":[],"decl_id":null,"docs":" Reads a u32 out of the byte stream with the specified endianess","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/byte.rs","byte_start":187659,"byte_end":187676,"line_start":588,"line_end":588,"column_start":13,"column_end":30}}]},{"kind":"Function","id":{"krate":0,"index":3072},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/byte.rs","byte_start":189166,"byte_end":189172,"line_start":633,"line_end":633,"column_start":31,"column_end":37},"name":"le_u32","qualname":"::parser::byte::num::le_u32","value":"pub fn le_u32<'a, I>() -> U32<LE, I> where I: Stream<Item = u8>,\nI::Error: ParseError<I::Item, I::Range, I::Position>","parent":null,"children":[],"decl_id":null,"docs":" Reads a u32 out of the byte stream with the specified endianess","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/byte.rs","byte_start":187956,"byte_end":187973,"line_start":598,"line_end":598,"column_start":13,"column_end":30}}]},{"kind":"Struct","id":{"krate":0,"index":3103},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/byte.rs","byte_start":189648,"byte_end":189651,"line_start":646,"line_end":646,"column_start":13,"column_end":16},"name":"U64","qualname":"::parser::byte::num::U64","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":3093},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/byte.rs","byte_start":189653,"byte_end":189656,"line_start":646,"line_end":646,"column_start":18,"column_end":21},"name":"u64","qualname":"::parser::byte::num::u64","value":"pub fn u64<'a, B, I>() -> U64<B, I> where I: Stream<Item = u8>,\nI::Error: ParseError<I::Item, I::Range, I::Position>, B: ByteOrder","parent":null,"children":[],"decl_id":null,"docs":" Reads a u64 out of the byte stream with the specified endianess","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/byte.rs","byte_start":187317,"byte_end":187334,"line_start":577,"line_end":577,"column_start":13,"column_end":30}}]},{"kind":"Function","id":{"krate":0,"index":3097},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/byte.rs","byte_start":189658,"byte_end":189664,"line_start":646,"line_end":646,"column_start":23,"column_end":29},"name":"be_u64","qualname":"::parser::byte::num::be_u64","value":"pub fn be_u64<'a, I>() -> U64<BE, I> where I: Stream<Item = u8>,\nI::Error: ParseError<I::Item, I::Range, I::Position>","parent":null,"children":[],"decl_id":null,"docs":" Reads a u64 out of the byte stream with the specified endianess","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/byte.rs","byte_start":187659,"byte_end":187676,"line_start":588,"line_end":588,"column_start":13,"column_end":30}}]},{"kind":"Function","id":{"krate":0,"index":3100},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/byte.rs","byte_start":189666,"byte_end":189672,"line_start":646,"line_end":646,"column_start":31,"column_end":37},"name":"le_u64","qualname":"::parser::byte::num::le_u64","value":"pub fn le_u64<'a, I>() -> U64<LE, I> where I: Stream<Item = u8>,\nI::Error: ParseError<I::Item, I::Range, I::Position>","parent":null,"children":[],"decl_id":null,"docs":" Reads a u64 out of the byte stream with the specified endianess","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/byte.rs","byte_start":187956,"byte_end":187973,"line_start":598,"line_end":598,"column_start":13,"column_end":30}}]},{"kind":"Struct","id":{"krate":0,"index":3131},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/byte.rs","byte_start":190125,"byte_end":190128,"line_start":660,"line_end":660,"column_start":13,"column_end":16},"name":"I16","qualname":"::parser::byte::num::I16","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":3121},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/byte.rs","byte_start":190130,"byte_end":190133,"line_start":660,"line_end":660,"column_start":18,"column_end":21},"name":"i16","qualname":"::parser::byte::num::i16","value":"pub fn i16<'a, B, I>() -> I16<B, I> where I: Stream<Item = u8>,\nI::Error: ParseError<I::Item, I::Range, I::Position>, B: ByteOrder","parent":null,"children":[],"decl_id":null,"docs":" Reads a i16 out of the byte stream with the specified endianess","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/byte.rs","byte_start":187317,"byte_end":187334,"line_start":577,"line_end":577,"column_start":13,"column_end":30}}]},{"kind":"Function","id":{"krate":0,"index":3125},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/byte.rs","byte_start":190135,"byte_end":190141,"line_start":660,"line_end":660,"column_start":23,"column_end":29},"name":"be_i16","qualname":"::parser::byte::num::be_i16","value":"pub fn be_i16<'a, I>() -> I16<BE, I> where I: Stream<Item = u8>,\nI::Error: ParseError<I::Item, I::Range, I::Position>","parent":null,"children":[],"decl_id":null,"docs":" Reads a i16 out of the byte stream with the specified endianess","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/byte.rs","byte_start":187659,"byte_end":187676,"line_start":588,"line_end":588,"column_start":13,"column_end":30}}]},{"kind":"Function","id":{"krate":0,"index":3128},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/byte.rs","byte_start":190143,"byte_end":190149,"line_start":660,"line_end":660,"column_start":31,"column_end":37},"name":"le_i16","qualname":"::parser::byte::num::le_i16","value":"pub fn le_i16<'a, I>() -> I16<LE, I> where I: Stream<Item = u8>,\nI::Error: ParseError<I::Item, I::Range, I::Position>","parent":null,"children":[],"decl_id":null,"docs":" Reads a i16 out of the byte stream with the specified endianess","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/byte.rs","byte_start":187956,"byte_end":187973,"line_start":598,"line_end":598,"column_start":13,"column_end":30}}]},{"kind":"Struct","id":{"krate":0,"index":3159},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/byte.rs","byte_start":190610,"byte_end":190613,"line_start":674,"line_end":674,"column_start":13,"column_end":16},"name":"I32","qualname":"::parser::byte::num::I32","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":3149},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/byte.rs","byte_start":190615,"byte_end":190618,"line_start":674,"line_end":674,"column_start":18,"column_end":21},"name":"i32","qualname":"::parser::byte::num::i32","value":"pub fn i32<'a, B, I>() -> I32<B, I> where I: Stream<Item = u8>,\nI::Error: ParseError<I::Item, I::Range, I::Position>, B: ByteOrder","parent":null,"children":[],"decl_id":null,"docs":" Reads a i32 out of the byte stream with the specified endianess","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/byte.rs","byte_start":187317,"byte_end":187334,"line_start":577,"line_end":577,"column_start":13,"column_end":30}}]},{"kind":"Function","id":{"krate":0,"index":3153},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/byte.rs","byte_start":190620,"byte_end":190626,"line_start":674,"line_end":674,"column_start":23,"column_end":29},"name":"be_i32","qualname":"::parser::byte::num::be_i32","value":"pub fn be_i32<'a, I>() -> I32<BE, I> where I: Stream<Item = u8>,\nI::Error: ParseError<I::Item, I::Range, I::Position>","parent":null,"children":[],"decl_id":null,"docs":" Reads a i32 out of the byte stream with the specified endianess","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/byte.rs","byte_start":187659,"byte_end":187676,"line_start":588,"line_end":588,"column_start":13,"column_end":30}}]},{"kind":"Function","id":{"krate":0,"index":3156},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/byte.rs","byte_start":190628,"byte_end":190634,"line_start":674,"line_end":674,"column_start":31,"column_end":37},"name":"le_i32","qualname":"::parser::byte::num::le_i32","value":"pub fn le_i32<'a, I>() -> I32<LE, I> where I: Stream<Item = u8>,\nI::Error: ParseError<I::Item, I::Range, I::Position>","parent":null,"children":[],"decl_id":null,"docs":" Reads a i32 out of the byte stream with the specified endianess","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/byte.rs","byte_start":187956,"byte_end":187973,"line_start":598,"line_end":598,"column_start":13,"column_end":30}}]},{"kind":"Struct","id":{"krate":0,"index":3187},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/byte.rs","byte_start":191110,"byte_end":191113,"line_start":687,"line_end":687,"column_start":13,"column_end":16},"name":"I64","qualname":"::parser::byte::num::I64","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":3177},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/byte.rs","byte_start":191115,"byte_end":191118,"line_start":687,"line_end":687,"column_start":18,"column_end":21},"name":"i64","qualname":"::parser::byte::num::i64","value":"pub fn i64<'a, B, I>() -> I64<B, I> where I: Stream<Item = u8>,\nI::Error: ParseError<I::Item, I::Range, I::Position>, B: ByteOrder","parent":null,"children":[],"decl_id":null,"docs":" Reads a i64 out of the byte stream with the specified endianess","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/byte.rs","byte_start":187317,"byte_end":187334,"line_start":577,"line_end":577,"column_start":13,"column_end":30}}]},{"kind":"Function","id":{"krate":0,"index":3181},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/byte.rs","byte_start":191120,"byte_end":191126,"line_start":687,"line_end":687,"column_start":23,"column_end":29},"name":"be_i64","qualname":"::parser::byte::num::be_i64","value":"pub fn be_i64<'a, I>() -> I64<BE, I> where I: Stream<Item = u8>,\nI::Error: ParseError<I::Item, I::Range, I::Position>","parent":null,"children":[],"decl_id":null,"docs":" Reads a i64 out of the byte stream with the specified endianess","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/byte.rs","byte_start":187659,"byte_end":187676,"line_start":588,"line_end":588,"column_start":13,"column_end":30}}]},{"kind":"Function","id":{"krate":0,"index":3184},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/byte.rs","byte_start":191128,"byte_end":191134,"line_start":687,"line_end":687,"column_start":31,"column_end":37},"name":"le_i64","qualname":"::parser::byte::num::le_i64","value":"pub fn le_i64<'a, I>() -> I64<LE, I> where I: Stream<Item = u8>,\nI::Error: ParseError<I::Item, I::Range, I::Position>","parent":null,"children":[],"decl_id":null,"docs":" Reads a i64 out of the byte stream with the specified endianess","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/byte.rs","byte_start":187956,"byte_end":187973,"line_start":598,"line_end":598,"column_start":13,"column_end":30}}]},{"kind":"Struct","id":{"krate":0,"index":3215},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/byte.rs","byte_start":191682,"byte_end":191685,"line_start":703,"line_end":703,"column_start":13,"column_end":16},"name":"F32","qualname":"::parser::byte::num::F32","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":3205},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/byte.rs","byte_start":191687,"byte_end":191690,"line_start":703,"line_end":703,"column_start":18,"column_end":21},"name":"f32","qualname":"::parser::byte::num::f32","value":"pub fn f32<'a, B, I>() -> F32<B, I> where I: Stream<Item = u8>,\nI::Error: ParseError<I::Item, I::Range, I::Position>, B: ByteOrder","parent":null,"children":[],"decl_id":null,"docs":" Reads a i32 out of the byte stream with the specified endianess","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/byte.rs","byte_start":187317,"byte_end":187334,"line_start":577,"line_end":577,"column_start":13,"column_end":30}}]},{"kind":"Function","id":{"krate":0,"index":3209},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/byte.rs","byte_start":191692,"byte_end":191698,"line_start":703,"line_end":703,"column_start":23,"column_end":29},"name":"be_f32","qualname":"::parser::byte::num::be_f32","value":"pub fn be_f32<'a, I>() -> F32<BE, I> where I: Stream<Item = u8>,\nI::Error: ParseError<I::Item, I::Range, I::Position>","parent":null,"children":[],"decl_id":null,"docs":" Reads a i32 out of the byte stream with the specified endianess","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/byte.rs","byte_start":187659,"byte_end":187676,"line_start":588,"line_end":588,"column_start":13,"column_end":30}}]},{"kind":"Function","id":{"krate":0,"index":3212},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/byte.rs","byte_start":191700,"byte_end":191706,"line_start":703,"line_end":703,"column_start":31,"column_end":37},"name":"le_f32","qualname":"::parser::byte::num::le_f32","value":"pub fn le_f32<'a, I>() -> F32<LE, I> where I: Stream<Item = u8>,\nI::Error: ParseError<I::Item, I::Range, I::Position>","parent":null,"children":[],"decl_id":null,"docs":" Reads a i32 out of the byte stream with the specified endianess","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/byte.rs","byte_start":187956,"byte_end":187973,"line_start":598,"line_end":598,"column_start":13,"column_end":30}}]},{"kind":"Struct","id":{"krate":0,"index":3243},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/byte.rs","byte_start":192261,"byte_end":192264,"line_start":718,"line_end":718,"column_start":13,"column_end":16},"name":"F64","qualname":"::parser::byte::num::F64","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":3233},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/byte.rs","byte_start":192266,"byte_end":192269,"line_start":718,"line_end":718,"column_start":18,"column_end":21},"name":"f64","qualname":"::parser::byte::num::f64","value":"pub fn f64<'a, B, I>() -> F64<B, I> where I: Stream<Item = u8>,\nI::Error: ParseError<I::Item, I::Range, I::Position>, B: ByteOrder","parent":null,"children":[],"decl_id":null,"docs":" Reads a i64 out of the byte stream with the specified endianess","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/byte.rs","byte_start":187317,"byte_end":187334,"line_start":577,"line_end":577,"column_start":13,"column_end":30}}]},{"kind":"Function","id":{"krate":0,"index":3237},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/byte.rs","byte_start":192271,"byte_end":192277,"line_start":718,"line_end":718,"column_start":23,"column_end":29},"name":"be_f64","qualname":"::parser::byte::num::be_f64","value":"pub fn be_f64<'a, I>() -> F64<BE, I> where I: Stream<Item = u8>,\nI::Error: ParseError<I::Item, I::Range, I::Position>","parent":null,"children":[],"decl_id":null,"docs":" Reads a i64 out of the byte stream with the specified endianess","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/byte.rs","byte_start":187659,"byte_end":187676,"line_start":588,"line_end":588,"column_start":13,"column_end":30}}]},{"kind":"Function","id":{"krate":0,"index":3240},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/byte.rs","byte_start":192279,"byte_end":192285,"line_start":718,"line_end":718,"column_start":31,"column_end":37},"name":"le_f64","qualname":"::parser::byte::num::le_f64","value":"pub fn le_f64<'a, I>() -> F64<LE, I> where I: Stream<Item = u8>,\nI::Error: ParseError<I::Item, I::Range, I::Position>","parent":null,"children":[],"decl_id":null,"docs":" Reads a i64 out of the byte stream with the specified endianess","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/byte.rs","byte_start":187956,"byte_end":187973,"line_start":598,"line_end":598,"column_start":13,"column_end":30}}]},{"kind":"Mod","id":{"krate":0,"index":981},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/char.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"char","qualname":"::parser::char","value":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/char.rs","parent":null,"children":[{"krate":0,"index":982},{"krate":0,"index":983},{"krate":0,"index":984},{"krate":0,"index":985},{"krate":0,"index":986},{"krate":0,"index":987},{"krate":0,"index":988},{"krate":0,"index":989},{"krate":0,"index":990},{"krate":0,"index":991},{"krate":0,"index":992},{"krate":0,"index":993},{"krate":0,"index":994},{"krate":0,"index":995},{"krate":0,"index":8256},{"krate":0,"index":996},{"krate":0,"index":997},{"krate":0,"index":998},{"krate":0,"index":999},{"krate":0,"index":1000},{"krate":0,"index":1001},{"krate":0,"index":3265},{"krate":0,"index":3271},{"krate":0,"index":3268},{"krate":0,"index":3252},{"krate":0,"index":3263},{"krate":0,"index":3281},{"krate":0,"index":3286},{"krate":0,"index":3276},{"krate":0,"index":1003},{"krate":0,"index":3300},{"krate":0,"index":3305},{"krate":0,"index":3295},{"krate":0,"index":1005},{"krate":0,"index":3319},{"krate":0,"index":3324},{"krate":0,"index":3314},{"krate":0,"index":1007},{"krate":0,"index":3339},{"krate":0,"index":3344},{"krate":0,"index":3334},{"krate":0,"index":1009},{"krate":0,"index":3359},{"krate":0,"index":3364},{"krate":0,"index":3354},{"krate":0,"index":1011},{"krate":0,"index":3379},{"krate":0,"index":3384},{"krate":0,"index":3374},{"krate":0,"index":1013},{"krate":0,"index":3399},{"krate":0,"index":3404},{"krate":0,"index":3394},{"krate":0,"index":1015},{"krate":0,"index":3419},{"krate":0,"index":3424},{"krate":0,"index":3414},{"krate":0,"index":1017},{"krate":0,"index":3439},{"krate":0,"index":3444},{"krate":0,"index":3434},{"krate":0,"index":1019},{"krate":0,"index":3459},{"krate":0,"index":3464},{"krate":0,"index":3454},{"krate":0,"index":1021},{"krate":0,"index":3479},{"krate":0,"index":3484},{"krate":0,"index":3474},{"krate":0,"index":1023},{"krate":0,"index":1025},{"krate":0,"index":3494},{"krate":0,"index":3502},{"krate":0,"index":3499},{"krate":0,"index":1026},{"krate":0,"index":1034},{"krate":0,"index":3504},{"krate":0,"index":3515},{"krate":0,"index":3511},{"krate":0,"index":1036},{"krate":0,"index":1045}],"decl_id":null,"docs":" Module containing parsers specialized on character streams.\n","sig":null,"attributes":[{"value":"/ Module containing parsers specialized on character streams.","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/char.rs","byte_start":194995,"byte_end":195058,"line_start":1,"line_end":1,"column_start":1,"column_end":64}}]},{"kind":"Function","id":{"krate":0,"index":1001},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/char.rs","byte_start":195578,"byte_end":195582,"line_start":19,"line_end":19,"column_start":8,"column_end":12},"name":"char","qualname":"::parser::char::char","value":"pub fn char<I>(char) -> Token<I> where I: Stream<Item = char>,\nI::Error: ParseError<I::Item, I::Range, I::Position>","parent":null,"children":[],"decl_id":null,"docs":" Parses a character and succeeds if the character is equal to `c`.","sig":null,"attributes":[{"value":"/ Parses a character and succeeds if the character is equal to `c`.","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/char.rs","byte_start":195304,"byte_end":195373,"line_start":10,"line_end":10,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/char.rs","byte_start":195374,"byte_end":195377,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/char.rs","byte_start":195378,"byte_end":195385,"line_start":12,"line_end":12,"column_start":1,"column_end":8}},{"value":"/ use combine::Parser;","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/char.rs","byte_start":195386,"byte_end":195410,"line_start":13,"line_end":13,"column_start":1,"column_end":25}},{"value":"/ use combine::parser::char::char;","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/char.rs","byte_start":195411,"byte_end":195447,"line_start":14,"line_end":14,"column_start":1,"column_end":37}},{"value":"/ assert_eq!(char('!').parse(\"!\"), Ok(('!', \"\")));","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/char.rs","byte_start":195448,"byte_end":195500,"line_start":15,"line_end":15,"column_start":1,"column_end":53}},{"value":"/ assert!(char('A').parse(\"!\").is_err());","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/char.rs","byte_start":195501,"byte_end":195544,"line_start":16,"line_end":16,"column_start":1,"column_end":44}},{"value":"/ ```","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/char.rs","byte_start":195545,"byte_end":195552,"line_start":17,"line_end":17,"column_start":1,"column_end":8}},{"value":"inline(always)","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/char.rs","byte_start":195553,"byte_end":195570,"line_start":18,"line_end":18,"column_start":1,"column_end":18}}]},{"kind":"Struct","id":{"krate":0,"index":3265},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/char.rs","byte_start":195769,"byte_end":195774,"line_start":29,"line_end":29,"column_start":16,"column_end":21},"name":"Digit","qualname":"::parser::char::Digit","value":"Digit {  }","parent":null,"children":[{"krate":0,"index":3267}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/lib.rs","byte_start":20591,"byte_end":20621,"line_start":574,"line_end":574,"column_start":9,"column_end":39}}]},{"kind":"Function","id":{"krate":0,"index":3263},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/char.rs","byte_start":196023,"byte_end":196028,"line_start":38,"line_end":38,"column_start":12,"column_end":17},"name":"digit","qualname":"::parser::char::digit","value":"pub fn digit<I>() -> Digit<I> where\n<I as\ncrate::stream::StreamOnce>::Error: crate::error::ParseError<<I as\n                                                            crate::stream::StreamOnce>::Item,\n                                                            <I as\n                                                            crate::stream::StreamOnce>::Range,\n                                                            <I as\n                                                            crate::stream::StreamOnce>::Position>,\nI: Stream<Item = char>","parent":null,"children":[],"decl_id":null,"docs":" Parses a base-10 digit.","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/lib.rs","byte_start":23684,"byte_end":23701,"line_start":648,"line_end":648,"column_start":9,"column_end":26}}]},{"kind":"Struct","id":{"krate":0,"index":3281},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/char.rs","byte_start":196185,"byte_end":196190,"line_start":46,"line_end":46,"column_start":22,"column_end":27},"name":"Space","qualname":"::parser::char::Space","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1003},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/char.rs","byte_start":196779,"byte_end":196784,"line_start":63,"line_end":63,"column_start":8,"column_end":13},"name":"space","qualname":"::parser::char::space","value":"pub fn space<I>() -> Space<I> where I: Stream<Item = char>,\nI::Error: ParseError<I::Item, I::Range, I::Position>","parent":null,"children":[],"decl_id":null,"docs":" Parse a single whitespace according to [`std::char::is_whitespace`].","sig":null,"attributes":[{"value":"/ Parse a single whitespace according to [`std::char::is_whitespace`].","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/char.rs","byte_start":196243,"byte_end":196315,"line_start":48,"line_end":48,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/char.rs","byte_start":196316,"byte_end":196319,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ This includes space characters, tabs and newlines.","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/char.rs","byte_start":196320,"byte_end":196374,"line_start":50,"line_end":50,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/char.rs","byte_start":196375,"byte_end":196378,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ [`std::char::is_whitespace`]: https://doc.rust-lang.org/std/primitive.char.html#method.is_whitespace","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/char.rs","byte_start":196379,"byte_end":196483,"line_start":52,"line_end":52,"column_start":1,"column_end":105}},{"value":"/","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/char.rs","byte_start":196484,"byte_end":196487,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/char.rs","byte_start":196488,"byte_end":196495,"line_start":54,"line_end":54,"column_start":1,"column_end":8}},{"value":"/ use combine::Parser;","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/char.rs","byte_start":196496,"byte_end":196520,"line_start":55,"line_end":55,"column_start":1,"column_end":25}},{"value":"/ use combine::parser::char::space;","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/char.rs","byte_start":196521,"byte_end":196558,"line_start":56,"line_end":56,"column_start":1,"column_end":38}},{"value":"/ assert_eq!(space().parse(\" \"), Ok((' ', \"\")));","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/char.rs","byte_start":196559,"byte_end":196609,"line_start":57,"line_end":57,"column_start":1,"column_end":51}},{"value":"/ assert_eq!(space().parse(\"  \"), Ok((' ', \" \")));","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/char.rs","byte_start":196610,"byte_end":196662,"line_start":58,"line_end":58,"column_start":1,"column_end":53}},{"value":"/ assert!(space().parse(\"!\").is_err());","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/char.rs","byte_start":196663,"byte_end":196704,"line_start":59,"line_end":59,"column_start":1,"column_end":42}},{"value":"/ assert!(space().parse(\"\").is_err());","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/char.rs","byte_start":196705,"byte_end":196745,"line_start":60,"line_end":60,"column_start":1,"column_end":41}},{"value":"/ ```","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/char.rs","byte_start":196746,"byte_end":196753,"line_start":61,"line_end":61,"column_start":1,"column_end":8}},{"value":"inline(always)","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/char.rs","byte_start":196754,"byte_end":196771,"line_start":62,"line_end":62,"column_start":1,"column_end":18}}]},{"kind":"Struct","id":{"krate":0,"index":3300},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/char.rs","byte_start":197029,"byte_end":197035,"line_start":72,"line_end":72,"column_start":22,"column_end":28},"name":"Spaces","qualname":"::parser::char::Spaces","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1005},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/char.rs","byte_start":197535,"byte_end":197541,"line_start":87,"line_end":87,"column_start":8,"column_end":14},"name":"spaces","qualname":"::parser::char::spaces","value":"pub fn spaces<I>() -> Spaces<I> where I: Stream<Item = char>,\nI::Error: ParseError<I::Item, I::Range, I::Position>","parent":null,"children":[],"decl_id":null,"docs":" Skips over zero or more spaces according to [`std::char::is_whitespace`].","sig":null,"attributes":[{"value":"/ Skips over zero or more spaces according to [`std::char::is_whitespace`].","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/char.rs","byte_start":197077,"byte_end":197154,"line_start":74,"line_end":74,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/char.rs","byte_start":197155,"byte_end":197158,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ This includes space characters, tabs and newlines.","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/char.rs","byte_start":197159,"byte_end":197213,"line_start":76,"line_end":76,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/char.rs","byte_start":197214,"byte_end":197217,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/ [`std::char::is_whitespace`]: https://doc.rust-lang.org/std/primitive.char.html#method.is_whitespace","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/char.rs","byte_start":197218,"byte_end":197322,"line_start":78,"line_end":78,"column_start":1,"column_end":105}},{"value":"/","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/char.rs","byte_start":197323,"byte_end":197326,"line_start":79,"line_end":79,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/char.rs","byte_start":197327,"byte_end":197334,"line_start":80,"line_end":80,"column_start":1,"column_end":8}},{"value":"/ use combine::Parser;","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/char.rs","byte_start":197335,"byte_end":197359,"line_start":81,"line_end":81,"column_start":1,"column_end":25}},{"value":"/ use combine::parser::char::spaces;","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/char.rs","byte_start":197360,"byte_end":197398,"line_start":82,"line_end":82,"column_start":1,"column_end":39}},{"value":"/ assert_eq!(spaces().parse(\"\"), Ok(((), \"\")));","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/char.rs","byte_start":197399,"byte_end":197448,"line_start":83,"line_end":83,"column_start":1,"column_end":50}},{"value":"/ assert_eq!(spaces().parse(\"   \"), Ok(((), \"\")));","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/char.rs","byte_start":197449,"byte_end":197501,"line_start":84,"line_end":84,"column_start":1,"column_end":53}},{"value":"/ ```","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/char.rs","byte_start":197502,"byte_end":197509,"line_start":85,"line_end":85,"column_start":1,"column_end":8}},{"value":"inline(always)","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/char.rs","byte_start":197510,"byte_end":197527,"line_start":86,"line_end":86,"column_start":1,"column_end":18}}]},{"kind":"Struct","id":{"krate":0,"index":3319},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/char.rs","byte_start":197746,"byte_end":197753,"line_start":95,"line_end":95,"column_start":22,"column_end":29},"name":"Newline","qualname":"::parser::char::Newline","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1007},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/char.rs","byte_start":198057,"byte_end":198064,"line_start":106,"line_end":106,"column_start":8,"column_end":15},"name":"newline","qualname":"::parser::char::newline","value":"pub fn newline<I>() -> Newline<I> where I: Stream<Item = char>,\nI::Error: ParseError<I::Item, I::Range, I::Position>","parent":null,"children":[],"decl_id":null,"docs":" Parses a newline character (`'\\n'`).","sig":null,"attributes":[{"value":"/ Parses a newline character (`'\\n'`).","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/char.rs","byte_start":197806,"byte_end":197846,"line_start":97,"line_end":97,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/char.rs","byte_start":197847,"byte_end":197850,"line_start":98,"line_end":98,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/char.rs","byte_start":197851,"byte_end":197858,"line_start":99,"line_end":99,"column_start":1,"column_end":8}},{"value":"/ use combine::Parser;","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/char.rs","byte_start":197859,"byte_end":197883,"line_start":100,"line_end":100,"column_start":1,"column_end":25}},{"value":"/ use combine::parser::char::newline;","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/char.rs","byte_start":197884,"byte_end":197923,"line_start":101,"line_end":101,"column_start":1,"column_end":40}},{"value":"/ assert_eq!(newline().parse(\"\\n\"), Ok(('\\n', \"\")));","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/char.rs","byte_start":197924,"byte_end":197978,"line_start":102,"line_end":102,"column_start":1,"column_end":55}},{"value":"/ assert!(newline().parse(\"\\r\").is_err());","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/char.rs","byte_start":197979,"byte_end":198023,"line_start":103,"line_end":103,"column_start":1,"column_end":45}},{"value":"/ ```","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/char.rs","byte_start":198024,"byte_end":198031,"line_start":104,"line_end":104,"column_start":1,"column_end":8}},{"value":"inline(always)","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/char.rs","byte_start":198032,"byte_end":198049,"line_start":105,"line_end":105,"column_start":1,"column_end":18}}]},{"kind":"Struct","id":{"krate":0,"index":3339},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/char.rs","byte_start":198329,"byte_end":198333,"line_start":117,"line_end":117,"column_start":22,"column_end":26},"name":"CrLf","qualname":"::parser::char::CrLf","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1009},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/char.rs","byte_start":198733,"byte_end":198737,"line_start":129,"line_end":129,"column_start":8,"column_end":12},"name":"crlf","qualname":"::parser::char::crlf","value":"pub fn crlf<I>() -> CrLf<I> where I: Stream<Item = char>,\nI::Error: ParseError<I::Item, I::Range, I::Position>","parent":null,"children":[],"decl_id":null,"docs":" Parses carriage return and newline (`\"\\r\\n\"`), returning the newline character.","sig":null,"attributes":[{"value":"/ Parses carriage return and newline (`\"\\r\\n\"`), returning the newline character.","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/char.rs","byte_start":198404,"byte_end":198487,"line_start":119,"line_end":119,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/char.rs","byte_start":198488,"byte_end":198491,"line_start":120,"line_end":120,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/char.rs","byte_start":198492,"byte_end":198499,"line_start":121,"line_end":121,"column_start":1,"column_end":8}},{"value":"/ use combine::Parser;","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/char.rs","byte_start":198500,"byte_end":198524,"line_start":122,"line_end":122,"column_start":1,"column_end":25}},{"value":"/ use combine::parser::char::crlf;","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/char.rs","byte_start":198525,"byte_end":198561,"line_start":123,"line_end":123,"column_start":1,"column_end":37}},{"value":"/ assert_eq!(crlf().parse(\"\\r\\n\"), Ok(('\\n', \"\")));","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/char.rs","byte_start":198562,"byte_end":198615,"line_start":124,"line_end":124,"column_start":1,"column_end":54}},{"value":"/ assert!(crlf().parse(\"\\r\").is_err());","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/char.rs","byte_start":198616,"byte_end":198657,"line_start":125,"line_end":125,"column_start":1,"column_end":42}},{"value":"/ assert!(crlf().parse(\"\\n\").is_err());","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/char.rs","byte_start":198658,"byte_end":198699,"line_start":126,"line_end":126,"column_start":1,"column_end":42}},{"value":"/ ```","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/char.rs","byte_start":198700,"byte_end":198707,"line_start":127,"line_end":127,"column_start":1,"column_end":8}},{"value":"inline(always)","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/char.rs","byte_start":198708,"byte_end":198725,"line_start":128,"line_end":128,"column_start":1,"column_end":18}}]},{"kind":"Struct","id":{"krate":0,"index":3359},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/char.rs","byte_start":199040,"byte_end":199043,"line_start":142,"line_end":142,"column_start":22,"column_end":25},"name":"Tab","qualname":"::parser::char::Tab","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1011},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/char.rs","byte_start":199330,"byte_end":199333,"line_start":153,"line_end":153,"column_start":8,"column_end":11},"name":"tab","qualname":"::parser::char::tab","value":"pub fn tab<I>() -> Tab<I> where I: Stream<Item = char>,\nI::Error: ParseError<I::Item, I::Range, I::Position>","parent":null,"children":[],"decl_id":null,"docs":" Parses a tab character (`'\\t'`).","sig":null,"attributes":[{"value":"/ Parses a tab character (`'\\t'`).","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/char.rs","byte_start":199096,"byte_end":199132,"line_start":144,"line_end":144,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/char.rs","byte_start":199133,"byte_end":199136,"line_start":145,"line_end":145,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/char.rs","byte_start":199137,"byte_end":199144,"line_start":146,"line_end":146,"column_start":1,"column_end":8}},{"value":"/ use combine::Parser;","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/char.rs","byte_start":199145,"byte_end":199169,"line_start":147,"line_end":147,"column_start":1,"column_end":25}},{"value":"/ use combine::parser::char::tab;","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/char.rs","byte_start":199170,"byte_end":199205,"line_start":148,"line_end":148,"column_start":1,"column_end":36}},{"value":"/ assert_eq!(tab().parse(\"\\t\"), Ok(('\\t', \"\")));","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/char.rs","byte_start":199206,"byte_end":199256,"line_start":149,"line_end":149,"column_start":1,"column_end":51}},{"value":"/ assert!(tab().parse(\" \").is_err());","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/char.rs","byte_start":199257,"byte_end":199296,"line_start":150,"line_end":150,"column_start":1,"column_end":40}},{"value":"/ ```","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/char.rs","byte_start":199297,"byte_end":199304,"line_start":151,"line_end":151,"column_start":1,"column_end":8}},{"value":"inline(always)","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/char.rs","byte_start":199305,"byte_end":199322,"line_start":152,"line_end":152,"column_start":1,"column_end":18}}]},{"kind":"Struct","id":{"krate":0,"index":3379},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/char.rs","byte_start":199583,"byte_end":199588,"line_start":164,"line_end":164,"column_start":22,"column_end":27},"name":"Upper","qualname":"::parser::char::Upper","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1013},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/char.rs","byte_start":200022,"byte_end":200027,"line_start":177,"line_end":177,"column_start":8,"column_end":13},"name":"upper","qualname":"::parser::char::upper","value":"pub fn upper<I>() -> Upper<I> where I: Stream<Item = char>,\nI::Error: ParseError<I::Item, I::Range, I::Position>","parent":null,"children":[],"decl_id":null,"docs":" Parses an uppercase letter according to [`std::char::is_uppercase`].","sig":null,"attributes":[{"value":"/ Parses an uppercase letter according to [`std::char::is_uppercase`].","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/char.rs","byte_start":199641,"byte_end":199713,"line_start":166,"line_end":166,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/char.rs","byte_start":199714,"byte_end":199717,"line_start":167,"line_end":167,"column_start":1,"column_end":4}},{"value":"/ [`std::char::is_uppercase`]: https://doc.rust-lang.org/std/primitive.char.html#method.is_uppercase","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/char.rs","byte_start":199718,"byte_end":199820,"line_start":168,"line_end":168,"column_start":1,"column_end":103}},{"value":"/","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/char.rs","byte_start":199821,"byte_end":199824,"line_start":169,"line_end":169,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/char.rs","byte_start":199825,"byte_end":199832,"line_start":170,"line_end":170,"column_start":1,"column_end":8}},{"value":"/ use combine::Parser;","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/char.rs","byte_start":199833,"byte_end":199857,"line_start":171,"line_end":171,"column_start":1,"column_end":25}},{"value":"/ use combine::parser::char::upper;","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/char.rs","byte_start":199858,"byte_end":199895,"line_start":172,"line_end":172,"column_start":1,"column_end":38}},{"value":"/ assert_eq!(upper().parse(\"A\"), Ok(('A', \"\")));","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/char.rs","byte_start":199896,"byte_end":199946,"line_start":173,"line_end":173,"column_start":1,"column_end":51}},{"value":"/ assert!(upper().parse(\"a\").is_err());","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/char.rs","byte_start":199947,"byte_end":199988,"line_start":174,"line_end":174,"column_start":1,"column_end":42}},{"value":"/ ```","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/char.rs","byte_start":199989,"byte_end":199996,"line_start":175,"line_end":175,"column_start":1,"column_end":8}},{"value":"inline(always)","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/char.rs","byte_start":199997,"byte_end":200014,"line_start":176,"line_end":176,"column_start":1,"column_end":18}}]},{"kind":"Struct","id":{"krate":0,"index":3399},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/char.rs","byte_start":200300,"byte_end":200305,"line_start":188,"line_end":188,"column_start":22,"column_end":27},"name":"Lower","qualname":"::parser::char::Lower","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1015},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/char.rs","byte_start":200739,"byte_end":200744,"line_start":201,"line_end":201,"column_start":8,"column_end":13},"name":"lower","qualname":"::parser::char::lower","value":"pub fn lower<I>() -> Lower<I> where I: Stream<Item = char>,\nI::Error: ParseError<I::Item, I::Range, I::Position>","parent":null,"children":[],"decl_id":null,"docs":" Parses an lowercase letter according to [`std::char::is_lowercase`].","sig":null,"attributes":[{"value":"/ Parses an lowercase letter according to [`std::char::is_lowercase`].","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/char.rs","byte_start":200358,"byte_end":200430,"line_start":190,"line_end":190,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/char.rs","byte_start":200431,"byte_end":200434,"line_start":191,"line_end":191,"column_start":1,"column_end":4}},{"value":"/ [`std::char::is_lowercase`]: https://doc.rust-lang.org/std/primitive.char.html#method.is_lowercase","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/char.rs","byte_start":200435,"byte_end":200537,"line_start":192,"line_end":192,"column_start":1,"column_end":103}},{"value":"/","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/char.rs","byte_start":200538,"byte_end":200541,"line_start":193,"line_end":193,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/char.rs","byte_start":200542,"byte_end":200549,"line_start":194,"line_end":194,"column_start":1,"column_end":8}},{"value":"/ use combine::Parser;","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/char.rs","byte_start":200550,"byte_end":200574,"line_start":195,"line_end":195,"column_start":1,"column_end":25}},{"value":"/ use combine::parser::char::lower;","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/char.rs","byte_start":200575,"byte_end":200612,"line_start":196,"line_end":196,"column_start":1,"column_end":38}},{"value":"/ assert_eq!(lower().parse(\"a\"), Ok(('a', \"\")));","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/char.rs","byte_start":200613,"byte_end":200663,"line_start":197,"line_end":197,"column_start":1,"column_end":51}},{"value":"/ assert!(lower().parse(\"A\").is_err());","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/char.rs","byte_start":200664,"byte_end":200705,"line_start":198,"line_end":198,"column_start":1,"column_end":42}},{"value":"/ ```","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/char.rs","byte_start":200706,"byte_end":200713,"line_start":199,"line_end":199,"column_start":1,"column_end":8}},{"value":"inline(always)","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/char.rs","byte_start":200714,"byte_end":200731,"line_start":200,"line_end":200,"column_start":1,"column_end":18}}]},{"kind":"Struct","id":{"krate":0,"index":3419},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/char.rs","byte_start":201018,"byte_end":201026,"line_start":212,"line_end":212,"column_start":22,"column_end":30},"name":"AlphaNum","qualname":"::parser::char::AlphaNum","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1017},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/char.rs","byte_start":201551,"byte_end":201560,"line_start":226,"line_end":226,"column_start":8,"column_end":17},"name":"alpha_num","qualname":"::parser::char::alpha_num","value":"pub fn alpha_num<I>() -> AlphaNum<I> where I: Stream<Item = char>,\nI::Error: ParseError<I::Item, I::Range, I::Position>","parent":null,"children":[],"decl_id":null,"docs":" Parses either an alphabet letter or digit according to [`std::char::is_alphanumeric`].","sig":null,"attributes":[{"value":"/ Parses either an alphabet letter or digit according to [`std::char::is_alphanumeric`].","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/char.rs","byte_start":201079,"byte_end":201169,"line_start":214,"line_end":214,"column_start":1,"column_end":91}},{"value":"/","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/char.rs","byte_start":201170,"byte_end":201173,"line_start":215,"line_end":215,"column_start":1,"column_end":4}},{"value":"/ [`std::char::is_alphanumeric`]: https://doc.rust-lang.org/std/primitive.char.html#method.is_alphanumeric","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/char.rs","byte_start":201174,"byte_end":201282,"line_start":216,"line_end":216,"column_start":1,"column_end":109}},{"value":"/","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/char.rs","byte_start":201283,"byte_end":201286,"line_start":217,"line_end":217,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/char.rs","byte_start":201287,"byte_end":201294,"line_start":218,"line_end":218,"column_start":1,"column_end":8}},{"value":"/ use combine::Parser;","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/char.rs","byte_start":201295,"byte_end":201319,"line_start":219,"line_end":219,"column_start":1,"column_end":25}},{"value":"/ use combine::parser::char::alpha_num;","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/char.rs","byte_start":201320,"byte_end":201361,"line_start":220,"line_end":220,"column_start":1,"column_end":42}},{"value":"/ assert_eq!(alpha_num().parse(\"A\"), Ok(('A', \"\")));","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/char.rs","byte_start":201362,"byte_end":201416,"line_start":221,"line_end":221,"column_start":1,"column_end":55}},{"value":"/ assert_eq!(alpha_num().parse(\"1\"), Ok(('1', \"\")));","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/char.rs","byte_start":201417,"byte_end":201471,"line_start":222,"line_end":222,"column_start":1,"column_end":55}},{"value":"/ assert!(alpha_num().parse(\"!\").is_err());","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/char.rs","byte_start":201472,"byte_end":201517,"line_start":223,"line_end":223,"column_start":1,"column_end":46}},{"value":"/ ```","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/char.rs","byte_start":201518,"byte_end":201525,"line_start":224,"line_end":224,"column_start":1,"column_end":8}},{"value":"inline(always)","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/char.rs","byte_start":201526,"byte_end":201543,"line_start":225,"line_end":225,"column_start":1,"column_end":18}}]},{"kind":"Struct","id":{"krate":0,"index":3439},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/char.rs","byte_start":201855,"byte_end":201861,"line_start":238,"line_end":238,"column_start":22,"column_end":28},"name":"Letter","qualname":"::parser::char::Letter","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1019},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/char.rs","byte_start":202352,"byte_end":202358,"line_start":252,"line_end":252,"column_start":8,"column_end":14},"name":"letter","qualname":"::parser::char::letter","value":"pub fn letter<I>() -> Letter<I> where I: Stream<Item = char>,\nI::Error: ParseError<I::Item, I::Range, I::Position>","parent":null,"children":[],"decl_id":null,"docs":" Parses an alphabet letter according to [`std::char::is_alphabetic`].","sig":null,"attributes":[{"value":"/ Parses an alphabet letter according to [`std::char::is_alphabetic`].","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/char.rs","byte_start":201914,"byte_end":201986,"line_start":240,"line_end":240,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/char.rs","byte_start":201987,"byte_end":201990,"line_start":241,"line_end":241,"column_start":1,"column_end":4}},{"value":"/ [`std::char::is_alphabetic`]: https://doc.rust-lang.org/std/primitive.char.html#method.is_alphabetic","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/char.rs","byte_start":201991,"byte_end":202095,"line_start":242,"line_end":242,"column_start":1,"column_end":105}},{"value":"/","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/char.rs","byte_start":202096,"byte_end":202099,"line_start":243,"line_end":243,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/char.rs","byte_start":202100,"byte_end":202107,"line_start":244,"line_end":244,"column_start":1,"column_end":8}},{"value":"/ use combine::Parser;","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/char.rs","byte_start":202108,"byte_end":202132,"line_start":245,"line_end":245,"column_start":1,"column_end":25}},{"value":"/ use combine::parser::char::letter;","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/char.rs","byte_start":202133,"byte_end":202171,"line_start":246,"line_end":246,"column_start":1,"column_end":39}},{"value":"/ assert_eq!(letter().parse(\"a\"), Ok(('a', \"\")));","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/char.rs","byte_start":202172,"byte_end":202223,"line_start":247,"line_end":247,"column_start":1,"column_end":52}},{"value":"/ assert_eq!(letter().parse(\"A\"), Ok(('A', \"\")));","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/char.rs","byte_start":202224,"byte_end":202275,"line_start":248,"line_end":248,"column_start":1,"column_end":52}},{"value":"/ assert!(letter().parse(\"9\").is_err());","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/char.rs","byte_start":202276,"byte_end":202318,"line_start":249,"line_end":249,"column_start":1,"column_end":43}},{"value":"/ ```","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/char.rs","byte_start":202319,"byte_end":202326,"line_start":250,"line_end":250,"column_start":1,"column_end":8}},{"value":"inline(always)","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/char.rs","byte_start":202327,"byte_end":202344,"line_start":251,"line_end":251,"column_start":1,"column_end":18}}]},{"kind":"Struct","id":{"krate":0,"index":3459},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/char.rs","byte_start":202625,"byte_end":202633,"line_start":263,"line_end":263,"column_start":22,"column_end":30},"name":"OctDigit","qualname":"::parser::char::OctDigit","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1021},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/char.rs","byte_start":202926,"byte_end":202935,"line_start":274,"line_end":274,"column_start":8,"column_end":17},"name":"oct_digit","qualname":"::parser::char::oct_digit","value":"pub fn oct_digit<I>() -> OctDigit<I> where I: Stream<Item = char>,\nI::Error: ParseError<I::Item, I::Range, I::Position>","parent":null,"children":[],"decl_id":null,"docs":" Parses an octal digit.","sig":null,"attributes":[{"value":"/ Parses an octal digit.","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/char.rs","byte_start":202686,"byte_end":202712,"line_start":265,"line_end":265,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/char.rs","byte_start":202713,"byte_end":202716,"line_start":266,"line_end":266,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/char.rs","byte_start":202717,"byte_end":202724,"line_start":267,"line_end":267,"column_start":1,"column_end":8}},{"value":"/ use combine::Parser;","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/char.rs","byte_start":202725,"byte_end":202749,"line_start":268,"line_end":268,"column_start":1,"column_end":25}},{"value":"/ use combine::parser::char::oct_digit;","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/char.rs","byte_start":202750,"byte_end":202791,"line_start":269,"line_end":269,"column_start":1,"column_end":42}},{"value":"/ assert_eq!(oct_digit().parse(\"7\"), Ok(('7', \"\")));","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/char.rs","byte_start":202792,"byte_end":202846,"line_start":270,"line_end":270,"column_start":1,"column_end":55}},{"value":"/ assert!(oct_digit().parse(\"8\").is_err());","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/char.rs","byte_start":202847,"byte_end":202892,"line_start":271,"line_end":271,"column_start":1,"column_end":46}},{"value":"/ ```","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/char.rs","byte_start":202893,"byte_end":202900,"line_start":272,"line_end":272,"column_start":1,"column_end":8}},{"value":"inline(always)","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/char.rs","byte_start":202901,"byte_end":202918,"line_start":273,"line_end":273,"column_start":1,"column_end":18}}]},{"kind":"Struct","id":{"krate":0,"index":3479},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/char.rs","byte_start":203207,"byte_end":203215,"line_start":285,"line_end":285,"column_start":22,"column_end":30},"name":"HexDigit","qualname":"::parser::char::HexDigit","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1023},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/char.rs","byte_start":203541,"byte_end":203550,"line_start":296,"line_end":296,"column_start":8,"column_end":17},"name":"hex_digit","qualname":"::parser::char::hex_digit","value":"pub fn hex_digit<I>() -> HexDigit<I> where I: Stream<Item = char>,\nI::Error: ParseError<I::Item, I::Range, I::Position>","parent":null,"children":[],"decl_id":null,"docs":" Parses a hexdecimal digit with uppercase and lowercase.","sig":null,"attributes":[{"value":"/ Parses a hexdecimal digit with uppercase and lowercase.","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/char.rs","byte_start":203268,"byte_end":203327,"line_start":287,"line_end":287,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/char.rs","byte_start":203328,"byte_end":203331,"line_start":288,"line_end":288,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/char.rs","byte_start":203332,"byte_end":203339,"line_start":289,"line_end":289,"column_start":1,"column_end":8}},{"value":"/ use combine::Parser;","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/char.rs","byte_start":203340,"byte_end":203364,"line_start":290,"line_end":290,"column_start":1,"column_end":25}},{"value":"/ use combine::parser::char::hex_digit;","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/char.rs","byte_start":203365,"byte_end":203406,"line_start":291,"line_end":291,"column_start":1,"column_end":42}},{"value":"/ assert_eq!(hex_digit().parse(\"F\"), Ok(('F', \"\")));","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/char.rs","byte_start":203407,"byte_end":203461,"line_start":292,"line_end":292,"column_start":1,"column_end":55}},{"value":"/ assert!(hex_digit().parse(\"H\").is_err());","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/char.rs","byte_start":203462,"byte_end":203507,"line_start":293,"line_end":293,"column_start":1,"column_end":46}},{"value":"/ ```","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/char.rs","byte_start":203508,"byte_end":203515,"line_start":294,"line_end":294,"column_start":1,"column_end":8}},{"value":"inline(always)","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/char.rs","byte_start":203516,"byte_end":203533,"line_start":295,"line_end":295,"column_start":1,"column_end":18}}]},{"kind":"Struct","id":{"krate":0,"index":3494},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/char.rs","byte_start":203892,"byte_end":203895,"line_start":312,"line_end":312,"column_start":12,"column_end":15},"name":"Str","qualname":"::parser::char::Str","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1034},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/char.rs","byte_start":204941,"byte_end":204947,"line_start":350,"line_end":350,"column_start":8,"column_end":14},"name":"string","qualname":"::parser::char::string","value":"pub fn string<I>(&'static str) -> Str<I> where I: Stream<Item = char>,\nI::Error: ParseError<I::Item, I::Range, I::Position>","parent":null,"children":[],"decl_id":null,"docs":" Parses the string `s`.","sig":null,"attributes":[{"value":"/ Parses the string `s`.","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/char.rs","byte_start":204638,"byte_end":204664,"line_start":336,"line_end":336,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/char.rs","byte_start":204665,"byte_end":204668,"line_start":337,"line_end":337,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/char.rs","byte_start":204669,"byte_end":204676,"line_start":338,"line_end":338,"column_start":1,"column_end":8}},{"value":"/ # extern crate combine;","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/char.rs","byte_start":204677,"byte_end":204704,"line_start":339,"line_end":339,"column_start":1,"column_end":28}},{"value":"/ # use combine::*;","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/char.rs","byte_start":204705,"byte_end":204726,"line_start":340,"line_end":340,"column_start":1,"column_end":22}},{"value":"/ # use combine::parser::char::string;","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/char.rs","byte_start":204727,"byte_end":204767,"line_start":341,"line_end":341,"column_start":1,"column_end":41}},{"value":"/ # fn main() {","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/char.rs","byte_start":204768,"byte_end":204785,"line_start":342,"line_end":342,"column_start":1,"column_end":18}},{"value":"/ let result = string(\"rust\")","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/char.rs","byte_start":204786,"byte_end":204817,"line_start":343,"line_end":343,"column_start":1,"column_end":32}},{"value":"/     .parse(\"rust\")","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/char.rs","byte_start":204818,"byte_end":204840,"line_start":344,"line_end":344,"column_start":1,"column_end":23}},{"value":"/     .map(|x| x.0);","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/char.rs","byte_start":204841,"byte_end":204863,"line_start":345,"line_end":345,"column_start":1,"column_end":23}},{"value":"/ assert_eq!(result, Ok(\"rust\"));","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/char.rs","byte_start":204864,"byte_end":204899,"line_start":346,"line_end":346,"column_start":1,"column_end":36}},{"value":"/ # }","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/char.rs","byte_start":204900,"byte_end":204907,"line_start":347,"line_end":347,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/char.rs","byte_start":204908,"byte_end":204915,"line_start":348,"line_end":348,"column_start":1,"column_end":8}},{"value":"inline(always)","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/char.rs","byte_start":204916,"byte_end":204933,"line_start":349,"line_end":349,"column_start":1,"column_end":18}}]},{"kind":"Struct","id":{"krate":0,"index":3504},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/char.rs","byte_start":205133,"byte_end":205139,"line_start":359,"line_end":359,"column_start":12,"column_end":18},"name":"StrCmp","qualname":"::parser::char::StrCmp","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1045},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/char.rs","byte_start":206364,"byte_end":206374,"line_start":399,"line_end":399,"column_start":8,"column_end":18},"name":"string_cmp","qualname":"::parser::char::string_cmp","value":"pub fn string_cmp<C, I>(&'static str, C) -> StrCmp<C, I> where\nC: FnMut(char, char) -> bool, I: Stream<Item = char>,\nI::Error: ParseError<I::Item, I::Range, I::Position>","parent":null,"children":[],"decl_id":null,"docs":" Parses the string `s`, using `cmp` to compare each character.","sig":null,"attributes":[{"value":"/ Parses the string `s`, using `cmp` to compare each character.","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/char.rs","byte_start":205949,"byte_end":206014,"line_start":384,"line_end":384,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/char.rs","byte_start":206015,"byte_end":206018,"line_start":385,"line_end":385,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/char.rs","byte_start":206019,"byte_end":206026,"line_start":386,"line_end":386,"column_start":1,"column_end":8}},{"value":"/ # extern crate combine;","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/char.rs","byte_start":206027,"byte_end":206054,"line_start":387,"line_end":387,"column_start":1,"column_end":28}},{"value":"/ # use combine::*;","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/char.rs","byte_start":206055,"byte_end":206076,"line_start":388,"line_end":388,"column_start":1,"column_end":22}},{"value":"/ # use combine::parser::char::string_cmp;","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/char.rs","byte_start":206077,"byte_end":206121,"line_start":389,"line_end":389,"column_start":1,"column_end":45}},{"value":"/ use std::ascii::AsciiExt;","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/char.rs","byte_start":206122,"byte_end":206151,"line_start":390,"line_end":390,"column_start":1,"column_end":30}},{"value":"/ # fn main() {","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/char.rs","byte_start":206152,"byte_end":206169,"line_start":391,"line_end":391,"column_start":1,"column_end":18}},{"value":"/ let result = string_cmp(\"rust\", |l, r| l.eq_ignore_ascii_case(&r))","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/char.rs","byte_start":206170,"byte_end":206240,"line_start":392,"line_end":392,"column_start":1,"column_end":71}},{"value":"/     .parse(\"RusT\")","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/char.rs","byte_start":206241,"byte_end":206263,"line_start":393,"line_end":393,"column_start":1,"column_end":23}},{"value":"/     .map(|x| x.0);","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/char.rs","byte_start":206264,"byte_end":206286,"line_start":394,"line_end":394,"column_start":1,"column_end":23}},{"value":"/ assert_eq!(result, Ok(\"rust\"));","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/char.rs","byte_start":206287,"byte_end":206322,"line_start":395,"line_end":395,"column_start":1,"column_end":36}},{"value":"/ # }","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/char.rs","byte_start":206323,"byte_end":206330,"line_start":396,"line_end":396,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/char.rs","byte_start":206331,"byte_end":206338,"line_start":397,"line_end":397,"column_start":1,"column_end":8}},{"value":"inline(always)","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/char.rs","byte_start":206339,"byte_end":206356,"line_start":398,"line_end":398,"column_start":1,"column_end":18}}]},{"kind":"Mod","id":{"krate":0,"index":1048},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"choice","qualname":"::parser::choice","value":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","parent":null,"children":[{"krate":0,"index":1049},{"krate":0,"index":1050},{"krate":0,"index":1051},{"krate":0,"index":1052},{"krate":0,"index":1053},{"krate":0,"index":1054},{"krate":0,"index":1055},{"krate":0,"index":1056},{"krate":0,"index":1057},{"krate":0,"index":1058},{"krate":0,"index":8278},{"krate":0,"index":1059},{"krate":0,"index":1060},{"krate":0,"index":1061},{"krate":0,"index":1064},{"krate":0,"index":1073},{"krate":0,"index":3520},{"krate":0,"index":3623},{"krate":0,"index":3650},{"krate":0,"index":3686},{"krate":0,"index":3785},{"krate":0,"index":3811},{"krate":0,"index":3846},{"krate":0,"index":3941},{"krate":0,"index":3966},{"krate":0,"index":4000},{"krate":0,"index":4091},{"krate":0,"index":4115},{"krate":0,"index":4148},{"krate":0,"index":4235},{"krate":0,"index":4258},{"krate":0,"index":4290},{"krate":0,"index":4373},{"krate":0,"index":4395},{"krate":0,"index":4426},{"krate":0,"index":4505},{"krate":0,"index":4526},{"krate":0,"index":4556},{"krate":0,"index":4631},{"krate":0,"index":4651},{"krate":0,"index":4680},{"krate":0,"index":4751},{"krate":0,"index":4770},{"krate":0,"index":4798},{"krate":0,"index":4865},{"krate":0,"index":4883},{"krate":0,"index":4910},{"krate":0,"index":4973},{"krate":0,"index":4990},{"krate":0,"index":5016},{"krate":0,"index":5075},{"krate":0,"index":5091},{"krate":0,"index":5116},{"krate":0,"index":5171},{"krate":0,"index":5186},{"krate":0,"index":5210},{"krate":0,"index":5261},{"krate":0,"index":5275},{"krate":0,"index":5298},{"krate":0,"index":5345},{"krate":0,"index":5358},{"krate":0,"index":5380},{"krate":0,"index":5423},{"krate":0,"index":5435},{"krate":0,"index":5456},{"krate":0,"index":5495},{"krate":0,"index":5506},{"krate":0,"index":5526},{"krate":0,"index":5561},{"krate":0,"index":5571},{"krate":0,"index":5590},{"krate":0,"index":5621},{"krate":0,"index":5630},{"krate":0,"index":5648},{"krate":0,"index":5675},{"krate":0,"index":5683},{"krate":0,"index":5700},{"krate":0,"index":5723},{"krate":0,"index":5730},{"krate":0,"index":5746},{"krate":0,"index":5765},{"krate":0,"index":5771},{"krate":0,"index":5786},{"krate":0,"index":5801},{"krate":0,"index":5806},{"krate":0,"index":5820},{"krate":0,"index":5831},{"krate":0,"index":5835},{"krate":0,"index":5848},{"krate":0,"index":5855},{"krate":0,"index":5858},{"krate":0,"index":5870},{"krate":0,"index":5879},{"krate":0,"index":5888},{"krate":0,"index":5897},{"krate":0,"index":5906},{"krate":0,"index":5915},{"krate":0,"index":5924},{"krate":0,"index":5933},{"krate":0,"index":5942},{"krate":0,"index":5951},{"krate":0,"index":5960},{"krate":0,"index":5969},{"krate":0,"index":5978},{"krate":0,"index":5987},{"krate":0,"index":5996},{"krate":0,"index":6005},{"krate":0,"index":6014},{"krate":0,"index":6023},{"krate":0,"index":6032},{"krate":0,"index":6041},{"krate":0,"index":6050},{"krate":0,"index":6059},{"krate":0,"index":6068},{"krate":0,"index":6077},{"krate":0,"index":6086},{"krate":0,"index":6095},{"krate":0,"index":6104},{"krate":0,"index":6113},{"krate":0,"index":6122},{"krate":0,"index":6131},{"krate":0,"index":6140},{"krate":0,"index":6149},{"krate":0,"index":6158},{"krate":0,"index":6233},{"krate":0,"index":6240},{"krate":0,"index":6237},{"krate":0,"index":1087},{"krate":0,"index":1095},{"krate":0,"index":1100},{"krate":0,"index":1112},{"krate":0,"index":6244},{"krate":0,"index":6253},{"krate":0,"index":6249},{"krate":0,"index":1114},{"krate":0,"index":1125},{"krate":0,"index":6258},{"krate":0,"index":6265},{"krate":0,"index":6262},{"krate":0,"index":1128},{"krate":0,"index":1135}],"decl_id":null,"docs":" Combinators which take one or more parsers and attempts to parse successfully with at least one\n of them.\n","sig":null,"attributes":[{"value":"/ Combinators which take one or more parsers and attempts to parse successfully with at least one","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":208076,"byte_end":208175,"line_start":1,"line_end":1,"column_start":1,"column_end":100}},{"value":"/ of them.","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":208176,"byte_end":208188,"line_start":2,"line_end":2,"column_start":1,"column_end":13}}]},{"kind":"Trait","id":{"krate":0,"index":1064},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":210064,"byte_end":210076,"line_start":64,"line_end":64,"column_start":11,"column_end":23},"name":"ChoiceParser","qualname":"::parser::choice::ChoiceParser","value":"ChoiceParser","parent":null,"children":[{"krate":0,"index":1065},{"krate":0,"index":1066},{"krate":0,"index":1067},{"krate":0,"index":1068},{"krate":0,"index":1069},{"krate":0,"index":1070},{"krate":0,"index":1072}],"decl_id":null,"docs":" `ChoiceParser` represents a parser which may parse one of several different choices depending\n on the input.","sig":null,"attributes":[{"value":"/ `ChoiceParser` represents a parser which may parse one of several different choices depending","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":209864,"byte_end":209961,"line_start":60,"line_end":60,"column_start":1,"column_end":98}},{"value":"/ on the input.","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":209962,"byte_end":209979,"line_start":61,"line_end":61,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":209980,"byte_end":209983,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ This is an internal trait used to overload the `choice` function.","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":209984,"byte_end":210053,"line_start":63,"line_end":63,"column_start":1,"column_end":70}}]},{"kind":"Type","id":{"krate":0,"index":1065},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":210088,"byte_end":210093,"line_start":65,"line_end":65,"column_start":10,"column_end":15},"name":"Input","qualname":"::parser::choice::ChoiceParser::Input","value":"type Input: Stream;","parent":{"krate":0,"index":1064},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":1066},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":210112,"byte_end":210118,"line_start":66,"line_end":66,"column_start":10,"column_end":16},"name":"Output","qualname":"::parser::choice::ChoiceParser::Output","value":"type Output;","parent":{"krate":0,"index":1064},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":1067},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":210129,"byte_end":210141,"line_start":67,"line_end":67,"column_start":10,"column_end":22},"name":"PartialState","qualname":"::parser::choice::ChoiceParser::PartialState","value":"type PartialState: Default;","parent":{"krate":0,"index":1064},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1068},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":210160,"byte_end":210171,"line_start":69,"line_end":69,"column_start":8,"column_end":19},"name":"parse_first","qualname":"::parser::choice::ChoiceParser::parse_first","value":"pub fn parse_first(&mut Self, &mut Self::Input, &mut Self::PartialState)\n-> ConsumedResult<Self::Output, Self::Input>","parent":{"krate":0,"index":1064},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1069},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":210325,"byte_end":210338,"line_start":75,"line_end":75,"column_start":8,"column_end":21},"name":"parse_partial","qualname":"::parser::choice::ChoiceParser::parse_partial","value":"pub fn parse_partial(&mut Self, &mut Self::Input, &mut Self::PartialState)\n-> ConsumedResult<Self::Output, Self::Input>","parent":{"krate":0,"index":1064},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1070},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":210492,"byte_end":210509,"line_start":81,"line_end":81,"column_start":8,"column_end":25},"name":"parse_mode_choice","qualname":"::parser::choice::ChoiceParser::parse_mode_choice","value":"pub fn parse_mode_choice<M>(&mut Self, M, &mut Self::Input,\n                            &mut Self::PartialState)\n-> ConsumedResult<Self::Output, Self::Input> where M: ParseMode, Self: Sized","parent":{"krate":0,"index":1064},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1072},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":210735,"byte_end":210751,"line_start":91,"line_end":91,"column_start":8,"column_end":24},"name":"add_error_choice","qualname":"::parser::choice::ChoiceParser::add_error_choice","value":"pub fn add_error_choice(&mut Self,\n                        &mut Tracked<<Self::Input as StreamOnce>::Error>)","parent":{"krate":0,"index":1064},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3548},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217671,"byte_end":217672,"line_start":298,"line_end":298,"column_start":22,"column_end":23},"name":"A","qualname":"::parser::choice::A::A","value":"A::A(A)","parent":{"krate":0,"index":3520},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3551},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217673,"byte_end":217674,"line_start":298,"line_end":298,"column_start":24,"column_end":25},"name":"B","qualname":"::parser::choice::A::B","value":"A::B(B)","parent":{"krate":0,"index":3520},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3554},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217675,"byte_end":217676,"line_start":298,"line_end":298,"column_start":26,"column_end":27},"name":"C","qualname":"::parser::choice::A::C","value":"A::C(C)","parent":{"krate":0,"index":3520},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3557},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217677,"byte_end":217678,"line_start":298,"line_end":298,"column_start":28,"column_end":29},"name":"D","qualname":"::parser::choice::A::D","value":"A::D(D)","parent":{"krate":0,"index":3520},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3560},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217679,"byte_end":217680,"line_start":298,"line_end":298,"column_start":30,"column_end":31},"name":"E","qualname":"::parser::choice::A::E","value":"A::E(E)","parent":{"krate":0,"index":3520},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3563},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217681,"byte_end":217682,"line_start":298,"line_end":298,"column_start":32,"column_end":33},"name":"F","qualname":"::parser::choice::A::F","value":"A::F(F)","parent":{"krate":0,"index":3520},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3566},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217683,"byte_end":217684,"line_start":298,"line_end":298,"column_start":34,"column_end":35},"name":"G","qualname":"::parser::choice::A::G","value":"A::G(G)","parent":{"krate":0,"index":3520},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3569},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217685,"byte_end":217686,"line_start":298,"line_end":298,"column_start":36,"column_end":37},"name":"H","qualname":"::parser::choice::A::H","value":"A::H(H)","parent":{"krate":0,"index":3520},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3572},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217687,"byte_end":217688,"line_start":298,"line_end":298,"column_start":38,"column_end":39},"name":"I","qualname":"::parser::choice::A::I","value":"A::I(I)","parent":{"krate":0,"index":3520},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3575},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217689,"byte_end":217690,"line_start":298,"line_end":298,"column_start":40,"column_end":41},"name":"J","qualname":"::parser::choice::A::J","value":"A::J(J)","parent":{"krate":0,"index":3520},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3578},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217691,"byte_end":217692,"line_start":298,"line_end":298,"column_start":42,"column_end":43},"name":"K","qualname":"::parser::choice::A::K","value":"A::K(K)","parent":{"krate":0,"index":3520},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3581},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217693,"byte_end":217694,"line_start":298,"line_end":298,"column_start":44,"column_end":45},"name":"L","qualname":"::parser::choice::A::L","value":"A::L(L)","parent":{"krate":0,"index":3520},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3584},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217695,"byte_end":217696,"line_start":298,"line_end":298,"column_start":46,"column_end":47},"name":"M","qualname":"::parser::choice::A::M","value":"A::M(M)","parent":{"krate":0,"index":3520},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3587},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217697,"byte_end":217698,"line_start":298,"line_end":298,"column_start":48,"column_end":49},"name":"N","qualname":"::parser::choice::A::N","value":"A::N(N)","parent":{"krate":0,"index":3520},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3590},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217699,"byte_end":217700,"line_start":298,"line_end":298,"column_start":50,"column_end":51},"name":"O","qualname":"::parser::choice::A::O","value":"A::O(O)","parent":{"krate":0,"index":3520},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3593},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217701,"byte_end":217702,"line_start":298,"line_end":298,"column_start":52,"column_end":53},"name":"P","qualname":"::parser::choice::A::P","value":"A::P(P)","parent":{"krate":0,"index":3520},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3596},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217703,"byte_end":217704,"line_start":298,"line_end":298,"column_start":54,"column_end":55},"name":"Q","qualname":"::parser::choice::A::Q","value":"A::Q(Q)","parent":{"krate":0,"index":3520},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3599},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217705,"byte_end":217706,"line_start":298,"line_end":298,"column_start":56,"column_end":57},"name":"R","qualname":"::parser::choice::A::R","value":"A::R(R)","parent":{"krate":0,"index":3520},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3602},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217707,"byte_end":217708,"line_start":298,"line_end":298,"column_start":58,"column_end":59},"name":"S","qualname":"::parser::choice::A::S","value":"A::S(S)","parent":{"krate":0,"index":3520},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3605},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217709,"byte_end":217710,"line_start":298,"line_end":298,"column_start":60,"column_end":61},"name":"T","qualname":"::parser::choice::A::T","value":"A::T(T)","parent":{"krate":0,"index":3520},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3608},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217711,"byte_end":217712,"line_start":298,"line_end":298,"column_start":62,"column_end":63},"name":"U","qualname":"::parser::choice::A::U","value":"A::U(U)","parent":{"krate":0,"index":3520},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3611},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217713,"byte_end":217714,"line_start":298,"line_end":298,"column_start":64,"column_end":65},"name":"V","qualname":"::parser::choice::A::V","value":"A::V(V)","parent":{"krate":0,"index":3520},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3614},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217715,"byte_end":217716,"line_start":298,"line_end":298,"column_start":66,"column_end":67},"name":"X","qualname":"::parser::choice::A::X","value":"A::X(X)","parent":{"krate":0,"index":3520},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3617},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217717,"byte_end":217718,"line_start":298,"line_end":298,"column_start":68,"column_end":69},"name":"Y","qualname":"::parser::choice::A::Y","value":"A::Y(Y)","parent":{"krate":0,"index":3520},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3620},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217719,"byte_end":217720,"line_start":298,"line_end":298,"column_start":70,"column_end":71},"name":"Z","qualname":"::parser::choice::A::Z","value":"A::Z(Z)","parent":{"krate":0,"index":3520},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":3520},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217671,"byte_end":217672,"line_start":298,"line_end":298,"column_start":22,"column_end":23},"name":"A","qualname":"::parser::choice::A","value":"pub enum A<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T, U, V,\n           X, Y, Z> {\n    Empty,\n    A(A),\n    B(B),\n    C(C),\n    D(D),\n    E(E),\n    F(F),\n    G(G),\n    H(H),\n    I(I),\n    J(J),\n    K(K),\n    L(L),\n    M(M),\n    N(N),\n    O(O),\n    P(P),\n    Q(Q),\n    R(R),\n    S(S),\n    T(T),\n    U(U),\n    V(V),\n    X(X),\n    Y(Y),\n    Z(Z),\n}","parent":null,"children":[{"krate":0,"index":3546},{"krate":0,"index":3548},{"krate":0,"index":3551},{"krate":0,"index":3554},{"krate":0,"index":3557},{"krate":0,"index":3560},{"krate":0,"index":3563},{"krate":0,"index":3566},{"krate":0,"index":3569},{"krate":0,"index":3572},{"krate":0,"index":3575},{"krate":0,"index":3578},{"krate":0,"index":3581},{"krate":0,"index":3584},{"krate":0,"index":3587},{"krate":0,"index":3590},{"krate":0,"index":3593},{"krate":0,"index":3596},{"krate":0,"index":3599},{"krate":0,"index":3602},{"krate":0,"index":3605},{"krate":0,"index":3608},{"krate":0,"index":3611},{"krate":0,"index":3614},{"krate":0,"index":3617},{"krate":0,"index":3620}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3713},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217673,"byte_end":217674,"line_start":298,"line_end":298,"column_start":24,"column_end":25},"name":"B","qualname":"::parser::choice::B::B","value":"B::B(B)","parent":{"krate":0,"index":3686},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3716},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217675,"byte_end":217676,"line_start":298,"line_end":298,"column_start":26,"column_end":27},"name":"C","qualname":"::parser::choice::B::C","value":"B::C(C)","parent":{"krate":0,"index":3686},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3719},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217677,"byte_end":217678,"line_start":298,"line_end":298,"column_start":28,"column_end":29},"name":"D","qualname":"::parser::choice::B::D","value":"B::D(D)","parent":{"krate":0,"index":3686},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3722},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217679,"byte_end":217680,"line_start":298,"line_end":298,"column_start":30,"column_end":31},"name":"E","qualname":"::parser::choice::B::E","value":"B::E(E)","parent":{"krate":0,"index":3686},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3725},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217681,"byte_end":217682,"line_start":298,"line_end":298,"column_start":32,"column_end":33},"name":"F","qualname":"::parser::choice::B::F","value":"B::F(F)","parent":{"krate":0,"index":3686},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3728},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217683,"byte_end":217684,"line_start":298,"line_end":298,"column_start":34,"column_end":35},"name":"G","qualname":"::parser::choice::B::G","value":"B::G(G)","parent":{"krate":0,"index":3686},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3731},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217685,"byte_end":217686,"line_start":298,"line_end":298,"column_start":36,"column_end":37},"name":"H","qualname":"::parser::choice::B::H","value":"B::H(H)","parent":{"krate":0,"index":3686},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3734},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217687,"byte_end":217688,"line_start":298,"line_end":298,"column_start":38,"column_end":39},"name":"I","qualname":"::parser::choice::B::I","value":"B::I(I)","parent":{"krate":0,"index":3686},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3737},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217689,"byte_end":217690,"line_start":298,"line_end":298,"column_start":40,"column_end":41},"name":"J","qualname":"::parser::choice::B::J","value":"B::J(J)","parent":{"krate":0,"index":3686},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3740},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217691,"byte_end":217692,"line_start":298,"line_end":298,"column_start":42,"column_end":43},"name":"K","qualname":"::parser::choice::B::K","value":"B::K(K)","parent":{"krate":0,"index":3686},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3743},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217693,"byte_end":217694,"line_start":298,"line_end":298,"column_start":44,"column_end":45},"name":"L","qualname":"::parser::choice::B::L","value":"B::L(L)","parent":{"krate":0,"index":3686},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3746},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217695,"byte_end":217696,"line_start":298,"line_end":298,"column_start":46,"column_end":47},"name":"M","qualname":"::parser::choice::B::M","value":"B::M(M)","parent":{"krate":0,"index":3686},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3749},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217697,"byte_end":217698,"line_start":298,"line_end":298,"column_start":48,"column_end":49},"name":"N","qualname":"::parser::choice::B::N","value":"B::N(N)","parent":{"krate":0,"index":3686},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3752},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217699,"byte_end":217700,"line_start":298,"line_end":298,"column_start":50,"column_end":51},"name":"O","qualname":"::parser::choice::B::O","value":"B::O(O)","parent":{"krate":0,"index":3686},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3755},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217701,"byte_end":217702,"line_start":298,"line_end":298,"column_start":52,"column_end":53},"name":"P","qualname":"::parser::choice::B::P","value":"B::P(P)","parent":{"krate":0,"index":3686},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3758},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217703,"byte_end":217704,"line_start":298,"line_end":298,"column_start":54,"column_end":55},"name":"Q","qualname":"::parser::choice::B::Q","value":"B::Q(Q)","parent":{"krate":0,"index":3686},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3761},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217705,"byte_end":217706,"line_start":298,"line_end":298,"column_start":56,"column_end":57},"name":"R","qualname":"::parser::choice::B::R","value":"B::R(R)","parent":{"krate":0,"index":3686},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3764},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217707,"byte_end":217708,"line_start":298,"line_end":298,"column_start":58,"column_end":59},"name":"S","qualname":"::parser::choice::B::S","value":"B::S(S)","parent":{"krate":0,"index":3686},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3767},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217709,"byte_end":217710,"line_start":298,"line_end":298,"column_start":60,"column_end":61},"name":"T","qualname":"::parser::choice::B::T","value":"B::T(T)","parent":{"krate":0,"index":3686},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3770},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217711,"byte_end":217712,"line_start":298,"line_end":298,"column_start":62,"column_end":63},"name":"U","qualname":"::parser::choice::B::U","value":"B::U(U)","parent":{"krate":0,"index":3686},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3773},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217713,"byte_end":217714,"line_start":298,"line_end":298,"column_start":64,"column_end":65},"name":"V","qualname":"::parser::choice::B::V","value":"B::V(V)","parent":{"krate":0,"index":3686},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3776},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217715,"byte_end":217716,"line_start":298,"line_end":298,"column_start":66,"column_end":67},"name":"X","qualname":"::parser::choice::B::X","value":"B::X(X)","parent":{"krate":0,"index":3686},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3779},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217717,"byte_end":217718,"line_start":298,"line_end":298,"column_start":68,"column_end":69},"name":"Y","qualname":"::parser::choice::B::Y","value":"B::Y(Y)","parent":{"krate":0,"index":3686},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3782},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217719,"byte_end":217720,"line_start":298,"line_end":298,"column_start":70,"column_end":71},"name":"Z","qualname":"::parser::choice::B::Z","value":"B::Z(Z)","parent":{"krate":0,"index":3686},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":3686},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217673,"byte_end":217674,"line_start":298,"line_end":298,"column_start":24,"column_end":25},"name":"B","qualname":"::parser::choice::B","value":"pub enum B<B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T, U, V, X,\n           Y, Z> {\n    Empty,\n    B(B),\n    C(C),\n    D(D),\n    E(E),\n    F(F),\n    G(G),\n    H(H),\n    I(I),\n    J(J),\n    K(K),\n    L(L),\n    M(M),\n    N(N),\n    O(O),\n    P(P),\n    Q(Q),\n    R(R),\n    S(S),\n    T(T),\n    U(U),\n    V(V),\n    X(X),\n    Y(Y),\n    Z(Z),\n}","parent":null,"children":[{"krate":0,"index":3711},{"krate":0,"index":3713},{"krate":0,"index":3716},{"krate":0,"index":3719},{"krate":0,"index":3722},{"krate":0,"index":3725},{"krate":0,"index":3728},{"krate":0,"index":3731},{"krate":0,"index":3734},{"krate":0,"index":3737},{"krate":0,"index":3740},{"krate":0,"index":3743},{"krate":0,"index":3746},{"krate":0,"index":3749},{"krate":0,"index":3752},{"krate":0,"index":3755},{"krate":0,"index":3758},{"krate":0,"index":3761},{"krate":0,"index":3764},{"krate":0,"index":3767},{"krate":0,"index":3770},{"krate":0,"index":3773},{"krate":0,"index":3776},{"krate":0,"index":3779},{"krate":0,"index":3782}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3872},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217675,"byte_end":217676,"line_start":298,"line_end":298,"column_start":26,"column_end":27},"name":"C","qualname":"::parser::choice::C::C","value":"C::C(C)","parent":{"krate":0,"index":3846},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3875},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217677,"byte_end":217678,"line_start":298,"line_end":298,"column_start":28,"column_end":29},"name":"D","qualname":"::parser::choice::C::D","value":"C::D(D)","parent":{"krate":0,"index":3846},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3878},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217679,"byte_end":217680,"line_start":298,"line_end":298,"column_start":30,"column_end":31},"name":"E","qualname":"::parser::choice::C::E","value":"C::E(E)","parent":{"krate":0,"index":3846},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3881},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217681,"byte_end":217682,"line_start":298,"line_end":298,"column_start":32,"column_end":33},"name":"F","qualname":"::parser::choice::C::F","value":"C::F(F)","parent":{"krate":0,"index":3846},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3884},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217683,"byte_end":217684,"line_start":298,"line_end":298,"column_start":34,"column_end":35},"name":"G","qualname":"::parser::choice::C::G","value":"C::G(G)","parent":{"krate":0,"index":3846},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3887},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217685,"byte_end":217686,"line_start":298,"line_end":298,"column_start":36,"column_end":37},"name":"H","qualname":"::parser::choice::C::H","value":"C::H(H)","parent":{"krate":0,"index":3846},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3890},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217687,"byte_end":217688,"line_start":298,"line_end":298,"column_start":38,"column_end":39},"name":"I","qualname":"::parser::choice::C::I","value":"C::I(I)","parent":{"krate":0,"index":3846},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3893},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217689,"byte_end":217690,"line_start":298,"line_end":298,"column_start":40,"column_end":41},"name":"J","qualname":"::parser::choice::C::J","value":"C::J(J)","parent":{"krate":0,"index":3846},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3896},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217691,"byte_end":217692,"line_start":298,"line_end":298,"column_start":42,"column_end":43},"name":"K","qualname":"::parser::choice::C::K","value":"C::K(K)","parent":{"krate":0,"index":3846},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3899},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217693,"byte_end":217694,"line_start":298,"line_end":298,"column_start":44,"column_end":45},"name":"L","qualname":"::parser::choice::C::L","value":"C::L(L)","parent":{"krate":0,"index":3846},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3902},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217695,"byte_end":217696,"line_start":298,"line_end":298,"column_start":46,"column_end":47},"name":"M","qualname":"::parser::choice::C::M","value":"C::M(M)","parent":{"krate":0,"index":3846},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3905},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217697,"byte_end":217698,"line_start":298,"line_end":298,"column_start":48,"column_end":49},"name":"N","qualname":"::parser::choice::C::N","value":"C::N(N)","parent":{"krate":0,"index":3846},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3908},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217699,"byte_end":217700,"line_start":298,"line_end":298,"column_start":50,"column_end":51},"name":"O","qualname":"::parser::choice::C::O","value":"C::O(O)","parent":{"krate":0,"index":3846},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3911},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217701,"byte_end":217702,"line_start":298,"line_end":298,"column_start":52,"column_end":53},"name":"P","qualname":"::parser::choice::C::P","value":"C::P(P)","parent":{"krate":0,"index":3846},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3914},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217703,"byte_end":217704,"line_start":298,"line_end":298,"column_start":54,"column_end":55},"name":"Q","qualname":"::parser::choice::C::Q","value":"C::Q(Q)","parent":{"krate":0,"index":3846},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3917},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217705,"byte_end":217706,"line_start":298,"line_end":298,"column_start":56,"column_end":57},"name":"R","qualname":"::parser::choice::C::R","value":"C::R(R)","parent":{"krate":0,"index":3846},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3920},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217707,"byte_end":217708,"line_start":298,"line_end":298,"column_start":58,"column_end":59},"name":"S","qualname":"::parser::choice::C::S","value":"C::S(S)","parent":{"krate":0,"index":3846},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3923},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217709,"byte_end":217710,"line_start":298,"line_end":298,"column_start":60,"column_end":61},"name":"T","qualname":"::parser::choice::C::T","value":"C::T(T)","parent":{"krate":0,"index":3846},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3926},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217711,"byte_end":217712,"line_start":298,"line_end":298,"column_start":62,"column_end":63},"name":"U","qualname":"::parser::choice::C::U","value":"C::U(U)","parent":{"krate":0,"index":3846},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3929},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217713,"byte_end":217714,"line_start":298,"line_end":298,"column_start":64,"column_end":65},"name":"V","qualname":"::parser::choice::C::V","value":"C::V(V)","parent":{"krate":0,"index":3846},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3932},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217715,"byte_end":217716,"line_start":298,"line_end":298,"column_start":66,"column_end":67},"name":"X","qualname":"::parser::choice::C::X","value":"C::X(X)","parent":{"krate":0,"index":3846},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3935},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217717,"byte_end":217718,"line_start":298,"line_end":298,"column_start":68,"column_end":69},"name":"Y","qualname":"::parser::choice::C::Y","value":"C::Y(Y)","parent":{"krate":0,"index":3846},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3938},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217719,"byte_end":217720,"line_start":298,"line_end":298,"column_start":70,"column_end":71},"name":"Z","qualname":"::parser::choice::C::Z","value":"C::Z(Z)","parent":{"krate":0,"index":3846},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":3846},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217675,"byte_end":217676,"line_start":298,"line_end":298,"column_start":26,"column_end":27},"name":"C","qualname":"::parser::choice::C","value":"pub enum C<C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T, U, V, X, Y,\n           Z> {\n    Empty,\n    C(C),\n    D(D),\n    E(E),\n    F(F),\n    G(G),\n    H(H),\n    I(I),\n    J(J),\n    K(K),\n    L(L),\n    M(M),\n    N(N),\n    O(O),\n    P(P),\n    Q(Q),\n    R(R),\n    S(S),\n    T(T),\n    U(U),\n    V(V),\n    X(X),\n    Y(Y),\n    Z(Z),\n}","parent":null,"children":[{"krate":0,"index":3870},{"krate":0,"index":3872},{"krate":0,"index":3875},{"krate":0,"index":3878},{"krate":0,"index":3881},{"krate":0,"index":3884},{"krate":0,"index":3887},{"krate":0,"index":3890},{"krate":0,"index":3893},{"krate":0,"index":3896},{"krate":0,"index":3899},{"krate":0,"index":3902},{"krate":0,"index":3905},{"krate":0,"index":3908},{"krate":0,"index":3911},{"krate":0,"index":3914},{"krate":0,"index":3917},{"krate":0,"index":3920},{"krate":0,"index":3923},{"krate":0,"index":3926},{"krate":0,"index":3929},{"krate":0,"index":3932},{"krate":0,"index":3935},{"krate":0,"index":3938}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4025},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217677,"byte_end":217678,"line_start":298,"line_end":298,"column_start":28,"column_end":29},"name":"D","qualname":"::parser::choice::D::D","value":"D::D(D)","parent":{"krate":0,"index":4000},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4028},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217679,"byte_end":217680,"line_start":298,"line_end":298,"column_start":30,"column_end":31},"name":"E","qualname":"::parser::choice::D::E","value":"D::E(E)","parent":{"krate":0,"index":4000},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4031},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217681,"byte_end":217682,"line_start":298,"line_end":298,"column_start":32,"column_end":33},"name":"F","qualname":"::parser::choice::D::F","value":"D::F(F)","parent":{"krate":0,"index":4000},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4034},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217683,"byte_end":217684,"line_start":298,"line_end":298,"column_start":34,"column_end":35},"name":"G","qualname":"::parser::choice::D::G","value":"D::G(G)","parent":{"krate":0,"index":4000},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4037},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217685,"byte_end":217686,"line_start":298,"line_end":298,"column_start":36,"column_end":37},"name":"H","qualname":"::parser::choice::D::H","value":"D::H(H)","parent":{"krate":0,"index":4000},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4040},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217687,"byte_end":217688,"line_start":298,"line_end":298,"column_start":38,"column_end":39},"name":"I","qualname":"::parser::choice::D::I","value":"D::I(I)","parent":{"krate":0,"index":4000},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4043},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217689,"byte_end":217690,"line_start":298,"line_end":298,"column_start":40,"column_end":41},"name":"J","qualname":"::parser::choice::D::J","value":"D::J(J)","parent":{"krate":0,"index":4000},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4046},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217691,"byte_end":217692,"line_start":298,"line_end":298,"column_start":42,"column_end":43},"name":"K","qualname":"::parser::choice::D::K","value":"D::K(K)","parent":{"krate":0,"index":4000},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4049},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217693,"byte_end":217694,"line_start":298,"line_end":298,"column_start":44,"column_end":45},"name":"L","qualname":"::parser::choice::D::L","value":"D::L(L)","parent":{"krate":0,"index":4000},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4052},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217695,"byte_end":217696,"line_start":298,"line_end":298,"column_start":46,"column_end":47},"name":"M","qualname":"::parser::choice::D::M","value":"D::M(M)","parent":{"krate":0,"index":4000},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4055},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217697,"byte_end":217698,"line_start":298,"line_end":298,"column_start":48,"column_end":49},"name":"N","qualname":"::parser::choice::D::N","value":"D::N(N)","parent":{"krate":0,"index":4000},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4058},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217699,"byte_end":217700,"line_start":298,"line_end":298,"column_start":50,"column_end":51},"name":"O","qualname":"::parser::choice::D::O","value":"D::O(O)","parent":{"krate":0,"index":4000},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4061},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217701,"byte_end":217702,"line_start":298,"line_end":298,"column_start":52,"column_end":53},"name":"P","qualname":"::parser::choice::D::P","value":"D::P(P)","parent":{"krate":0,"index":4000},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4064},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217703,"byte_end":217704,"line_start":298,"line_end":298,"column_start":54,"column_end":55},"name":"Q","qualname":"::parser::choice::D::Q","value":"D::Q(Q)","parent":{"krate":0,"index":4000},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4067},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217705,"byte_end":217706,"line_start":298,"line_end":298,"column_start":56,"column_end":57},"name":"R","qualname":"::parser::choice::D::R","value":"D::R(R)","parent":{"krate":0,"index":4000},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4070},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217707,"byte_end":217708,"line_start":298,"line_end":298,"column_start":58,"column_end":59},"name":"S","qualname":"::parser::choice::D::S","value":"D::S(S)","parent":{"krate":0,"index":4000},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4073},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217709,"byte_end":217710,"line_start":298,"line_end":298,"column_start":60,"column_end":61},"name":"T","qualname":"::parser::choice::D::T","value":"D::T(T)","parent":{"krate":0,"index":4000},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4076},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217711,"byte_end":217712,"line_start":298,"line_end":298,"column_start":62,"column_end":63},"name":"U","qualname":"::parser::choice::D::U","value":"D::U(U)","parent":{"krate":0,"index":4000},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4079},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217713,"byte_end":217714,"line_start":298,"line_end":298,"column_start":64,"column_end":65},"name":"V","qualname":"::parser::choice::D::V","value":"D::V(V)","parent":{"krate":0,"index":4000},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4082},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217715,"byte_end":217716,"line_start":298,"line_end":298,"column_start":66,"column_end":67},"name":"X","qualname":"::parser::choice::D::X","value":"D::X(X)","parent":{"krate":0,"index":4000},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4085},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217717,"byte_end":217718,"line_start":298,"line_end":298,"column_start":68,"column_end":69},"name":"Y","qualname":"::parser::choice::D::Y","value":"D::Y(Y)","parent":{"krate":0,"index":4000},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4088},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217719,"byte_end":217720,"line_start":298,"line_end":298,"column_start":70,"column_end":71},"name":"Z","qualname":"::parser::choice::D::Z","value":"D::Z(Z)","parent":{"krate":0,"index":4000},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":4000},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217677,"byte_end":217678,"line_start":298,"line_end":298,"column_start":28,"column_end":29},"name":"D","qualname":"::parser::choice::D","value":"pub enum D<D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T, U, V, X, Y, Z> {\n    Empty,\n    D(D),\n    E(E),\n    F(F),\n    G(G),\n    H(H),\n    I(I),\n    J(J),\n    K(K),\n    L(L),\n    M(M),\n    N(N),\n    O(O),\n    P(P),\n    Q(Q),\n    R(R),\n    S(S),\n    T(T),\n    U(U),\n    V(V),\n    X(X),\n    Y(Y),\n    Z(Z),\n}","parent":null,"children":[{"krate":0,"index":4023},{"krate":0,"index":4025},{"krate":0,"index":4028},{"krate":0,"index":4031},{"krate":0,"index":4034},{"krate":0,"index":4037},{"krate":0,"index":4040},{"krate":0,"index":4043},{"krate":0,"index":4046},{"krate":0,"index":4049},{"krate":0,"index":4052},{"krate":0,"index":4055},{"krate":0,"index":4058},{"krate":0,"index":4061},{"krate":0,"index":4064},{"krate":0,"index":4067},{"krate":0,"index":4070},{"krate":0,"index":4073},{"krate":0,"index":4076},{"krate":0,"index":4079},{"krate":0,"index":4082},{"krate":0,"index":4085},{"krate":0,"index":4088}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4172},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217679,"byte_end":217680,"line_start":298,"line_end":298,"column_start":30,"column_end":31},"name":"E","qualname":"::parser::choice::E::E","value":"E::E(E)","parent":{"krate":0,"index":4148},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4175},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217681,"byte_end":217682,"line_start":298,"line_end":298,"column_start":32,"column_end":33},"name":"F","qualname":"::parser::choice::E::F","value":"E::F(F)","parent":{"krate":0,"index":4148},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4178},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217683,"byte_end":217684,"line_start":298,"line_end":298,"column_start":34,"column_end":35},"name":"G","qualname":"::parser::choice::E::G","value":"E::G(G)","parent":{"krate":0,"index":4148},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4181},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217685,"byte_end":217686,"line_start":298,"line_end":298,"column_start":36,"column_end":37},"name":"H","qualname":"::parser::choice::E::H","value":"E::H(H)","parent":{"krate":0,"index":4148},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4184},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217687,"byte_end":217688,"line_start":298,"line_end":298,"column_start":38,"column_end":39},"name":"I","qualname":"::parser::choice::E::I","value":"E::I(I)","parent":{"krate":0,"index":4148},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4187},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217689,"byte_end":217690,"line_start":298,"line_end":298,"column_start":40,"column_end":41},"name":"J","qualname":"::parser::choice::E::J","value":"E::J(J)","parent":{"krate":0,"index":4148},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4190},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217691,"byte_end":217692,"line_start":298,"line_end":298,"column_start":42,"column_end":43},"name":"K","qualname":"::parser::choice::E::K","value":"E::K(K)","parent":{"krate":0,"index":4148},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4193},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217693,"byte_end":217694,"line_start":298,"line_end":298,"column_start":44,"column_end":45},"name":"L","qualname":"::parser::choice::E::L","value":"E::L(L)","parent":{"krate":0,"index":4148},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4196},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217695,"byte_end":217696,"line_start":298,"line_end":298,"column_start":46,"column_end":47},"name":"M","qualname":"::parser::choice::E::M","value":"E::M(M)","parent":{"krate":0,"index":4148},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4199},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217697,"byte_end":217698,"line_start":298,"line_end":298,"column_start":48,"column_end":49},"name":"N","qualname":"::parser::choice::E::N","value":"E::N(N)","parent":{"krate":0,"index":4148},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4202},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217699,"byte_end":217700,"line_start":298,"line_end":298,"column_start":50,"column_end":51},"name":"O","qualname":"::parser::choice::E::O","value":"E::O(O)","parent":{"krate":0,"index":4148},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4205},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217701,"byte_end":217702,"line_start":298,"line_end":298,"column_start":52,"column_end":53},"name":"P","qualname":"::parser::choice::E::P","value":"E::P(P)","parent":{"krate":0,"index":4148},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4208},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217703,"byte_end":217704,"line_start":298,"line_end":298,"column_start":54,"column_end":55},"name":"Q","qualname":"::parser::choice::E::Q","value":"E::Q(Q)","parent":{"krate":0,"index":4148},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4211},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217705,"byte_end":217706,"line_start":298,"line_end":298,"column_start":56,"column_end":57},"name":"R","qualname":"::parser::choice::E::R","value":"E::R(R)","parent":{"krate":0,"index":4148},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4214},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217707,"byte_end":217708,"line_start":298,"line_end":298,"column_start":58,"column_end":59},"name":"S","qualname":"::parser::choice::E::S","value":"E::S(S)","parent":{"krate":0,"index":4148},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4217},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217709,"byte_end":217710,"line_start":298,"line_end":298,"column_start":60,"column_end":61},"name":"T","qualname":"::parser::choice::E::T","value":"E::T(T)","parent":{"krate":0,"index":4148},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4220},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217711,"byte_end":217712,"line_start":298,"line_end":298,"column_start":62,"column_end":63},"name":"U","qualname":"::parser::choice::E::U","value":"E::U(U)","parent":{"krate":0,"index":4148},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4223},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217713,"byte_end":217714,"line_start":298,"line_end":298,"column_start":64,"column_end":65},"name":"V","qualname":"::parser::choice::E::V","value":"E::V(V)","parent":{"krate":0,"index":4148},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4226},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217715,"byte_end":217716,"line_start":298,"line_end":298,"column_start":66,"column_end":67},"name":"X","qualname":"::parser::choice::E::X","value":"E::X(X)","parent":{"krate":0,"index":4148},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4229},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217717,"byte_end":217718,"line_start":298,"line_end":298,"column_start":68,"column_end":69},"name":"Y","qualname":"::parser::choice::E::Y","value":"E::Y(Y)","parent":{"krate":0,"index":4148},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4232},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217719,"byte_end":217720,"line_start":298,"line_end":298,"column_start":70,"column_end":71},"name":"Z","qualname":"::parser::choice::E::Z","value":"E::Z(Z)","parent":{"krate":0,"index":4148},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":4148},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217679,"byte_end":217680,"line_start":298,"line_end":298,"column_start":30,"column_end":31},"name":"E","qualname":"::parser::choice::E","value":"pub enum E<E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T, U, V, X, Y, Z> {\n    Empty,\n    E(E),\n    F(F),\n    G(G),\n    H(H),\n    I(I),\n    J(J),\n    K(K),\n    L(L),\n    M(M),\n    N(N),\n    O(O),\n    P(P),\n    Q(Q),\n    R(R),\n    S(S),\n    T(T),\n    U(U),\n    V(V),\n    X(X),\n    Y(Y),\n    Z(Z),\n}","parent":null,"children":[{"krate":0,"index":4170},{"krate":0,"index":4172},{"krate":0,"index":4175},{"krate":0,"index":4178},{"krate":0,"index":4181},{"krate":0,"index":4184},{"krate":0,"index":4187},{"krate":0,"index":4190},{"krate":0,"index":4193},{"krate":0,"index":4196},{"krate":0,"index":4199},{"krate":0,"index":4202},{"krate":0,"index":4205},{"krate":0,"index":4208},{"krate":0,"index":4211},{"krate":0,"index":4214},{"krate":0,"index":4217},{"krate":0,"index":4220},{"krate":0,"index":4223},{"krate":0,"index":4226},{"krate":0,"index":4229},{"krate":0,"index":4232}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4313},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217681,"byte_end":217682,"line_start":298,"line_end":298,"column_start":32,"column_end":33},"name":"F","qualname":"::parser::choice::F::F","value":"F::F(F)","parent":{"krate":0,"index":4290},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4316},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217683,"byte_end":217684,"line_start":298,"line_end":298,"column_start":34,"column_end":35},"name":"G","qualname":"::parser::choice::F::G","value":"F::G(G)","parent":{"krate":0,"index":4290},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4319},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217685,"byte_end":217686,"line_start":298,"line_end":298,"column_start":36,"column_end":37},"name":"H","qualname":"::parser::choice::F::H","value":"F::H(H)","parent":{"krate":0,"index":4290},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4322},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217687,"byte_end":217688,"line_start":298,"line_end":298,"column_start":38,"column_end":39},"name":"I","qualname":"::parser::choice::F::I","value":"F::I(I)","parent":{"krate":0,"index":4290},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4325},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217689,"byte_end":217690,"line_start":298,"line_end":298,"column_start":40,"column_end":41},"name":"J","qualname":"::parser::choice::F::J","value":"F::J(J)","parent":{"krate":0,"index":4290},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4328},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217691,"byte_end":217692,"line_start":298,"line_end":298,"column_start":42,"column_end":43},"name":"K","qualname":"::parser::choice::F::K","value":"F::K(K)","parent":{"krate":0,"index":4290},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4331},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217693,"byte_end":217694,"line_start":298,"line_end":298,"column_start":44,"column_end":45},"name":"L","qualname":"::parser::choice::F::L","value":"F::L(L)","parent":{"krate":0,"index":4290},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4334},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217695,"byte_end":217696,"line_start":298,"line_end":298,"column_start":46,"column_end":47},"name":"M","qualname":"::parser::choice::F::M","value":"F::M(M)","parent":{"krate":0,"index":4290},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4337},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217697,"byte_end":217698,"line_start":298,"line_end":298,"column_start":48,"column_end":49},"name":"N","qualname":"::parser::choice::F::N","value":"F::N(N)","parent":{"krate":0,"index":4290},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4340},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217699,"byte_end":217700,"line_start":298,"line_end":298,"column_start":50,"column_end":51},"name":"O","qualname":"::parser::choice::F::O","value":"F::O(O)","parent":{"krate":0,"index":4290},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4343},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217701,"byte_end":217702,"line_start":298,"line_end":298,"column_start":52,"column_end":53},"name":"P","qualname":"::parser::choice::F::P","value":"F::P(P)","parent":{"krate":0,"index":4290},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4346},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217703,"byte_end":217704,"line_start":298,"line_end":298,"column_start":54,"column_end":55},"name":"Q","qualname":"::parser::choice::F::Q","value":"F::Q(Q)","parent":{"krate":0,"index":4290},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4349},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217705,"byte_end":217706,"line_start":298,"line_end":298,"column_start":56,"column_end":57},"name":"R","qualname":"::parser::choice::F::R","value":"F::R(R)","parent":{"krate":0,"index":4290},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4352},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217707,"byte_end":217708,"line_start":298,"line_end":298,"column_start":58,"column_end":59},"name":"S","qualname":"::parser::choice::F::S","value":"F::S(S)","parent":{"krate":0,"index":4290},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4355},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217709,"byte_end":217710,"line_start":298,"line_end":298,"column_start":60,"column_end":61},"name":"T","qualname":"::parser::choice::F::T","value":"F::T(T)","parent":{"krate":0,"index":4290},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4358},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217711,"byte_end":217712,"line_start":298,"line_end":298,"column_start":62,"column_end":63},"name":"U","qualname":"::parser::choice::F::U","value":"F::U(U)","parent":{"krate":0,"index":4290},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4361},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217713,"byte_end":217714,"line_start":298,"line_end":298,"column_start":64,"column_end":65},"name":"V","qualname":"::parser::choice::F::V","value":"F::V(V)","parent":{"krate":0,"index":4290},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4364},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217715,"byte_end":217716,"line_start":298,"line_end":298,"column_start":66,"column_end":67},"name":"X","qualname":"::parser::choice::F::X","value":"F::X(X)","parent":{"krate":0,"index":4290},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4367},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217717,"byte_end":217718,"line_start":298,"line_end":298,"column_start":68,"column_end":69},"name":"Y","qualname":"::parser::choice::F::Y","value":"F::Y(Y)","parent":{"krate":0,"index":4290},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4370},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217719,"byte_end":217720,"line_start":298,"line_end":298,"column_start":70,"column_end":71},"name":"Z","qualname":"::parser::choice::F::Z","value":"F::Z(Z)","parent":{"krate":0,"index":4290},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":4290},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217681,"byte_end":217682,"line_start":298,"line_end":298,"column_start":32,"column_end":33},"name":"F","qualname":"::parser::choice::F","value":"pub enum F<F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T, U, V, X, Y, Z> {\n    Empty,\n    F(F),\n    G(G),\n    H(H),\n    I(I),\n    J(J),\n    K(K),\n    L(L),\n    M(M),\n    N(N),\n    O(O),\n    P(P),\n    Q(Q),\n    R(R),\n    S(S),\n    T(T),\n    U(U),\n    V(V),\n    X(X),\n    Y(Y),\n    Z(Z),\n}","parent":null,"children":[{"krate":0,"index":4311},{"krate":0,"index":4313},{"krate":0,"index":4316},{"krate":0,"index":4319},{"krate":0,"index":4322},{"krate":0,"index":4325},{"krate":0,"index":4328},{"krate":0,"index":4331},{"krate":0,"index":4334},{"krate":0,"index":4337},{"krate":0,"index":4340},{"krate":0,"index":4343},{"krate":0,"index":4346},{"krate":0,"index":4349},{"krate":0,"index":4352},{"krate":0,"index":4355},{"krate":0,"index":4358},{"krate":0,"index":4361},{"krate":0,"index":4364},{"krate":0,"index":4367},{"krate":0,"index":4370}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4448},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217683,"byte_end":217684,"line_start":298,"line_end":298,"column_start":34,"column_end":35},"name":"G","qualname":"::parser::choice::G::G","value":"G::G(G)","parent":{"krate":0,"index":4426},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4451},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217685,"byte_end":217686,"line_start":298,"line_end":298,"column_start":36,"column_end":37},"name":"H","qualname":"::parser::choice::G::H","value":"G::H(H)","parent":{"krate":0,"index":4426},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4454},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217687,"byte_end":217688,"line_start":298,"line_end":298,"column_start":38,"column_end":39},"name":"I","qualname":"::parser::choice::G::I","value":"G::I(I)","parent":{"krate":0,"index":4426},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4457},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217689,"byte_end":217690,"line_start":298,"line_end":298,"column_start":40,"column_end":41},"name":"J","qualname":"::parser::choice::G::J","value":"G::J(J)","parent":{"krate":0,"index":4426},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4460},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217691,"byte_end":217692,"line_start":298,"line_end":298,"column_start":42,"column_end":43},"name":"K","qualname":"::parser::choice::G::K","value":"G::K(K)","parent":{"krate":0,"index":4426},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4463},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217693,"byte_end":217694,"line_start":298,"line_end":298,"column_start":44,"column_end":45},"name":"L","qualname":"::parser::choice::G::L","value":"G::L(L)","parent":{"krate":0,"index":4426},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4466},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217695,"byte_end":217696,"line_start":298,"line_end":298,"column_start":46,"column_end":47},"name":"M","qualname":"::parser::choice::G::M","value":"G::M(M)","parent":{"krate":0,"index":4426},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4469},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217697,"byte_end":217698,"line_start":298,"line_end":298,"column_start":48,"column_end":49},"name":"N","qualname":"::parser::choice::G::N","value":"G::N(N)","parent":{"krate":0,"index":4426},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4472},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217699,"byte_end":217700,"line_start":298,"line_end":298,"column_start":50,"column_end":51},"name":"O","qualname":"::parser::choice::G::O","value":"G::O(O)","parent":{"krate":0,"index":4426},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4475},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217701,"byte_end":217702,"line_start":298,"line_end":298,"column_start":52,"column_end":53},"name":"P","qualname":"::parser::choice::G::P","value":"G::P(P)","parent":{"krate":0,"index":4426},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4478},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217703,"byte_end":217704,"line_start":298,"line_end":298,"column_start":54,"column_end":55},"name":"Q","qualname":"::parser::choice::G::Q","value":"G::Q(Q)","parent":{"krate":0,"index":4426},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4481},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217705,"byte_end":217706,"line_start":298,"line_end":298,"column_start":56,"column_end":57},"name":"R","qualname":"::parser::choice::G::R","value":"G::R(R)","parent":{"krate":0,"index":4426},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4484},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217707,"byte_end":217708,"line_start":298,"line_end":298,"column_start":58,"column_end":59},"name":"S","qualname":"::parser::choice::G::S","value":"G::S(S)","parent":{"krate":0,"index":4426},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4487},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217709,"byte_end":217710,"line_start":298,"line_end":298,"column_start":60,"column_end":61},"name":"T","qualname":"::parser::choice::G::T","value":"G::T(T)","parent":{"krate":0,"index":4426},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4490},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217711,"byte_end":217712,"line_start":298,"line_end":298,"column_start":62,"column_end":63},"name":"U","qualname":"::parser::choice::G::U","value":"G::U(U)","parent":{"krate":0,"index":4426},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4493},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217713,"byte_end":217714,"line_start":298,"line_end":298,"column_start":64,"column_end":65},"name":"V","qualname":"::parser::choice::G::V","value":"G::V(V)","parent":{"krate":0,"index":4426},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4496},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217715,"byte_end":217716,"line_start":298,"line_end":298,"column_start":66,"column_end":67},"name":"X","qualname":"::parser::choice::G::X","value":"G::X(X)","parent":{"krate":0,"index":4426},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4499},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217717,"byte_end":217718,"line_start":298,"line_end":298,"column_start":68,"column_end":69},"name":"Y","qualname":"::parser::choice::G::Y","value":"G::Y(Y)","parent":{"krate":0,"index":4426},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4502},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217719,"byte_end":217720,"line_start":298,"line_end":298,"column_start":70,"column_end":71},"name":"Z","qualname":"::parser::choice::G::Z","value":"G::Z(Z)","parent":{"krate":0,"index":4426},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":4426},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217683,"byte_end":217684,"line_start":298,"line_end":298,"column_start":34,"column_end":35},"name":"G","qualname":"::parser::choice::G","value":"pub enum G<G, H, I, J, K, L, M, N, O, P, Q, R, S, T, U, V, X, Y, Z> {\n    Empty,\n    G(G),\n    H(H),\n    I(I),\n    J(J),\n    K(K),\n    L(L),\n    M(M),\n    N(N),\n    O(O),\n    P(P),\n    Q(Q),\n    R(R),\n    S(S),\n    T(T),\n    U(U),\n    V(V),\n    X(X),\n    Y(Y),\n    Z(Z),\n}","parent":null,"children":[{"krate":0,"index":4446},{"krate":0,"index":4448},{"krate":0,"index":4451},{"krate":0,"index":4454},{"krate":0,"index":4457},{"krate":0,"index":4460},{"krate":0,"index":4463},{"krate":0,"index":4466},{"krate":0,"index":4469},{"krate":0,"index":4472},{"krate":0,"index":4475},{"krate":0,"index":4478},{"krate":0,"index":4481},{"krate":0,"index":4484},{"krate":0,"index":4487},{"krate":0,"index":4490},{"krate":0,"index":4493},{"krate":0,"index":4496},{"krate":0,"index":4499},{"krate":0,"index":4502}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4577},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217685,"byte_end":217686,"line_start":298,"line_end":298,"column_start":36,"column_end":37},"name":"H","qualname":"::parser::choice::H::H","value":"H::H(H)","parent":{"krate":0,"index":4556},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4580},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217687,"byte_end":217688,"line_start":298,"line_end":298,"column_start":38,"column_end":39},"name":"I","qualname":"::parser::choice::H::I","value":"H::I(I)","parent":{"krate":0,"index":4556},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4583},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217689,"byte_end":217690,"line_start":298,"line_end":298,"column_start":40,"column_end":41},"name":"J","qualname":"::parser::choice::H::J","value":"H::J(J)","parent":{"krate":0,"index":4556},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4586},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217691,"byte_end":217692,"line_start":298,"line_end":298,"column_start":42,"column_end":43},"name":"K","qualname":"::parser::choice::H::K","value":"H::K(K)","parent":{"krate":0,"index":4556},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4589},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217693,"byte_end":217694,"line_start":298,"line_end":298,"column_start":44,"column_end":45},"name":"L","qualname":"::parser::choice::H::L","value":"H::L(L)","parent":{"krate":0,"index":4556},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4592},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217695,"byte_end":217696,"line_start":298,"line_end":298,"column_start":46,"column_end":47},"name":"M","qualname":"::parser::choice::H::M","value":"H::M(M)","parent":{"krate":0,"index":4556},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4595},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217697,"byte_end":217698,"line_start":298,"line_end":298,"column_start":48,"column_end":49},"name":"N","qualname":"::parser::choice::H::N","value":"H::N(N)","parent":{"krate":0,"index":4556},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4598},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217699,"byte_end":217700,"line_start":298,"line_end":298,"column_start":50,"column_end":51},"name":"O","qualname":"::parser::choice::H::O","value":"H::O(O)","parent":{"krate":0,"index":4556},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4601},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217701,"byte_end":217702,"line_start":298,"line_end":298,"column_start":52,"column_end":53},"name":"P","qualname":"::parser::choice::H::P","value":"H::P(P)","parent":{"krate":0,"index":4556},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4604},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217703,"byte_end":217704,"line_start":298,"line_end":298,"column_start":54,"column_end":55},"name":"Q","qualname":"::parser::choice::H::Q","value":"H::Q(Q)","parent":{"krate":0,"index":4556},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4607},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217705,"byte_end":217706,"line_start":298,"line_end":298,"column_start":56,"column_end":57},"name":"R","qualname":"::parser::choice::H::R","value":"H::R(R)","parent":{"krate":0,"index":4556},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4610},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217707,"byte_end":217708,"line_start":298,"line_end":298,"column_start":58,"column_end":59},"name":"S","qualname":"::parser::choice::H::S","value":"H::S(S)","parent":{"krate":0,"index":4556},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4613},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217709,"byte_end":217710,"line_start":298,"line_end":298,"column_start":60,"column_end":61},"name":"T","qualname":"::parser::choice::H::T","value":"H::T(T)","parent":{"krate":0,"index":4556},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4616},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217711,"byte_end":217712,"line_start":298,"line_end":298,"column_start":62,"column_end":63},"name":"U","qualname":"::parser::choice::H::U","value":"H::U(U)","parent":{"krate":0,"index":4556},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4619},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217713,"byte_end":217714,"line_start":298,"line_end":298,"column_start":64,"column_end":65},"name":"V","qualname":"::parser::choice::H::V","value":"H::V(V)","parent":{"krate":0,"index":4556},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4622},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217715,"byte_end":217716,"line_start":298,"line_end":298,"column_start":66,"column_end":67},"name":"X","qualname":"::parser::choice::H::X","value":"H::X(X)","parent":{"krate":0,"index":4556},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4625},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217717,"byte_end":217718,"line_start":298,"line_end":298,"column_start":68,"column_end":69},"name":"Y","qualname":"::parser::choice::H::Y","value":"H::Y(Y)","parent":{"krate":0,"index":4556},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4628},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217719,"byte_end":217720,"line_start":298,"line_end":298,"column_start":70,"column_end":71},"name":"Z","qualname":"::parser::choice::H::Z","value":"H::Z(Z)","parent":{"krate":0,"index":4556},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":4556},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217685,"byte_end":217686,"line_start":298,"line_end":298,"column_start":36,"column_end":37},"name":"H","qualname":"::parser::choice::H","value":"pub enum H<H, I, J, K, L, M, N, O, P, Q, R, S, T, U, V, X, Y, Z> {\n    Empty,\n    H(H),\n    I(I),\n    J(J),\n    K(K),\n    L(L),\n    M(M),\n    N(N),\n    O(O),\n    P(P),\n    Q(Q),\n    R(R),\n    S(S),\n    T(T),\n    U(U),\n    V(V),\n    X(X),\n    Y(Y),\n    Z(Z),\n}","parent":null,"children":[{"krate":0,"index":4575},{"krate":0,"index":4577},{"krate":0,"index":4580},{"krate":0,"index":4583},{"krate":0,"index":4586},{"krate":0,"index":4589},{"krate":0,"index":4592},{"krate":0,"index":4595},{"krate":0,"index":4598},{"krate":0,"index":4601},{"krate":0,"index":4604},{"krate":0,"index":4607},{"krate":0,"index":4610},{"krate":0,"index":4613},{"krate":0,"index":4616},{"krate":0,"index":4619},{"krate":0,"index":4622},{"krate":0,"index":4625},{"krate":0,"index":4628}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4700},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217687,"byte_end":217688,"line_start":298,"line_end":298,"column_start":38,"column_end":39},"name":"I","qualname":"::parser::choice::I::I","value":"I::I(I)","parent":{"krate":0,"index":4680},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4703},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217689,"byte_end":217690,"line_start":298,"line_end":298,"column_start":40,"column_end":41},"name":"J","qualname":"::parser::choice::I::J","value":"I::J(J)","parent":{"krate":0,"index":4680},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4706},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217691,"byte_end":217692,"line_start":298,"line_end":298,"column_start":42,"column_end":43},"name":"K","qualname":"::parser::choice::I::K","value":"I::K(K)","parent":{"krate":0,"index":4680},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4709},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217693,"byte_end":217694,"line_start":298,"line_end":298,"column_start":44,"column_end":45},"name":"L","qualname":"::parser::choice::I::L","value":"I::L(L)","parent":{"krate":0,"index":4680},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4712},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217695,"byte_end":217696,"line_start":298,"line_end":298,"column_start":46,"column_end":47},"name":"M","qualname":"::parser::choice::I::M","value":"I::M(M)","parent":{"krate":0,"index":4680},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4715},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217697,"byte_end":217698,"line_start":298,"line_end":298,"column_start":48,"column_end":49},"name":"N","qualname":"::parser::choice::I::N","value":"I::N(N)","parent":{"krate":0,"index":4680},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4718},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217699,"byte_end":217700,"line_start":298,"line_end":298,"column_start":50,"column_end":51},"name":"O","qualname":"::parser::choice::I::O","value":"I::O(O)","parent":{"krate":0,"index":4680},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4721},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217701,"byte_end":217702,"line_start":298,"line_end":298,"column_start":52,"column_end":53},"name":"P","qualname":"::parser::choice::I::P","value":"I::P(P)","parent":{"krate":0,"index":4680},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4724},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217703,"byte_end":217704,"line_start":298,"line_end":298,"column_start":54,"column_end":55},"name":"Q","qualname":"::parser::choice::I::Q","value":"I::Q(Q)","parent":{"krate":0,"index":4680},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4727},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217705,"byte_end":217706,"line_start":298,"line_end":298,"column_start":56,"column_end":57},"name":"R","qualname":"::parser::choice::I::R","value":"I::R(R)","parent":{"krate":0,"index":4680},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4730},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217707,"byte_end":217708,"line_start":298,"line_end":298,"column_start":58,"column_end":59},"name":"S","qualname":"::parser::choice::I::S","value":"I::S(S)","parent":{"krate":0,"index":4680},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4733},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217709,"byte_end":217710,"line_start":298,"line_end":298,"column_start":60,"column_end":61},"name":"T","qualname":"::parser::choice::I::T","value":"I::T(T)","parent":{"krate":0,"index":4680},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4736},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217711,"byte_end":217712,"line_start":298,"line_end":298,"column_start":62,"column_end":63},"name":"U","qualname":"::parser::choice::I::U","value":"I::U(U)","parent":{"krate":0,"index":4680},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4739},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217713,"byte_end":217714,"line_start":298,"line_end":298,"column_start":64,"column_end":65},"name":"V","qualname":"::parser::choice::I::V","value":"I::V(V)","parent":{"krate":0,"index":4680},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4742},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217715,"byte_end":217716,"line_start":298,"line_end":298,"column_start":66,"column_end":67},"name":"X","qualname":"::parser::choice::I::X","value":"I::X(X)","parent":{"krate":0,"index":4680},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4745},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217717,"byte_end":217718,"line_start":298,"line_end":298,"column_start":68,"column_end":69},"name":"Y","qualname":"::parser::choice::I::Y","value":"I::Y(Y)","parent":{"krate":0,"index":4680},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4748},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217719,"byte_end":217720,"line_start":298,"line_end":298,"column_start":70,"column_end":71},"name":"Z","qualname":"::parser::choice::I::Z","value":"I::Z(Z)","parent":{"krate":0,"index":4680},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":4680},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217687,"byte_end":217688,"line_start":298,"line_end":298,"column_start":38,"column_end":39},"name":"I","qualname":"::parser::choice::I","value":"pub enum I<I, J, K, L, M, N, O, P, Q, R, S, T, U, V, X, Y, Z> {\n    Empty,\n    I(I),\n    J(J),\n    K(K),\n    L(L),\n    M(M),\n    N(N),\n    O(O),\n    P(P),\n    Q(Q),\n    R(R),\n    S(S),\n    T(T),\n    U(U),\n    V(V),\n    X(X),\n    Y(Y),\n    Z(Z),\n}","parent":null,"children":[{"krate":0,"index":4698},{"krate":0,"index":4700},{"krate":0,"index":4703},{"krate":0,"index":4706},{"krate":0,"index":4709},{"krate":0,"index":4712},{"krate":0,"index":4715},{"krate":0,"index":4718},{"krate":0,"index":4721},{"krate":0,"index":4724},{"krate":0,"index":4727},{"krate":0,"index":4730},{"krate":0,"index":4733},{"krate":0,"index":4736},{"krate":0,"index":4739},{"krate":0,"index":4742},{"krate":0,"index":4745},{"krate":0,"index":4748}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4817},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217689,"byte_end":217690,"line_start":298,"line_end":298,"column_start":40,"column_end":41},"name":"J","qualname":"::parser::choice::J::J","value":"J::J(J)","parent":{"krate":0,"index":4798},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4820},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217691,"byte_end":217692,"line_start":298,"line_end":298,"column_start":42,"column_end":43},"name":"K","qualname":"::parser::choice::J::K","value":"J::K(K)","parent":{"krate":0,"index":4798},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4823},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217693,"byte_end":217694,"line_start":298,"line_end":298,"column_start":44,"column_end":45},"name":"L","qualname":"::parser::choice::J::L","value":"J::L(L)","parent":{"krate":0,"index":4798},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4826},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217695,"byte_end":217696,"line_start":298,"line_end":298,"column_start":46,"column_end":47},"name":"M","qualname":"::parser::choice::J::M","value":"J::M(M)","parent":{"krate":0,"index":4798},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4829},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217697,"byte_end":217698,"line_start":298,"line_end":298,"column_start":48,"column_end":49},"name":"N","qualname":"::parser::choice::J::N","value":"J::N(N)","parent":{"krate":0,"index":4798},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4832},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217699,"byte_end":217700,"line_start":298,"line_end":298,"column_start":50,"column_end":51},"name":"O","qualname":"::parser::choice::J::O","value":"J::O(O)","parent":{"krate":0,"index":4798},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4835},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217701,"byte_end":217702,"line_start":298,"line_end":298,"column_start":52,"column_end":53},"name":"P","qualname":"::parser::choice::J::P","value":"J::P(P)","parent":{"krate":0,"index":4798},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4838},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217703,"byte_end":217704,"line_start":298,"line_end":298,"column_start":54,"column_end":55},"name":"Q","qualname":"::parser::choice::J::Q","value":"J::Q(Q)","parent":{"krate":0,"index":4798},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4841},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217705,"byte_end":217706,"line_start":298,"line_end":298,"column_start":56,"column_end":57},"name":"R","qualname":"::parser::choice::J::R","value":"J::R(R)","parent":{"krate":0,"index":4798},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4844},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217707,"byte_end":217708,"line_start":298,"line_end":298,"column_start":58,"column_end":59},"name":"S","qualname":"::parser::choice::J::S","value":"J::S(S)","parent":{"krate":0,"index":4798},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4847},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217709,"byte_end":217710,"line_start":298,"line_end":298,"column_start":60,"column_end":61},"name":"T","qualname":"::parser::choice::J::T","value":"J::T(T)","parent":{"krate":0,"index":4798},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4850},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217711,"byte_end":217712,"line_start":298,"line_end":298,"column_start":62,"column_end":63},"name":"U","qualname":"::parser::choice::J::U","value":"J::U(U)","parent":{"krate":0,"index":4798},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4853},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217713,"byte_end":217714,"line_start":298,"line_end":298,"column_start":64,"column_end":65},"name":"V","qualname":"::parser::choice::J::V","value":"J::V(V)","parent":{"krate":0,"index":4798},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4856},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217715,"byte_end":217716,"line_start":298,"line_end":298,"column_start":66,"column_end":67},"name":"X","qualname":"::parser::choice::J::X","value":"J::X(X)","parent":{"krate":0,"index":4798},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4859},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217717,"byte_end":217718,"line_start":298,"line_end":298,"column_start":68,"column_end":69},"name":"Y","qualname":"::parser::choice::J::Y","value":"J::Y(Y)","parent":{"krate":0,"index":4798},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4862},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217719,"byte_end":217720,"line_start":298,"line_end":298,"column_start":70,"column_end":71},"name":"Z","qualname":"::parser::choice::J::Z","value":"J::Z(Z)","parent":{"krate":0,"index":4798},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":4798},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217689,"byte_end":217690,"line_start":298,"line_end":298,"column_start":40,"column_end":41},"name":"J","qualname":"::parser::choice::J","value":"pub enum J<J, K, L, M, N, O, P, Q, R, S, T, U, V, X, Y, Z> {\n    Empty,\n    J(J),\n    K(K),\n    L(L),\n    M(M),\n    N(N),\n    O(O),\n    P(P),\n    Q(Q),\n    R(R),\n    S(S),\n    T(T),\n    U(U),\n    V(V),\n    X(X),\n    Y(Y),\n    Z(Z),\n}","parent":null,"children":[{"krate":0,"index":4815},{"krate":0,"index":4817},{"krate":0,"index":4820},{"krate":0,"index":4823},{"krate":0,"index":4826},{"krate":0,"index":4829},{"krate":0,"index":4832},{"krate":0,"index":4835},{"krate":0,"index":4838},{"krate":0,"index":4841},{"krate":0,"index":4844},{"krate":0,"index":4847},{"krate":0,"index":4850},{"krate":0,"index":4853},{"krate":0,"index":4856},{"krate":0,"index":4859},{"krate":0,"index":4862}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4928},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217691,"byte_end":217692,"line_start":298,"line_end":298,"column_start":42,"column_end":43},"name":"K","qualname":"::parser::choice::K::K","value":"K::K(K)","parent":{"krate":0,"index":4910},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4931},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217693,"byte_end":217694,"line_start":298,"line_end":298,"column_start":44,"column_end":45},"name":"L","qualname":"::parser::choice::K::L","value":"K::L(L)","parent":{"krate":0,"index":4910},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4934},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217695,"byte_end":217696,"line_start":298,"line_end":298,"column_start":46,"column_end":47},"name":"M","qualname":"::parser::choice::K::M","value":"K::M(M)","parent":{"krate":0,"index":4910},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4937},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217697,"byte_end":217698,"line_start":298,"line_end":298,"column_start":48,"column_end":49},"name":"N","qualname":"::parser::choice::K::N","value":"K::N(N)","parent":{"krate":0,"index":4910},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4940},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217699,"byte_end":217700,"line_start":298,"line_end":298,"column_start":50,"column_end":51},"name":"O","qualname":"::parser::choice::K::O","value":"K::O(O)","parent":{"krate":0,"index":4910},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4943},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217701,"byte_end":217702,"line_start":298,"line_end":298,"column_start":52,"column_end":53},"name":"P","qualname":"::parser::choice::K::P","value":"K::P(P)","parent":{"krate":0,"index":4910},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4946},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217703,"byte_end":217704,"line_start":298,"line_end":298,"column_start":54,"column_end":55},"name":"Q","qualname":"::parser::choice::K::Q","value":"K::Q(Q)","parent":{"krate":0,"index":4910},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4949},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217705,"byte_end":217706,"line_start":298,"line_end":298,"column_start":56,"column_end":57},"name":"R","qualname":"::parser::choice::K::R","value":"K::R(R)","parent":{"krate":0,"index":4910},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4952},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217707,"byte_end":217708,"line_start":298,"line_end":298,"column_start":58,"column_end":59},"name":"S","qualname":"::parser::choice::K::S","value":"K::S(S)","parent":{"krate":0,"index":4910},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4955},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217709,"byte_end":217710,"line_start":298,"line_end":298,"column_start":60,"column_end":61},"name":"T","qualname":"::parser::choice::K::T","value":"K::T(T)","parent":{"krate":0,"index":4910},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4958},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217711,"byte_end":217712,"line_start":298,"line_end":298,"column_start":62,"column_end":63},"name":"U","qualname":"::parser::choice::K::U","value":"K::U(U)","parent":{"krate":0,"index":4910},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4961},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217713,"byte_end":217714,"line_start":298,"line_end":298,"column_start":64,"column_end":65},"name":"V","qualname":"::parser::choice::K::V","value":"K::V(V)","parent":{"krate":0,"index":4910},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4964},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217715,"byte_end":217716,"line_start":298,"line_end":298,"column_start":66,"column_end":67},"name":"X","qualname":"::parser::choice::K::X","value":"K::X(X)","parent":{"krate":0,"index":4910},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4967},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217717,"byte_end":217718,"line_start":298,"line_end":298,"column_start":68,"column_end":69},"name":"Y","qualname":"::parser::choice::K::Y","value":"K::Y(Y)","parent":{"krate":0,"index":4910},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4970},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217719,"byte_end":217720,"line_start":298,"line_end":298,"column_start":70,"column_end":71},"name":"Z","qualname":"::parser::choice::K::Z","value":"K::Z(Z)","parent":{"krate":0,"index":4910},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":4910},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217691,"byte_end":217692,"line_start":298,"line_end":298,"column_start":42,"column_end":43},"name":"K","qualname":"::parser::choice::K","value":"pub enum K<K, L, M, N, O, P, Q, R, S, T, U, V, X, Y, Z> {\n    Empty,\n    K(K),\n    L(L),\n    M(M),\n    N(N),\n    O(O),\n    P(P),\n    Q(Q),\n    R(R),\n    S(S),\n    T(T),\n    U(U),\n    V(V),\n    X(X),\n    Y(Y),\n    Z(Z),\n}","parent":null,"children":[{"krate":0,"index":4926},{"krate":0,"index":4928},{"krate":0,"index":4931},{"krate":0,"index":4934},{"krate":0,"index":4937},{"krate":0,"index":4940},{"krate":0,"index":4943},{"krate":0,"index":4946},{"krate":0,"index":4949},{"krate":0,"index":4952},{"krate":0,"index":4955},{"krate":0,"index":4958},{"krate":0,"index":4961},{"krate":0,"index":4964},{"krate":0,"index":4967},{"krate":0,"index":4970}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5033},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217693,"byte_end":217694,"line_start":298,"line_end":298,"column_start":44,"column_end":45},"name":"L","qualname":"::parser::choice::L::L","value":"L::L(L)","parent":{"krate":0,"index":5016},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5036},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217695,"byte_end":217696,"line_start":298,"line_end":298,"column_start":46,"column_end":47},"name":"M","qualname":"::parser::choice::L::M","value":"L::M(M)","parent":{"krate":0,"index":5016},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5039},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217697,"byte_end":217698,"line_start":298,"line_end":298,"column_start":48,"column_end":49},"name":"N","qualname":"::parser::choice::L::N","value":"L::N(N)","parent":{"krate":0,"index":5016},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5042},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217699,"byte_end":217700,"line_start":298,"line_end":298,"column_start":50,"column_end":51},"name":"O","qualname":"::parser::choice::L::O","value":"L::O(O)","parent":{"krate":0,"index":5016},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5045},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217701,"byte_end":217702,"line_start":298,"line_end":298,"column_start":52,"column_end":53},"name":"P","qualname":"::parser::choice::L::P","value":"L::P(P)","parent":{"krate":0,"index":5016},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5048},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217703,"byte_end":217704,"line_start":298,"line_end":298,"column_start":54,"column_end":55},"name":"Q","qualname":"::parser::choice::L::Q","value":"L::Q(Q)","parent":{"krate":0,"index":5016},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5051},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217705,"byte_end":217706,"line_start":298,"line_end":298,"column_start":56,"column_end":57},"name":"R","qualname":"::parser::choice::L::R","value":"L::R(R)","parent":{"krate":0,"index":5016},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5054},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217707,"byte_end":217708,"line_start":298,"line_end":298,"column_start":58,"column_end":59},"name":"S","qualname":"::parser::choice::L::S","value":"L::S(S)","parent":{"krate":0,"index":5016},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5057},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217709,"byte_end":217710,"line_start":298,"line_end":298,"column_start":60,"column_end":61},"name":"T","qualname":"::parser::choice::L::T","value":"L::T(T)","parent":{"krate":0,"index":5016},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5060},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217711,"byte_end":217712,"line_start":298,"line_end":298,"column_start":62,"column_end":63},"name":"U","qualname":"::parser::choice::L::U","value":"L::U(U)","parent":{"krate":0,"index":5016},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5063},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217713,"byte_end":217714,"line_start":298,"line_end":298,"column_start":64,"column_end":65},"name":"V","qualname":"::parser::choice::L::V","value":"L::V(V)","parent":{"krate":0,"index":5016},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5066},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217715,"byte_end":217716,"line_start":298,"line_end":298,"column_start":66,"column_end":67},"name":"X","qualname":"::parser::choice::L::X","value":"L::X(X)","parent":{"krate":0,"index":5016},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5069},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217717,"byte_end":217718,"line_start":298,"line_end":298,"column_start":68,"column_end":69},"name":"Y","qualname":"::parser::choice::L::Y","value":"L::Y(Y)","parent":{"krate":0,"index":5016},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5072},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217719,"byte_end":217720,"line_start":298,"line_end":298,"column_start":70,"column_end":71},"name":"Z","qualname":"::parser::choice::L::Z","value":"L::Z(Z)","parent":{"krate":0,"index":5016},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":5016},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217693,"byte_end":217694,"line_start":298,"line_end":298,"column_start":44,"column_end":45},"name":"L","qualname":"::parser::choice::L","value":"pub enum L<L, M, N, O, P, Q, R, S, T, U, V, X, Y, Z> {\n    Empty,\n    L(L),\n    M(M),\n    N(N),\n    O(O),\n    P(P),\n    Q(Q),\n    R(R),\n    S(S),\n    T(T),\n    U(U),\n    V(V),\n    X(X),\n    Y(Y),\n    Z(Z),\n}","parent":null,"children":[{"krate":0,"index":5031},{"krate":0,"index":5033},{"krate":0,"index":5036},{"krate":0,"index":5039},{"krate":0,"index":5042},{"krate":0,"index":5045},{"krate":0,"index":5048},{"krate":0,"index":5051},{"krate":0,"index":5054},{"krate":0,"index":5057},{"krate":0,"index":5060},{"krate":0,"index":5063},{"krate":0,"index":5066},{"krate":0,"index":5069},{"krate":0,"index":5072}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5132},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217695,"byte_end":217696,"line_start":298,"line_end":298,"column_start":46,"column_end":47},"name":"M","qualname":"::parser::choice::M::M","value":"M::M(M)","parent":{"krate":0,"index":5116},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5135},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217697,"byte_end":217698,"line_start":298,"line_end":298,"column_start":48,"column_end":49},"name":"N","qualname":"::parser::choice::M::N","value":"M::N(N)","parent":{"krate":0,"index":5116},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5138},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217699,"byte_end":217700,"line_start":298,"line_end":298,"column_start":50,"column_end":51},"name":"O","qualname":"::parser::choice::M::O","value":"M::O(O)","parent":{"krate":0,"index":5116},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5141},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217701,"byte_end":217702,"line_start":298,"line_end":298,"column_start":52,"column_end":53},"name":"P","qualname":"::parser::choice::M::P","value":"M::P(P)","parent":{"krate":0,"index":5116},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5144},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217703,"byte_end":217704,"line_start":298,"line_end":298,"column_start":54,"column_end":55},"name":"Q","qualname":"::parser::choice::M::Q","value":"M::Q(Q)","parent":{"krate":0,"index":5116},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5147},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217705,"byte_end":217706,"line_start":298,"line_end":298,"column_start":56,"column_end":57},"name":"R","qualname":"::parser::choice::M::R","value":"M::R(R)","parent":{"krate":0,"index":5116},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5150},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217707,"byte_end":217708,"line_start":298,"line_end":298,"column_start":58,"column_end":59},"name":"S","qualname":"::parser::choice::M::S","value":"M::S(S)","parent":{"krate":0,"index":5116},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5153},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217709,"byte_end":217710,"line_start":298,"line_end":298,"column_start":60,"column_end":61},"name":"T","qualname":"::parser::choice::M::T","value":"M::T(T)","parent":{"krate":0,"index":5116},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5156},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217711,"byte_end":217712,"line_start":298,"line_end":298,"column_start":62,"column_end":63},"name":"U","qualname":"::parser::choice::M::U","value":"M::U(U)","parent":{"krate":0,"index":5116},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5159},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217713,"byte_end":217714,"line_start":298,"line_end":298,"column_start":64,"column_end":65},"name":"V","qualname":"::parser::choice::M::V","value":"M::V(V)","parent":{"krate":0,"index":5116},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5162},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217715,"byte_end":217716,"line_start":298,"line_end":298,"column_start":66,"column_end":67},"name":"X","qualname":"::parser::choice::M::X","value":"M::X(X)","parent":{"krate":0,"index":5116},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5165},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217717,"byte_end":217718,"line_start":298,"line_end":298,"column_start":68,"column_end":69},"name":"Y","qualname":"::parser::choice::M::Y","value":"M::Y(Y)","parent":{"krate":0,"index":5116},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5168},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217719,"byte_end":217720,"line_start":298,"line_end":298,"column_start":70,"column_end":71},"name":"Z","qualname":"::parser::choice::M::Z","value":"M::Z(Z)","parent":{"krate":0,"index":5116},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":5116},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217695,"byte_end":217696,"line_start":298,"line_end":298,"column_start":46,"column_end":47},"name":"M","qualname":"::parser::choice::M","value":"pub enum M<M, N, O, P, Q, R, S, T, U, V, X, Y, Z> {\n    Empty,\n    M(M),\n    N(N),\n    O(O),\n    P(P),\n    Q(Q),\n    R(R),\n    S(S),\n    T(T),\n    U(U),\n    V(V),\n    X(X),\n    Y(Y),\n    Z(Z),\n}","parent":null,"children":[{"krate":0,"index":5130},{"krate":0,"index":5132},{"krate":0,"index":5135},{"krate":0,"index":5138},{"krate":0,"index":5141},{"krate":0,"index":5144},{"krate":0,"index":5147},{"krate":0,"index":5150},{"krate":0,"index":5153},{"krate":0,"index":5156},{"krate":0,"index":5159},{"krate":0,"index":5162},{"krate":0,"index":5165},{"krate":0,"index":5168}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5225},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217697,"byte_end":217698,"line_start":298,"line_end":298,"column_start":48,"column_end":49},"name":"N","qualname":"::parser::choice::N::N","value":"N::N(N)","parent":{"krate":0,"index":5210},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5228},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217699,"byte_end":217700,"line_start":298,"line_end":298,"column_start":50,"column_end":51},"name":"O","qualname":"::parser::choice::N::O","value":"N::O(O)","parent":{"krate":0,"index":5210},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5231},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217701,"byte_end":217702,"line_start":298,"line_end":298,"column_start":52,"column_end":53},"name":"P","qualname":"::parser::choice::N::P","value":"N::P(P)","parent":{"krate":0,"index":5210},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5234},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217703,"byte_end":217704,"line_start":298,"line_end":298,"column_start":54,"column_end":55},"name":"Q","qualname":"::parser::choice::N::Q","value":"N::Q(Q)","parent":{"krate":0,"index":5210},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5237},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217705,"byte_end":217706,"line_start":298,"line_end":298,"column_start":56,"column_end":57},"name":"R","qualname":"::parser::choice::N::R","value":"N::R(R)","parent":{"krate":0,"index":5210},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5240},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217707,"byte_end":217708,"line_start":298,"line_end":298,"column_start":58,"column_end":59},"name":"S","qualname":"::parser::choice::N::S","value":"N::S(S)","parent":{"krate":0,"index":5210},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5243},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217709,"byte_end":217710,"line_start":298,"line_end":298,"column_start":60,"column_end":61},"name":"T","qualname":"::parser::choice::N::T","value":"N::T(T)","parent":{"krate":0,"index":5210},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5246},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217711,"byte_end":217712,"line_start":298,"line_end":298,"column_start":62,"column_end":63},"name":"U","qualname":"::parser::choice::N::U","value":"N::U(U)","parent":{"krate":0,"index":5210},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5249},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217713,"byte_end":217714,"line_start":298,"line_end":298,"column_start":64,"column_end":65},"name":"V","qualname":"::parser::choice::N::V","value":"N::V(V)","parent":{"krate":0,"index":5210},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5252},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217715,"byte_end":217716,"line_start":298,"line_end":298,"column_start":66,"column_end":67},"name":"X","qualname":"::parser::choice::N::X","value":"N::X(X)","parent":{"krate":0,"index":5210},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5255},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217717,"byte_end":217718,"line_start":298,"line_end":298,"column_start":68,"column_end":69},"name":"Y","qualname":"::parser::choice::N::Y","value":"N::Y(Y)","parent":{"krate":0,"index":5210},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5258},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217719,"byte_end":217720,"line_start":298,"line_end":298,"column_start":70,"column_end":71},"name":"Z","qualname":"::parser::choice::N::Z","value":"N::Z(Z)","parent":{"krate":0,"index":5210},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":5210},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217697,"byte_end":217698,"line_start":298,"line_end":298,"column_start":48,"column_end":49},"name":"N","qualname":"::parser::choice::N","value":"pub enum N<N, O, P, Q, R, S, T, U, V, X, Y, Z> {\n    Empty,\n    N(N),\n    O(O),\n    P(P),\n    Q(Q),\n    R(R),\n    S(S),\n    T(T),\n    U(U),\n    V(V),\n    X(X),\n    Y(Y),\n    Z(Z),\n}","parent":null,"children":[{"krate":0,"index":5223},{"krate":0,"index":5225},{"krate":0,"index":5228},{"krate":0,"index":5231},{"krate":0,"index":5234},{"krate":0,"index":5237},{"krate":0,"index":5240},{"krate":0,"index":5243},{"krate":0,"index":5246},{"krate":0,"index":5249},{"krate":0,"index":5252},{"krate":0,"index":5255},{"krate":0,"index":5258}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5312},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217699,"byte_end":217700,"line_start":298,"line_end":298,"column_start":50,"column_end":51},"name":"O","qualname":"::parser::choice::O::O","value":"O::O(O)","parent":{"krate":0,"index":5298},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5315},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217701,"byte_end":217702,"line_start":298,"line_end":298,"column_start":52,"column_end":53},"name":"P","qualname":"::parser::choice::O::P","value":"O::P(P)","parent":{"krate":0,"index":5298},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5318},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217703,"byte_end":217704,"line_start":298,"line_end":298,"column_start":54,"column_end":55},"name":"Q","qualname":"::parser::choice::O::Q","value":"O::Q(Q)","parent":{"krate":0,"index":5298},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5321},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217705,"byte_end":217706,"line_start":298,"line_end":298,"column_start":56,"column_end":57},"name":"R","qualname":"::parser::choice::O::R","value":"O::R(R)","parent":{"krate":0,"index":5298},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5324},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217707,"byte_end":217708,"line_start":298,"line_end":298,"column_start":58,"column_end":59},"name":"S","qualname":"::parser::choice::O::S","value":"O::S(S)","parent":{"krate":0,"index":5298},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5327},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217709,"byte_end":217710,"line_start":298,"line_end":298,"column_start":60,"column_end":61},"name":"T","qualname":"::parser::choice::O::T","value":"O::T(T)","parent":{"krate":0,"index":5298},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5330},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217711,"byte_end":217712,"line_start":298,"line_end":298,"column_start":62,"column_end":63},"name":"U","qualname":"::parser::choice::O::U","value":"O::U(U)","parent":{"krate":0,"index":5298},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5333},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217713,"byte_end":217714,"line_start":298,"line_end":298,"column_start":64,"column_end":65},"name":"V","qualname":"::parser::choice::O::V","value":"O::V(V)","parent":{"krate":0,"index":5298},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5336},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217715,"byte_end":217716,"line_start":298,"line_end":298,"column_start":66,"column_end":67},"name":"X","qualname":"::parser::choice::O::X","value":"O::X(X)","parent":{"krate":0,"index":5298},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5339},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217717,"byte_end":217718,"line_start":298,"line_end":298,"column_start":68,"column_end":69},"name":"Y","qualname":"::parser::choice::O::Y","value":"O::Y(Y)","parent":{"krate":0,"index":5298},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5342},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217719,"byte_end":217720,"line_start":298,"line_end":298,"column_start":70,"column_end":71},"name":"Z","qualname":"::parser::choice::O::Z","value":"O::Z(Z)","parent":{"krate":0,"index":5298},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":5298},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217699,"byte_end":217700,"line_start":298,"line_end":298,"column_start":50,"column_end":51},"name":"O","qualname":"::parser::choice::O","value":"pub enum O<O, P, Q, R, S, T, U, V, X, Y, Z> {\n    Empty,\n    O(O),\n    P(P),\n    Q(Q),\n    R(R),\n    S(S),\n    T(T),\n    U(U),\n    V(V),\n    X(X),\n    Y(Y),\n    Z(Z),\n}","parent":null,"children":[{"krate":0,"index":5310},{"krate":0,"index":5312},{"krate":0,"index":5315},{"krate":0,"index":5318},{"krate":0,"index":5321},{"krate":0,"index":5324},{"krate":0,"index":5327},{"krate":0,"index":5330},{"krate":0,"index":5333},{"krate":0,"index":5336},{"krate":0,"index":5339},{"krate":0,"index":5342}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5393},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217701,"byte_end":217702,"line_start":298,"line_end":298,"column_start":52,"column_end":53},"name":"P","qualname":"::parser::choice::P::P","value":"P::P(P)","parent":{"krate":0,"index":5380},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5396},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217703,"byte_end":217704,"line_start":298,"line_end":298,"column_start":54,"column_end":55},"name":"Q","qualname":"::parser::choice::P::Q","value":"P::Q(Q)","parent":{"krate":0,"index":5380},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5399},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217705,"byte_end":217706,"line_start":298,"line_end":298,"column_start":56,"column_end":57},"name":"R","qualname":"::parser::choice::P::R","value":"P::R(R)","parent":{"krate":0,"index":5380},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5402},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217707,"byte_end":217708,"line_start":298,"line_end":298,"column_start":58,"column_end":59},"name":"S","qualname":"::parser::choice::P::S","value":"P::S(S)","parent":{"krate":0,"index":5380},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5405},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217709,"byte_end":217710,"line_start":298,"line_end":298,"column_start":60,"column_end":61},"name":"T","qualname":"::parser::choice::P::T","value":"P::T(T)","parent":{"krate":0,"index":5380},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5408},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217711,"byte_end":217712,"line_start":298,"line_end":298,"column_start":62,"column_end":63},"name":"U","qualname":"::parser::choice::P::U","value":"P::U(U)","parent":{"krate":0,"index":5380},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5411},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217713,"byte_end":217714,"line_start":298,"line_end":298,"column_start":64,"column_end":65},"name":"V","qualname":"::parser::choice::P::V","value":"P::V(V)","parent":{"krate":0,"index":5380},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5414},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217715,"byte_end":217716,"line_start":298,"line_end":298,"column_start":66,"column_end":67},"name":"X","qualname":"::parser::choice::P::X","value":"P::X(X)","parent":{"krate":0,"index":5380},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5417},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217717,"byte_end":217718,"line_start":298,"line_end":298,"column_start":68,"column_end":69},"name":"Y","qualname":"::parser::choice::P::Y","value":"P::Y(Y)","parent":{"krate":0,"index":5380},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5420},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217719,"byte_end":217720,"line_start":298,"line_end":298,"column_start":70,"column_end":71},"name":"Z","qualname":"::parser::choice::P::Z","value":"P::Z(Z)","parent":{"krate":0,"index":5380},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":5380},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217701,"byte_end":217702,"line_start":298,"line_end":298,"column_start":52,"column_end":53},"name":"P","qualname":"::parser::choice::P","value":"pub enum P<P, Q, R, S, T, U, V, X, Y, Z> {\n    Empty,\n    P(P),\n    Q(Q),\n    R(R),\n    S(S),\n    T(T),\n    U(U),\n    V(V),\n    X(X),\n    Y(Y),\n    Z(Z),\n}","parent":null,"children":[{"krate":0,"index":5391},{"krate":0,"index":5393},{"krate":0,"index":5396},{"krate":0,"index":5399},{"krate":0,"index":5402},{"krate":0,"index":5405},{"krate":0,"index":5408},{"krate":0,"index":5411},{"krate":0,"index":5414},{"krate":0,"index":5417},{"krate":0,"index":5420}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5468},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217703,"byte_end":217704,"line_start":298,"line_end":298,"column_start":54,"column_end":55},"name":"Q","qualname":"::parser::choice::Q::Q","value":"Q::Q(Q)","parent":{"krate":0,"index":5456},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5471},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217705,"byte_end":217706,"line_start":298,"line_end":298,"column_start":56,"column_end":57},"name":"R","qualname":"::parser::choice::Q::R","value":"Q::R(R)","parent":{"krate":0,"index":5456},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5474},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217707,"byte_end":217708,"line_start":298,"line_end":298,"column_start":58,"column_end":59},"name":"S","qualname":"::parser::choice::Q::S","value":"Q::S(S)","parent":{"krate":0,"index":5456},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5477},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217709,"byte_end":217710,"line_start":298,"line_end":298,"column_start":60,"column_end":61},"name":"T","qualname":"::parser::choice::Q::T","value":"Q::T(T)","parent":{"krate":0,"index":5456},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5480},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217711,"byte_end":217712,"line_start":298,"line_end":298,"column_start":62,"column_end":63},"name":"U","qualname":"::parser::choice::Q::U","value":"Q::U(U)","parent":{"krate":0,"index":5456},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5483},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217713,"byte_end":217714,"line_start":298,"line_end":298,"column_start":64,"column_end":65},"name":"V","qualname":"::parser::choice::Q::V","value":"Q::V(V)","parent":{"krate":0,"index":5456},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5486},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217715,"byte_end":217716,"line_start":298,"line_end":298,"column_start":66,"column_end":67},"name":"X","qualname":"::parser::choice::Q::X","value":"Q::X(X)","parent":{"krate":0,"index":5456},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5489},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217717,"byte_end":217718,"line_start":298,"line_end":298,"column_start":68,"column_end":69},"name":"Y","qualname":"::parser::choice::Q::Y","value":"Q::Y(Y)","parent":{"krate":0,"index":5456},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5492},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217719,"byte_end":217720,"line_start":298,"line_end":298,"column_start":70,"column_end":71},"name":"Z","qualname":"::parser::choice::Q::Z","value":"Q::Z(Z)","parent":{"krate":0,"index":5456},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":5456},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217703,"byte_end":217704,"line_start":298,"line_end":298,"column_start":54,"column_end":55},"name":"Q","qualname":"::parser::choice::Q","value":"pub enum Q<Q, R, S, T, U, V, X, Y, Z> {\n    Empty,\n    Q(Q),\n    R(R),\n    S(S),\n    T(T),\n    U(U),\n    V(V),\n    X(X),\n    Y(Y),\n    Z(Z),\n}","parent":null,"children":[{"krate":0,"index":5466},{"krate":0,"index":5468},{"krate":0,"index":5471},{"krate":0,"index":5474},{"krate":0,"index":5477},{"krate":0,"index":5480},{"krate":0,"index":5483},{"krate":0,"index":5486},{"krate":0,"index":5489},{"krate":0,"index":5492}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5537},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217705,"byte_end":217706,"line_start":298,"line_end":298,"column_start":56,"column_end":57},"name":"R","qualname":"::parser::choice::R::R","value":"R::R(R)","parent":{"krate":0,"index":5526},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5540},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217707,"byte_end":217708,"line_start":298,"line_end":298,"column_start":58,"column_end":59},"name":"S","qualname":"::parser::choice::R::S","value":"R::S(S)","parent":{"krate":0,"index":5526},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5543},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217709,"byte_end":217710,"line_start":298,"line_end":298,"column_start":60,"column_end":61},"name":"T","qualname":"::parser::choice::R::T","value":"R::T(T)","parent":{"krate":0,"index":5526},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5546},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217711,"byte_end":217712,"line_start":298,"line_end":298,"column_start":62,"column_end":63},"name":"U","qualname":"::parser::choice::R::U","value":"R::U(U)","parent":{"krate":0,"index":5526},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5549},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217713,"byte_end":217714,"line_start":298,"line_end":298,"column_start":64,"column_end":65},"name":"V","qualname":"::parser::choice::R::V","value":"R::V(V)","parent":{"krate":0,"index":5526},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5552},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217715,"byte_end":217716,"line_start":298,"line_end":298,"column_start":66,"column_end":67},"name":"X","qualname":"::parser::choice::R::X","value":"R::X(X)","parent":{"krate":0,"index":5526},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5555},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217717,"byte_end":217718,"line_start":298,"line_end":298,"column_start":68,"column_end":69},"name":"Y","qualname":"::parser::choice::R::Y","value":"R::Y(Y)","parent":{"krate":0,"index":5526},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5558},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217719,"byte_end":217720,"line_start":298,"line_end":298,"column_start":70,"column_end":71},"name":"Z","qualname":"::parser::choice::R::Z","value":"R::Z(Z)","parent":{"krate":0,"index":5526},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":5526},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217705,"byte_end":217706,"line_start":298,"line_end":298,"column_start":56,"column_end":57},"name":"R","qualname":"::parser::choice::R","value":"pub enum R<R, S, T, U, V, X, Y, Z> {\n    Empty,\n    R(R),\n    S(S),\n    T(T),\n    U(U),\n    V(V),\n    X(X),\n    Y(Y),\n    Z(Z),\n}","parent":null,"children":[{"krate":0,"index":5535},{"krate":0,"index":5537},{"krate":0,"index":5540},{"krate":0,"index":5543},{"krate":0,"index":5546},{"krate":0,"index":5549},{"krate":0,"index":5552},{"krate":0,"index":5555},{"krate":0,"index":5558}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5600},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217707,"byte_end":217708,"line_start":298,"line_end":298,"column_start":58,"column_end":59},"name":"S","qualname":"::parser::choice::S::S","value":"S::S(S)","parent":{"krate":0,"index":5590},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5603},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217709,"byte_end":217710,"line_start":298,"line_end":298,"column_start":60,"column_end":61},"name":"T","qualname":"::parser::choice::S::T","value":"S::T(T)","parent":{"krate":0,"index":5590},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5606},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217711,"byte_end":217712,"line_start":298,"line_end":298,"column_start":62,"column_end":63},"name":"U","qualname":"::parser::choice::S::U","value":"S::U(U)","parent":{"krate":0,"index":5590},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5609},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217713,"byte_end":217714,"line_start":298,"line_end":298,"column_start":64,"column_end":65},"name":"V","qualname":"::parser::choice::S::V","value":"S::V(V)","parent":{"krate":0,"index":5590},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5612},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217715,"byte_end":217716,"line_start":298,"line_end":298,"column_start":66,"column_end":67},"name":"X","qualname":"::parser::choice::S::X","value":"S::X(X)","parent":{"krate":0,"index":5590},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5615},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217717,"byte_end":217718,"line_start":298,"line_end":298,"column_start":68,"column_end":69},"name":"Y","qualname":"::parser::choice::S::Y","value":"S::Y(Y)","parent":{"krate":0,"index":5590},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5618},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217719,"byte_end":217720,"line_start":298,"line_end":298,"column_start":70,"column_end":71},"name":"Z","qualname":"::parser::choice::S::Z","value":"S::Z(Z)","parent":{"krate":0,"index":5590},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":5590},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217707,"byte_end":217708,"line_start":298,"line_end":298,"column_start":58,"column_end":59},"name":"S","qualname":"::parser::choice::S","value":"pub enum S<S, T, U, V, X, Y, Z> {\n    Empty,\n    S(S),\n    T(T),\n    U(U),\n    V(V),\n    X(X),\n    Y(Y),\n    Z(Z),\n}","parent":null,"children":[{"krate":0,"index":5598},{"krate":0,"index":5600},{"krate":0,"index":5603},{"krate":0,"index":5606},{"krate":0,"index":5609},{"krate":0,"index":5612},{"krate":0,"index":5615},{"krate":0,"index":5618}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5657},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217709,"byte_end":217710,"line_start":298,"line_end":298,"column_start":60,"column_end":61},"name":"T","qualname":"::parser::choice::T::T","value":"T::T(T)","parent":{"krate":0,"index":5648},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5660},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217711,"byte_end":217712,"line_start":298,"line_end":298,"column_start":62,"column_end":63},"name":"U","qualname":"::parser::choice::T::U","value":"T::U(U)","parent":{"krate":0,"index":5648},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5663},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217713,"byte_end":217714,"line_start":298,"line_end":298,"column_start":64,"column_end":65},"name":"V","qualname":"::parser::choice::T::V","value":"T::V(V)","parent":{"krate":0,"index":5648},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5666},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217715,"byte_end":217716,"line_start":298,"line_end":298,"column_start":66,"column_end":67},"name":"X","qualname":"::parser::choice::T::X","value":"T::X(X)","parent":{"krate":0,"index":5648},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5669},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217717,"byte_end":217718,"line_start":298,"line_end":298,"column_start":68,"column_end":69},"name":"Y","qualname":"::parser::choice::T::Y","value":"T::Y(Y)","parent":{"krate":0,"index":5648},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5672},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217719,"byte_end":217720,"line_start":298,"line_end":298,"column_start":70,"column_end":71},"name":"Z","qualname":"::parser::choice::T::Z","value":"T::Z(Z)","parent":{"krate":0,"index":5648},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":5648},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217709,"byte_end":217710,"line_start":298,"line_end":298,"column_start":60,"column_end":61},"name":"T","qualname":"::parser::choice::T","value":"pub enum T<T, U, V, X, Y, Z> { Empty, T(T), U(U), V(V), X(X), Y(Y), Z(Z), }","parent":null,"children":[{"krate":0,"index":5655},{"krate":0,"index":5657},{"krate":0,"index":5660},{"krate":0,"index":5663},{"krate":0,"index":5666},{"krate":0,"index":5669},{"krate":0,"index":5672}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5708},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217711,"byte_end":217712,"line_start":298,"line_end":298,"column_start":62,"column_end":63},"name":"U","qualname":"::parser::choice::U::U","value":"U::U(U)","parent":{"krate":0,"index":5700},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5711},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217713,"byte_end":217714,"line_start":298,"line_end":298,"column_start":64,"column_end":65},"name":"V","qualname":"::parser::choice::U::V","value":"U::V(V)","parent":{"krate":0,"index":5700},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5714},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217715,"byte_end":217716,"line_start":298,"line_end":298,"column_start":66,"column_end":67},"name":"X","qualname":"::parser::choice::U::X","value":"U::X(X)","parent":{"krate":0,"index":5700},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5717},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217717,"byte_end":217718,"line_start":298,"line_end":298,"column_start":68,"column_end":69},"name":"Y","qualname":"::parser::choice::U::Y","value":"U::Y(Y)","parent":{"krate":0,"index":5700},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5720},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217719,"byte_end":217720,"line_start":298,"line_end":298,"column_start":70,"column_end":71},"name":"Z","qualname":"::parser::choice::U::Z","value":"U::Z(Z)","parent":{"krate":0,"index":5700},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":5700},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217711,"byte_end":217712,"line_start":298,"line_end":298,"column_start":62,"column_end":63},"name":"U","qualname":"::parser::choice::U","value":"pub enum U<U, V, X, Y, Z> { Empty, U(U), V(V), X(X), Y(Y), Z(Z), }","parent":null,"children":[{"krate":0,"index":5706},{"krate":0,"index":5708},{"krate":0,"index":5711},{"krate":0,"index":5714},{"krate":0,"index":5717},{"krate":0,"index":5720}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5753},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217713,"byte_end":217714,"line_start":298,"line_end":298,"column_start":64,"column_end":65},"name":"V","qualname":"::parser::choice::V::V","value":"V::V(V)","parent":{"krate":0,"index":5746},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5756},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217715,"byte_end":217716,"line_start":298,"line_end":298,"column_start":66,"column_end":67},"name":"X","qualname":"::parser::choice::V::X","value":"V::X(X)","parent":{"krate":0,"index":5746},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5759},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217717,"byte_end":217718,"line_start":298,"line_end":298,"column_start":68,"column_end":69},"name":"Y","qualname":"::parser::choice::V::Y","value":"V::Y(Y)","parent":{"krate":0,"index":5746},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5762},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217719,"byte_end":217720,"line_start":298,"line_end":298,"column_start":70,"column_end":71},"name":"Z","qualname":"::parser::choice::V::Z","value":"V::Z(Z)","parent":{"krate":0,"index":5746},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":5746},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217713,"byte_end":217714,"line_start":298,"line_end":298,"column_start":64,"column_end":65},"name":"V","qualname":"::parser::choice::V","value":"pub enum V<V, X, Y, Z> { Empty, V(V), X(X), Y(Y), Z(Z), }","parent":null,"children":[{"krate":0,"index":5751},{"krate":0,"index":5753},{"krate":0,"index":5756},{"krate":0,"index":5759},{"krate":0,"index":5762}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5792},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217715,"byte_end":217716,"line_start":298,"line_end":298,"column_start":66,"column_end":67},"name":"X","qualname":"::parser::choice::X::X","value":"X::X(X)","parent":{"krate":0,"index":5786},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5795},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217717,"byte_end":217718,"line_start":298,"line_end":298,"column_start":68,"column_end":69},"name":"Y","qualname":"::parser::choice::X::Y","value":"X::Y(Y)","parent":{"krate":0,"index":5786},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5798},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217719,"byte_end":217720,"line_start":298,"line_end":298,"column_start":70,"column_end":71},"name":"Z","qualname":"::parser::choice::X::Z","value":"X::Z(Z)","parent":{"krate":0,"index":5786},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":5786},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217715,"byte_end":217716,"line_start":298,"line_end":298,"column_start":66,"column_end":67},"name":"X","qualname":"::parser::choice::X","value":"pub enum X<X, Y, Z> { Empty, X(X), Y(Y), Z(Z), }","parent":null,"children":[{"krate":0,"index":5790},{"krate":0,"index":5792},{"krate":0,"index":5795},{"krate":0,"index":5798}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5825},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217717,"byte_end":217718,"line_start":298,"line_end":298,"column_start":68,"column_end":69},"name":"Y","qualname":"::parser::choice::Y::Y","value":"Y::Y(Y)","parent":{"krate":0,"index":5820},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5828},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217719,"byte_end":217720,"line_start":298,"line_end":298,"column_start":70,"column_end":71},"name":"Z","qualname":"::parser::choice::Y::Z","value":"Y::Z(Z)","parent":{"krate":0,"index":5820},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":5820},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217717,"byte_end":217718,"line_start":298,"line_end":298,"column_start":68,"column_end":69},"name":"Y","qualname":"::parser::choice::Y","value":"pub enum Y<Y, Z> { Empty, Y(Y), Z(Z), }","parent":null,"children":[{"krate":0,"index":5823},{"krate":0,"index":5825},{"krate":0,"index":5828}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5852},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217719,"byte_end":217720,"line_start":298,"line_end":298,"column_start":70,"column_end":71},"name":"Z","qualname":"::parser::choice::Z::Z","value":"Z::Z(Z)","parent":{"krate":0,"index":5848},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":5848},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":217719,"byte_end":217720,"line_start":298,"line_end":298,"column_start":70,"column_end":71},"name":"Z","qualname":"::parser::choice::Z","value":"pub enum Z<Z> { Empty, Z(Z), }","parent":null,"children":[{"krate":0,"index":5850},{"krate":0,"index":5852}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6233},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":219002,"byte_end":219008,"line_start":347,"line_end":347,"column_start":12,"column_end":18},"name":"Choice","qualname":"::parser::choice::Choice","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1112},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":225604,"byte_end":225610,"line_start":547,"line_end":547,"column_start":8,"column_end":14},"name":"choice","qualname":"::parser::choice::choice","value":"pub fn choice<P>(P) -> Choice<P> where P: ChoiceParser","parent":null,"children":[],"decl_id":null,"docs":" Takes a tuple, a slice or an array of parsers and tries to apply them each in order.\n Fails if all the parsers fails or if an applied parser consumes input before failing.","sig":null,"attributes":[{"value":"/ Takes a tuple, a slice or an array of parsers and tries to apply them each in order.","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":224139,"byte_end":224227,"line_start":515,"line_end":515,"column_start":1,"column_end":89}},{"value":"/ Fails if all the parsers fails or if an applied parser consumes input before failing.","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":224228,"byte_end":224317,"line_start":516,"line_end":516,"column_start":1,"column_end":90}},{"value":"/","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":224318,"byte_end":224321,"line_start":517,"line_end":517,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":224322,"byte_end":224329,"line_start":518,"line_end":518,"column_start":1,"column_end":8}},{"value":"/ # extern crate combine;","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":224330,"byte_end":224357,"line_start":519,"line_end":519,"column_start":1,"column_end":28}},{"value":"/ # use combine::*;","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":224358,"byte_end":224379,"line_start":520,"line_end":520,"column_start":1,"column_end":22}},{"value":"/ # use combine::char::{digit, string};","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":224380,"byte_end":224421,"line_start":521,"line_end":521,"column_start":1,"column_end":42}},{"value":"/ # fn main() {","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":224422,"byte_end":224439,"line_start":522,"line_end":522,"column_start":1,"column_end":18}},{"value":"/ // `choice` is overloaded on tuples so that different types of parsers can be used","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":224440,"byte_end":224526,"line_start":523,"line_end":523,"column_start":1,"column_end":87}},{"value":"/ // (each parser must still have the same input and output types)","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":224527,"byte_end":224595,"line_start":524,"line_end":524,"column_start":1,"column_end":69}},{"value":"/ let mut parser = choice((","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":224596,"byte_end":224625,"line_start":525,"line_end":525,"column_start":1,"column_end":30}},{"value":"/     string(\"Apple\").map(|s| s.to_string()),","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":224626,"byte_end":224673,"line_start":526,"line_end":526,"column_start":1,"column_end":48}},{"value":"/     many1(digit()),","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":224674,"byte_end":224697,"line_start":527,"line_end":527,"column_start":1,"column_end":24}},{"value":"/     string(\"Orange\").map(|s| s.to_string()),","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":224698,"byte_end":224746,"line_start":528,"line_end":528,"column_start":1,"column_end":49}},{"value":"/ ));","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":224747,"byte_end":224754,"line_start":529,"line_end":529,"column_start":1,"column_end":8}},{"value":"/ assert_eq!(parser.parse(\"1234\"), Ok((\"1234\".to_string(), \"\")));","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":224755,"byte_end":224822,"line_start":530,"line_end":530,"column_start":1,"column_end":68}},{"value":"/ assert_eq!(parser.parse(\"Orangexx\"), Ok((\"Orange\".to_string(), \"xx\")));","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":224823,"byte_end":224898,"line_start":531,"line_end":531,"column_start":1,"column_end":76}},{"value":"/ assert!(parser.parse(\"Appl\").is_err());","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":224899,"byte_end":224942,"line_start":532,"line_end":532,"column_start":1,"column_end":44}},{"value":"/ assert!(parser.parse(\"Pear\").is_err());","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":224943,"byte_end":224986,"line_start":533,"line_end":533,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":224987,"byte_end":224990,"line_start":534,"line_end":534,"column_start":1,"column_end":4}},{"value":"/ // If arrays or slices are used then all parsers must have the same type","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":224991,"byte_end":225067,"line_start":535,"line_end":535,"column_start":1,"column_end":77}},{"value":"/ // (`string` in this case)","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":225068,"byte_end":225098,"line_start":536,"line_end":536,"column_start":1,"column_end":31}},{"value":"/ let mut parser2 = choice([string(\"one\"), string(\"two\"), string(\"three\")]);","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":225099,"byte_end":225177,"line_start":537,"line_end":537,"column_start":1,"column_end":79}},{"value":"/ // Fails as the parser for \"two\" consumes the first 't' before failing","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":225178,"byte_end":225252,"line_start":538,"line_end":538,"column_start":1,"column_end":75}},{"value":"/ assert!(parser2.parse(\"three\").is_err());","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":225253,"byte_end":225298,"line_start":539,"line_end":539,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":225299,"byte_end":225302,"line_start":540,"line_end":540,"column_start":1,"column_end":4}},{"value":"/ // Use 'attempt' to make failing parsers always act as if they have not consumed any input","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":225303,"byte_end":225397,"line_start":541,"line_end":541,"column_start":1,"column_end":95}},{"value":"/ let mut parser3 = choice([attempt(string(\"one\")), attempt(string(\"two\")), attempt(string(\"three\"))]);","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":225398,"byte_end":225503,"line_start":542,"line_end":542,"column_start":1,"column_end":106}},{"value":"/ assert_eq!(parser3.parse(\"three\"), Ok((\"three\", \"\")));","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":225504,"byte_end":225562,"line_start":543,"line_end":543,"column_start":1,"column_end":59}},{"value":"/ # }","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":225563,"byte_end":225570,"line_start":544,"line_end":544,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":225571,"byte_end":225578,"line_start":545,"line_end":545,"column_start":1,"column_end":8}},{"value":"inline(always)","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":225579,"byte_end":225596,"line_start":546,"line_end":546,"column_start":1,"column_end":18}}]},{"kind":"Struct","id":{"krate":0,"index":6244},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":225715,"byte_end":225717,"line_start":555,"line_end":555,"column_start":12,"column_end":14},"name":"Or","qualname":"::parser::choice::Or","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1125},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":227754,"byte_end":227756,"line_start":623,"line_end":623,"column_start":8,"column_end":10},"name":"or","qualname":"::parser::choice::or","value":"pub fn or<P1, P2>(P1, P2) -> Or<P1, P2> where P1: Parser, P2: Parser<Input =\nP1::Input, Output = P1::Input>","parent":null,"children":[],"decl_id":null,"docs":" Equivalent to [`p1.or(p2)`].","sig":null,"attributes":[{"value":"/ Equivalent to [`p1.or(p2)`].","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":226557,"byte_end":226589,"line_start":591,"line_end":591,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":226590,"byte_end":226593,"line_start":592,"line_end":592,"column_start":1,"column_end":4}},{"value":"/ If you are looking to chain 3 or more parsers using `or` you may consider using the","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":226594,"byte_end":226681,"line_start":593,"line_end":593,"column_start":1,"column_end":88}},{"value":"/ [`choice!`] macro instead, which can be clearer and may result in a faster parser.","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":226682,"byte_end":226768,"line_start":594,"line_end":594,"column_start":1,"column_end":87}},{"value":"/","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":226769,"byte_end":226772,"line_start":595,"line_end":595,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":226773,"byte_end":226780,"line_start":596,"line_end":596,"column_start":1,"column_end":8}},{"value":"/ # extern crate combine;","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":226781,"byte_end":226808,"line_start":597,"line_end":597,"column_start":1,"column_end":28}},{"value":"/ # use combine::*;","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":226809,"byte_end":226830,"line_start":598,"line_end":598,"column_start":1,"column_end":22}},{"value":"/ # use combine::parser::choice::or;","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":226831,"byte_end":226869,"line_start":599,"line_end":599,"column_start":1,"column_end":39}},{"value":"/ # use combine::parser::char::{digit, string};","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":226870,"byte_end":226919,"line_start":600,"line_end":600,"column_start":1,"column_end":50}},{"value":"/ # fn main() {","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":226920,"byte_end":226937,"line_start":601,"line_end":601,"column_start":1,"column_end":18}},{"value":"/ let mut parser = or(","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":226938,"byte_end":226962,"line_start":602,"line_end":602,"column_start":1,"column_end":25}},{"value":"/     string(\"let\"),","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":226963,"byte_end":226985,"line_start":603,"line_end":603,"column_start":1,"column_end":23}},{"value":"/     or(digit().map(|_| \"digit\"), string(\"led\")),","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":226986,"byte_end":227038,"line_start":604,"line_end":604,"column_start":1,"column_end":53}},{"value":"/ );","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":227039,"byte_end":227045,"line_start":605,"line_end":605,"column_start":1,"column_end":7}},{"value":"/ assert_eq!(parser.parse(\"let\"), Ok((\"let\", \"\")));","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":227046,"byte_end":227099,"line_start":606,"line_end":606,"column_start":1,"column_end":54}},{"value":"/ assert_eq!(parser.parse(\"1\"), Ok((\"digit\", \"\")));","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":227100,"byte_end":227153,"line_start":607,"line_end":607,"column_start":1,"column_end":54}},{"value":"/ assert!(parser.parse(\"led\").is_err());","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":227154,"byte_end":227196,"line_start":608,"line_end":608,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":227197,"byte_end":227200,"line_start":609,"line_end":609,"column_start":1,"column_end":4}},{"value":"/ let mut parser2 = or(string(\"two\"), string(\"three\"));","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":227201,"byte_end":227258,"line_start":610,"line_end":610,"column_start":1,"column_end":58}},{"value":"/ // Fails as the parser for \"two\" consumes the first 't' before failing","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":227259,"byte_end":227333,"line_start":611,"line_end":611,"column_start":1,"column_end":75}},{"value":"/ assert!(parser2.parse(\"three\").is_err());","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":227334,"byte_end":227379,"line_start":612,"line_end":612,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":227380,"byte_end":227383,"line_start":613,"line_end":613,"column_start":1,"column_end":4}},{"value":"/ // Use 'attempt' to make failing parsers always act as if they have not consumed any input","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":227384,"byte_end":227478,"line_start":614,"line_end":614,"column_start":1,"column_end":95}},{"value":"/ let mut parser3 = or(attempt(string(\"two\")), attempt(string(\"three\")));","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":227479,"byte_end":227554,"line_start":615,"line_end":615,"column_start":1,"column_end":76}},{"value":"/ assert_eq!(parser3.parse(\"three\"), Ok((\"three\", \"\")));","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":227555,"byte_end":227613,"line_start":616,"line_end":616,"column_start":1,"column_end":59}},{"value":"/ # }","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":227614,"byte_end":227621,"line_start":617,"line_end":617,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":227622,"byte_end":227629,"line_start":618,"line_end":618,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":227630,"byte_end":227633,"line_start":619,"line_end":619,"column_start":1,"column_end":4}},{"value":"/ [`choice!`]: ../macro.choice.html","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":227634,"byte_end":227671,"line_start":620,"line_end":620,"column_start":1,"column_end":38}},{"value":"/ [`p1.or(p2)`]: ../parser/trait.Parser.html#method.or","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":227672,"byte_end":227728,"line_start":621,"line_end":621,"column_start":1,"column_end":57}},{"value":"inline(always)","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":227729,"byte_end":227746,"line_start":622,"line_end":622,"column_start":1,"column_end":18}}]},{"kind":"Struct","id":{"krate":0,"index":6258},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":227937,"byte_end":227945,"line_start":632,"line_end":632,"column_start":12,"column_end":20},"name":"Optional","qualname":"::parser::choice::Optional","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1135},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":229338,"byte_end":229346,"line_start":682,"line_end":682,"column_start":8,"column_end":16},"name":"optional","qualname":"::parser::choice::optional","value":"pub fn optional<P>(P) -> Optional<P> where P: Parser","parent":null,"children":[],"decl_id":null,"docs":" Parses `parser` and outputs `Some(value)` if it succeeds, `None` if it fails without\n consuming any input. Fails if `parser` fails after having consumed some input.","sig":null,"attributes":[{"value":"/ Parses `parser` and outputs `Some(value)` if it succeeds, `None` if it fails without","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":228788,"byte_end":228876,"line_start":667,"line_end":667,"column_start":1,"column_end":89}},{"value":"/ consuming any input. Fails if `parser` fails after having consumed some input.","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":228877,"byte_end":228959,"line_start":668,"line_end":668,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":228960,"byte_end":228963,"line_start":669,"line_end":669,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":228964,"byte_end":228971,"line_start":670,"line_end":670,"column_start":1,"column_end":8}},{"value":"/ # extern crate combine;","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":228972,"byte_end":228999,"line_start":671,"line_end":671,"column_start":1,"column_end":28}},{"value":"/ # use combine::*;","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":229000,"byte_end":229021,"line_start":672,"line_end":672,"column_start":1,"column_end":22}},{"value":"/ # use combine::parser::char::string;","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":229022,"byte_end":229062,"line_start":673,"line_end":673,"column_start":1,"column_end":41}},{"value":"/ # fn main() {","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":229063,"byte_end":229080,"line_start":674,"line_end":674,"column_start":1,"column_end":18}},{"value":"/ let mut parser = optional(string(\"hello\"));","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":229081,"byte_end":229128,"line_start":675,"line_end":675,"column_start":1,"column_end":48}},{"value":"/ assert_eq!(parser.parse(\"hello\"), Ok((Some(\"hello\"), \"\")));","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":229129,"byte_end":229192,"line_start":676,"line_end":676,"column_start":1,"column_end":64}},{"value":"/ assert_eq!(parser.parse(\"world\"), Ok((None, \"world\")));","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":229193,"byte_end":229252,"line_start":677,"line_end":677,"column_start":1,"column_end":60}},{"value":"/ assert!(parser.parse(\"heya\").is_err());","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":229253,"byte_end":229296,"line_start":678,"line_end":678,"column_start":1,"column_end":44}},{"value":"/ # }","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":229297,"byte_end":229304,"line_start":679,"line_end":679,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":229305,"byte_end":229312,"line_start":680,"line_end":680,"column_start":1,"column_end":8}},{"value":"inline(always)","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":229313,"byte_end":229330,"line_start":681,"line_end":681,"column_start":1,"column_end":18}}]},{"kind":"Mod","id":{"krate":0,"index":1137},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/combinator.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"combinator","qualname":"::parser::combinator","value":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/combinator.rs","parent":null,"children":[{"krate":0,"index":1138},{"krate":0,"index":1139},{"krate":0,"index":8288},{"krate":0,"index":1140},{"krate":0,"index":1141},{"krate":0,"index":1142},{"krate":0,"index":1143},{"krate":0,"index":1144},{"krate":0,"index":1145},{"krate":0,"index":1146},{"krate":0,"index":1147},{"krate":0,"index":1148},{"krate":0,"index":1149},{"krate":0,"index":1150},{"krate":0,"index":1151},{"krate":0,"index":1152},{"krate":0,"index":1153},{"krate":0,"index":1154},{"krate":0,"index":1155},{"krate":0,"index":1156},{"krate":0,"index":1157},{"krate":0,"index":1158},{"krate":0,"index":6271},{"krate":0,"index":6278},{"krate":0,"index":6275},{"krate":0,"index":1159},{"krate":0,"index":1170},{"krate":0,"index":6283},{"krate":0,"index":6290},{"krate":0,"index":6287},{"krate":0,"index":1172},{"krate":0,"index":1184},{"krate":0,"index":1186},{"krate":0,"index":6297},{"krate":0,"index":6304},{"krate":0,"index":6301},{"krate":0,"index":1188},{"krate":0,"index":1196},{"krate":0,"index":6309},{"krate":0,"index":6319},{"krate":0,"index":6315},{"krate":0,"index":1198},{"krate":0,"index":1209},{"krate":0,"index":6327},{"krate":0,"index":6337},{"krate":0,"index":6333},{"krate":0,"index":1213},{"krate":0,"index":1224},{"krate":0,"index":6345},{"krate":0,"index":6355},{"krate":0,"index":6351},{"krate":0,"index":1228},{"krate":0,"index":1239},{"krate":0,"index":6363},{"krate":0,"index":6373},{"krate":0,"index":6369},{"krate":0,"index":1245},{"krate":0,"index":1249},{"krate":0,"index":1258},{"krate":0,"index":1261},{"krate":0,"index":1271},{"krate":0,"index":1275},{"krate":0,"index":1283},{"krate":0,"index":6385},{"krate":0,"index":6392},{"krate":0,"index":6389},{"krate":0,"index":1285},{"krate":0,"index":1295},{"krate":0,"index":6399},{"krate":0,"index":6402},{"krate":0,"index":1297},{"krate":0,"index":1301},{"krate":0,"index":1309},{"krate":0,"index":6409},{"krate":0,"index":6412},{"krate":0,"index":1311},{"krate":0,"index":1315},{"krate":0,"index":1323},{"krate":0,"index":6419},{"krate":0,"index":6426},{"krate":0,"index":6423},{"krate":0,"index":1325},{"krate":0,"index":1341},{"krate":0,"index":6430},{"krate":0,"index":6440},{"krate":0,"index":6436},{"krate":0,"index":1344},{"krate":0,"index":1348},{"krate":0,"index":1360},{"krate":0,"index":1363},{"krate":0,"index":1365},{"krate":0,"index":1366},{"krate":0,"index":1368},{"krate":0,"index":1369},{"krate":0,"index":1371},{"krate":0,"index":1373},{"krate":0,"index":1376},{"krate":0,"index":1377},{"krate":0,"index":1379},{"krate":0,"index":1380},{"krate":0,"index":1382},{"krate":0,"index":1384},{"krate":0,"index":1387},{"krate":0,"index":1388},{"krate":0,"index":6445},{"krate":0,"index":6450},{"krate":0,"index":6466},{"krate":0,"index":6474},{"krate":0,"index":6488},{"krate":0,"index":6482},{"krate":0,"index":1391},{"krate":0,"index":1410},{"krate":0,"index":1414}],"decl_id":null,"docs":" Various combinators which do not fit anywhere else.\n","sig":null,"attributes":[{"value":"/ Various combinators which do not fit anywhere else.","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/combinator.rs","byte_start":230305,"byte_end":230360,"line_start":1,"line_end":1,"column_start":1,"column_end":56}}]},{"kind":"Struct","id":{"krate":0,"index":6271},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/combinator.rs","byte_start":230709,"byte_end":230722,"line_start":18,"line_end":18,"column_start":12,"column_end":25},"name":"NotFollowedBy","qualname":"::parser::combinator::NotFollowedBy","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1170},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/combinator.rs","byte_start":232183,"byte_end":232198,"line_start":77,"line_end":77,"column_start":8,"column_end":23},"name":"not_followed_by","qualname":"::parser::combinator::not_followed_by","value":"pub fn not_followed_by<P>(P) -> NotFollowedBy<P> where P: Parser,\nP::Output: Into<Info<<P::Input as StreamOnce>::Item,\n                     <P::Input as StreamOnce>::Range>>","parent":null,"children":[],"decl_id":null,"docs":" Succeeds only if `parser` fails.\n Never consumes any input.","sig":null,"attributes":[{"value":"/ Succeeds only if `parser` fails.","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/combinator.rs","byte_start":231786,"byte_end":231822,"line_start":60,"line_end":60,"column_start":1,"column_end":37}},{"value":"/ Never consumes any input.","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/combinator.rs","byte_start":231823,"byte_end":231852,"line_start":61,"line_end":61,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/combinator.rs","byte_start":231853,"byte_end":231856,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/combinator.rs","byte_start":231857,"byte_end":231864,"line_start":63,"line_end":63,"column_start":1,"column_end":8}},{"value":"/ # extern crate combine;","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/combinator.rs","byte_start":231865,"byte_end":231892,"line_start":64,"line_end":64,"column_start":1,"column_end":28}},{"value":"/ # use combine::*;","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/combinator.rs","byte_start":231893,"byte_end":231914,"line_start":65,"line_end":65,"column_start":1,"column_end":22}},{"value":"/ # use combine::parser::char::{alpha_num, string};","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/combinator.rs","byte_start":231915,"byte_end":231968,"line_start":66,"line_end":66,"column_start":1,"column_end":54}},{"value":"/ # fn main() {","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/combinator.rs","byte_start":231969,"byte_end":231986,"line_start":67,"line_end":67,"column_start":1,"column_end":18}},{"value":"/ let result = string(\"let\")","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/combinator.rs","byte_start":231987,"byte_end":232017,"line_start":68,"line_end":68,"column_start":1,"column_end":31}},{"value":"/     .skip(not_followed_by(alpha_num()))","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/combinator.rs","byte_start":232018,"byte_end":232061,"line_start":69,"line_end":69,"column_start":1,"column_end":44}},{"value":"/     .parse(\"letx\")","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/combinator.rs","byte_start":232062,"byte_end":232084,"line_start":70,"line_end":70,"column_start":1,"column_end":23}},{"value":"/     .map(|x| x.0);","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/combinator.rs","byte_start":232085,"byte_end":232107,"line_start":71,"line_end":71,"column_start":1,"column_end":23}},{"value":"/ assert!(result.is_err());","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/combinator.rs","byte_start":232108,"byte_end":232137,"line_start":72,"line_end":72,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/combinator.rs","byte_start":232138,"byte_end":232141,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/ # }","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/combinator.rs","byte_start":232142,"byte_end":232149,"line_start":74,"line_end":74,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/combinator.rs","byte_start":232150,"byte_end":232157,"line_start":75,"line_end":75,"column_start":1,"column_end":8}},{"value":"inline(always)","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/combinator.rs","byte_start":232158,"byte_end":232175,"line_start":76,"line_end":76,"column_start":1,"column_end":18}}]},{"kind":"Struct","id":{"krate":0,"index":6283},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/combinator.rs","byte_start":232549,"byte_end":232552,"line_start":90,"line_end":90,"column_start":12,"column_end":15},"name":"Try","qualname":"::parser::combinator::Try","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1184},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/combinator.rs","byte_start":234638,"byte_end":234641,"line_start":167,"line_end":167,"column_start":8,"column_end":11},"name":"try","qualname":"::parser::combinator::try","value":"pub fn try<P>(P) -> Try<P> where P: Parser","parent":null,"children":[],"decl_id":null,"docs":" `try(p)` behaves as `p` except it acts as if the parser hadn't consumed any input if `p` fails\n after consuming input.","sig":null,"attributes":[{"value":"/ `try(p)` behaves as `p` except it acts as if the parser hadn't consumed any input if `p` fails","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/combinator.rs","byte_start":233906,"byte_end":234004,"line_start":144,"line_end":144,"column_start":1,"column_end":99}},{"value":"/ after consuming input.","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/combinator.rs","byte_start":234005,"byte_end":234031,"line_start":145,"line_end":145,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/combinator.rs","byte_start":234032,"byte_end":234035,"line_start":146,"line_end":146,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/combinator.rs","byte_start":234036,"byte_end":234043,"line_start":147,"line_end":147,"column_start":1,"column_end":8}},{"value":"/ # extern crate combine;","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/combinator.rs","byte_start":234044,"byte_end":234071,"line_start":148,"line_end":148,"column_start":1,"column_end":28}},{"value":"/ # use combine::*;","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/combinator.rs","byte_start":234072,"byte_end":234093,"line_start":149,"line_end":149,"column_start":1,"column_end":22}},{"value":"/ # use combine::parser::char::string;","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/combinator.rs","byte_start":234094,"byte_end":234134,"line_start":150,"line_end":150,"column_start":1,"column_end":41}},{"value":"/ # fn main() {","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/combinator.rs","byte_start":234135,"byte_end":234152,"line_start":151,"line_end":151,"column_start":1,"column_end":18}},{"value":"/ let mut p = try(string(\"let\"))","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/combinator.rs","byte_start":234153,"byte_end":234187,"line_start":152,"line_end":152,"column_start":1,"column_end":35}},{"value":"/     .or(string(\"lex\"));","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/combinator.rs","byte_start":234188,"byte_end":234215,"line_start":153,"line_end":153,"column_start":1,"column_end":28}},{"value":"/ let result = p.parse(\"lex\").map(|x| x.0);","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/combinator.rs","byte_start":234216,"byte_end":234261,"line_start":154,"line_end":154,"column_start":1,"column_end":46}},{"value":"/ assert_eq!(result, Ok(\"lex\"));","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/combinator.rs","byte_start":234262,"byte_end":234296,"line_start":155,"line_end":155,"column_start":1,"column_end":35}},{"value":"/ let result = p.parse(\"aet\").map(|x| x.0);","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/combinator.rs","byte_start":234297,"byte_end":234342,"line_start":156,"line_end":156,"column_start":1,"column_end":46}},{"value":"/ assert!(result.is_err());","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/combinator.rs","byte_start":234343,"byte_end":234372,"line_start":157,"line_end":157,"column_start":1,"column_end":30}},{"value":"/ # }","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/combinator.rs","byte_start":234373,"byte_end":234380,"line_start":158,"line_end":158,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/combinator.rs","byte_start":234381,"byte_end":234388,"line_start":159,"line_end":159,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/combinator.rs","byte_start":234389,"byte_end":234392,"line_start":160,"line_end":160,"column_start":1,"column_end":4}},{"value":"/ Note: if you're on the 2018 edition, you'll need to either use `r#try`, or [`attempt`](fn.attempt.html)","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/combinator.rs","byte_start":234393,"byte_end":234500,"line_start":161,"line_end":161,"column_start":1,"column_end":108}},{"value":"deprecated(since = \"3.5.2\", note =\n             \"try is a reserved keyword in Rust 2018. Use attempt instead.\")","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/combinator.rs","byte_start":234501,"byte_end":234612,"line_start":162,"line_end":165,"column_start":1,"column_end":3}},{"value":"inline(always)","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/combinator.rs","byte_start":234613,"byte_end":234630,"line_start":166,"line_end":166,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":1186},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/combinator.rs","byte_start":235376,"byte_end":235383,"line_start":193,"line_end":193,"column_start":8,"column_end":15},"name":"attempt","qualname":"::parser::combinator::attempt","value":"pub fn attempt<P>(P) -> Try<P> where P: Parser","parent":null,"children":[],"decl_id":null,"docs":" `attempt(p)` behaves as `p` except it acts as if the parser hadn't consumed any input if `p` fails\n after consuming input. (alias for [`try`](fn.try.html))","sig":null,"attributes":[{"value":"/ `attempt(p)` behaves as `p` except it acts as if the parser hadn't consumed any input if `p` fails","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/combinator.rs","byte_start":234698,"byte_end":234800,"line_start":174,"line_end":174,"column_start":1,"column_end":103}},{"value":"/ after consuming input. (alias for [`try`](fn.try.html))","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/combinator.rs","byte_start":234801,"byte_end":234860,"line_start":175,"line_end":175,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/combinator.rs","byte_start":234861,"byte_end":234864,"line_start":176,"line_end":176,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/combinator.rs","byte_start":234865,"byte_end":234872,"line_start":177,"line_end":177,"column_start":1,"column_end":8}},{"value":"/ # extern crate combine;","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/combinator.rs","byte_start":234873,"byte_end":234900,"line_start":178,"line_end":178,"column_start":1,"column_end":28}},{"value":"/ # use combine::*;","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/combinator.rs","byte_start":234901,"byte_end":234922,"line_start":179,"line_end":179,"column_start":1,"column_end":22}},{"value":"/ # use combine::parser::char::string;","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/combinator.rs","byte_start":234923,"byte_end":234963,"line_start":180,"line_end":180,"column_start":1,"column_end":41}},{"value":"/ # fn main() {","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/combinator.rs","byte_start":234964,"byte_end":234981,"line_start":181,"line_end":181,"column_start":1,"column_end":18}},{"value":"/ let mut p = attempt(string(\"let\"))","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/combinator.rs","byte_start":234982,"byte_end":235020,"line_start":182,"line_end":182,"column_start":1,"column_end":39}},{"value":"/     .or(string(\"lex\"));","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/combinator.rs","byte_start":235021,"byte_end":235048,"line_start":183,"line_end":183,"column_start":1,"column_end":28}},{"value":"/ let result = p.parse(\"lex\").map(|x| x.0);","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/combinator.rs","byte_start":235049,"byte_end":235094,"line_start":184,"line_end":184,"column_start":1,"column_end":46}},{"value":"/ assert_eq!(result, Ok(\"lex\"));","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/combinator.rs","byte_start":235095,"byte_end":235129,"line_start":185,"line_end":185,"column_start":1,"column_end":35}},{"value":"/ let result = p.parse(\"aet\").map(|x| x.0);","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/combinator.rs","byte_start":235130,"byte_end":235175,"line_start":186,"line_end":186,"column_start":1,"column_end":46}},{"value":"/ assert!(result.is_err());","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/combinator.rs","byte_start":235176,"byte_end":235205,"line_start":187,"line_end":187,"column_start":1,"column_end":30}},{"value":"/ # }","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/combinator.rs","byte_start":235206,"byte_end":235213,"line_start":188,"line_end":188,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/combinator.rs","byte_start":235214,"byte_end":235221,"line_start":189,"line_end":189,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/combinator.rs","byte_start":235222,"byte_end":235225,"line_start":190,"line_end":190,"column_start":1,"column_end":4}},{"value":"/ `attempt` is an alias for [`try`](fn.try.html). It was added because [`try`](fn.try.html) is now a keyword in Rust 2018.","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/combinator.rs","byte_start":235226,"byte_end":235350,"line_start":191,"line_end":191,"column_start":1,"column_end":125}},{"value":"inline(always)","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/combinator.rs","byte_start":235351,"byte_end":235368,"line_start":192,"line_end":192,"column_start":1,"column_end":18}}]},{"kind":"Struct","id":{"krate":0,"index":6297},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/combinator.rs","byte_start":235474,"byte_end":235483,"line_start":201,"line_end":201,"column_start":12,"column_end":21},"name":"LookAhead","qualname":"::parser::combinator::LookAhead","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1196},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/combinator.rs","byte_start":236453,"byte_end":236463,"line_start":241,"line_end":241,"column_start":8,"column_end":18},"name":"look_ahead","qualname":"::parser::combinator::look_ahead","value":"pub fn look_ahead<P>(P) -> LookAhead<P> where P: Parser","parent":null,"children":[],"decl_id":null,"docs":" `look_ahead(p)` acts as `p` but doesn't consume input on success.","sig":null,"attributes":[{"value":"/ `look_ahead(p)` acts as `p` but doesn't consume input on success.","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/combinator.rs","byte_start":236018,"byte_end":236087,"line_start":224,"line_end":224,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/combinator.rs","byte_start":236088,"byte_end":236091,"line_start":225,"line_end":225,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/combinator.rs","byte_start":236092,"byte_end":236099,"line_start":226,"line_end":226,"column_start":1,"column_end":8}},{"value":"/ # extern crate combine;","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/combinator.rs","byte_start":236100,"byte_end":236127,"line_start":227,"line_end":227,"column_start":1,"column_end":28}},{"value":"/ # use combine::*;","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/combinator.rs","byte_start":236128,"byte_end":236149,"line_start":228,"line_end":228,"column_start":1,"column_end":22}},{"value":"/ # use combine::parser::char::string;","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/combinator.rs","byte_start":236150,"byte_end":236190,"line_start":229,"line_end":229,"column_start":1,"column_end":41}},{"value":"/ # fn main() {","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/combinator.rs","byte_start":236191,"byte_end":236208,"line_start":230,"line_end":230,"column_start":1,"column_end":18}},{"value":"/ let mut p = look_ahead(string(\"test\"));","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/combinator.rs","byte_start":236209,"byte_end":236252,"line_start":231,"line_end":231,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/combinator.rs","byte_start":236253,"byte_end":236256,"line_start":232,"line_end":232,"column_start":1,"column_end":4}},{"value":"/ let result = p.parse(\"test str\");","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/combinator.rs","byte_start":236257,"byte_end":236294,"line_start":233,"line_end":233,"column_start":1,"column_end":38}},{"value":"/ assert_eq!(result, Ok((\"test\", \"test str\")));","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/combinator.rs","byte_start":236295,"byte_end":236344,"line_start":234,"line_end":234,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/combinator.rs","byte_start":236345,"byte_end":236348,"line_start":235,"line_end":235,"column_start":1,"column_end":4}},{"value":"/ let result = p.parse(\"aet\");","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/combinator.rs","byte_start":236349,"byte_end":236381,"line_start":236,"line_end":236,"column_start":1,"column_end":33}},{"value":"/ assert!(result.is_err());","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/combinator.rs","byte_start":236382,"byte_end":236411,"line_start":237,"line_end":237,"column_start":1,"column_end":30}},{"value":"/ # }","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/combinator.rs","byte_start":236412,"byte_end":236419,"line_start":238,"line_end":238,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/combinator.rs","byte_start":236420,"byte_end":236427,"line_start":239,"line_end":239,"column_start":1,"column_end":8}},{"value":"inline(always)","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/combinator.rs","byte_start":236428,"byte_end":236445,"line_start":240,"line_end":240,"column_start":1,"column_end":18}}]},{"kind":"Struct","id":{"krate":0,"index":6309},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/combinator.rs","byte_start":236566,"byte_end":236569,"line_start":249,"line_end":249,"column_start":12,"column_end":15},"name":"Map","qualname":"::parser::combinator::Map","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1209},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/combinator.rs","byte_start":237532,"byte_end":237535,"line_start":288,"line_end":288,"column_start":8,"column_end":11},"name":"map","qualname":"::parser::combinator::map","value":"pub fn map<P, F, B>(P, F) -> Map<P, F> where P: Parser, F: FnMut(P::Output) ->\nB","parent":null,"children":[],"decl_id":null,"docs":" Equivalent to [`p.map(f)`].","sig":null,"attributes":[{"value":"/ Equivalent to [`p.map(f)`].","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/combinator.rs","byte_start":237414,"byte_end":237445,"line_start":284,"line_end":284,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/combinator.rs","byte_start":237446,"byte_end":237449,"line_start":285,"line_end":285,"column_start":1,"column_end":4}},{"value":"/ [`p.map(f)`]: ../parser/trait.Parser.html#method.map","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/combinator.rs","byte_start":237450,"byte_end":237506,"line_start":286,"line_end":286,"column_start":1,"column_end":57}},{"value":"inline(always)","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/combinator.rs","byte_start":237507,"byte_end":237524,"line_start":287,"line_end":287,"column_start":1,"column_end":18}}]},{"kind":"Struct","id":{"krate":0,"index":6327},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/combinator.rs","byte_start":237674,"byte_end":237681,"line_start":297,"line_end":297,"column_start":12,"column_end":19},"name":"FlatMap","qualname":"::parser::combinator::FlatMap","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1224},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/combinator.rs","byte_start":238864,"byte_end":238872,"line_start":340,"line_end":340,"column_start":8,"column_end":16},"name":"flat_map","qualname":"::parser::combinator::flat_map","value":"pub fn flat_map<P, F, B>(P, F) -> FlatMap<P, F> where P: Parser,\nF: FnMut(P::Output) -> Result<B, <P::Input as StreamOnce>::Error>","parent":null,"children":[],"decl_id":null,"docs":" Equivalent to [`p.flat_map(f)`].","sig":null,"attributes":[{"value":"/ Equivalent to [`p.flat_map(f)`].","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/combinator.rs","byte_start":238731,"byte_end":238767,"line_start":336,"line_end":336,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/combinator.rs","byte_start":238768,"byte_end":238771,"line_start":337,"line_end":337,"column_start":1,"column_end":4}},{"value":"/ [`p.flat_map(f)`]: ../parser/trait.Parser.html#method.flat_map","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/combinator.rs","byte_start":238772,"byte_end":238838,"line_start":338,"line_end":338,"column_start":1,"column_end":67}},{"value":"inline(always)","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/combinator.rs","byte_start":238839,"byte_end":238856,"line_start":339,"line_end":339,"column_start":1,"column_end":18}}]},{"kind":"Struct","id":{"krate":0,"index":6345},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/combinator.rs","byte_start":239060,"byte_end":239067,"line_start":349,"line_end":349,"column_start":12,"column_end":19},"name":"AndThen","qualname":"::parser::combinator::AndThen","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1239},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/combinator.rs","byte_start":241101,"byte_end":241109,"line_start":411,"line_end":411,"column_start":8,"column_end":16},"name":"and_then","qualname":"::parser::combinator::and_then","value":"pub fn and_then<P, F, O, E, I>(P, F) -> AndThen<P, F> where P: Parser<Input =\nI>, F: FnMut(P::Output) -> Result<O, E>, I: Stream,\nE: Into<<I::Error as ParseError<I::Item, I::Range, I::Position>>::StreamError>","parent":null,"children":[],"decl_id":null,"docs":" Equivalent to [`p.and_then(f)`].","sig":null,"attributes":[{"value":"/ Equivalent to [`p.and_then(f)`].","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/combinator.rs","byte_start":240968,"byte_end":241004,"line_start":407,"line_end":407,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/combinator.rs","byte_start":241005,"byte_end":241008,"line_start":408,"line_end":408,"column_start":1,"column_end":4}},{"value":"/ [`p.and_then(f)`]: ../parser/trait.Parser.html#method.and_then","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/combinator.rs","byte_start":241009,"byte_end":241075,"line_start":409,"line_end":409,"column_start":1,"column_end":67}},{"value":"inline(always)","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/combinator.rs","byte_start":241076,"byte_end":241093,"line_start":410,"line_end":410,"column_start":1,"column_end":18}}]},{"kind":"Struct","id":{"krate":0,"index":6363},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/combinator.rs","byte_start":241383,"byte_end":241392,"line_start":422,"line_end":422,"column_start":12,"column_end":21},"name":"Recognize","qualname":"::parser::combinator::Recognize","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1258},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/combinator.rs","byte_start":245300,"byte_end":245309,"line_start":538,"line_end":538,"column_start":8,"column_end":17},"name":"recognize","qualname":"::parser::combinator::recognize","value":"pub fn recognize<F, P>(P) -> Recognize<F, P> where P: Parser, F: Default +\nExtend<<P::Input as StreamOnce>::Item>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a parser which returns the tokens parsed by `parser` accumulated in\n `F: Extend<P::Input::Item>` instead of `P::Output`.","sig":null,"attributes":[{"value":"/ Constructs a parser which returns the tokens parsed by `parser` accumulated in","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/combinator.rs","byte_start":244756,"byte_end":244838,"line_start":525,"line_end":525,"column_start":1,"column_end":83}},{"value":"/ `F: Extend<P::Input::Item>` instead of `P::Output`.","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/combinator.rs","byte_start":244839,"byte_end":244894,"line_start":526,"line_end":526,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/combinator.rs","byte_start":244895,"byte_end":244898,"line_start":527,"line_end":527,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/combinator.rs","byte_start":244899,"byte_end":244906,"line_start":528,"line_end":528,"column_start":1,"column_end":8}},{"value":"/ use combine::Parser;","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/combinator.rs","byte_start":244907,"byte_end":244931,"line_start":529,"line_end":529,"column_start":1,"column_end":25}},{"value":"/ use combine::combinator::{skip_many1, token, recognize};","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/combinator.rs","byte_start":244932,"byte_end":244992,"line_start":530,"line_end":530,"column_start":1,"column_end":61}},{"value":"/ use combine::parser::char::digit;","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/combinator.rs","byte_start":244993,"byte_end":245030,"line_start":531,"line_end":531,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/combinator.rs","byte_start":245031,"byte_end":245034,"line_start":532,"line_end":532,"column_start":1,"column_end":4}},{"value":"/ let mut parser = recognize((skip_many1(digit()), token('.'), skip_many1(digit())));","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/combinator.rs","byte_start":245035,"byte_end":245122,"line_start":533,"line_end":533,"column_start":1,"column_end":88}},{"value":"/ assert_eq!(parser.parse(\"123.45\"), Ok((\"123.45\".to_string(), \"\")));","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/combinator.rs","byte_start":245123,"byte_end":245194,"line_start":534,"line_end":534,"column_start":1,"column_end":72}},{"value":"/ assert_eq!(parser.parse(\"123.45\"), Ok((\"123.45\".to_string(), \"\")));","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/combinator.rs","byte_start":245195,"byte_end":245266,"line_start":535,"line_end":535,"column_start":1,"column_end":72}},{"value":"/ ```","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/combinator.rs","byte_start":245267,"byte_end":245274,"line_start":536,"line_end":536,"column_start":1,"column_end":8}},{"value":"inline(always)","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/combinator.rs","byte_start":245275,"byte_end":245292,"line_start":537,"line_end":537,"column_start":1,"column_end":18}}]},{"kind":"Struct","id":{"krate":0,"index":1271},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/combinator.rs","byte_start":247515,"byte_end":247524,"line_start":613,"line_end":613,"column_start":12,"column_end":21},"name":"NoPartial","qualname":"::parser::combinator::NoPartial","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1283},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/combinator.rs","byte_start":248272,"byte_end":248282,"line_start":646,"line_end":646,"column_start":8,"column_end":18},"name":"no_partial","qualname":"::parser::combinator::no_partial","value":"pub fn no_partial<P>(P) -> NoPartial<P> where P: Parser","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/combinator.rs","byte_start":248247,"byte_end":248264,"line_start":645,"line_end":645,"column_start":1,"column_end":18}}]},{"kind":"Struct","id":{"krate":0,"index":6385},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/combinator.rs","byte_start":248385,"byte_end":248391,"line_start":654,"line_end":654,"column_start":12,"column_end":18},"name":"Ignore","qualname":"::parser::combinator::Ignore","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1295},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/combinator.rs","byte_start":249149,"byte_end":249155,"line_start":686,"line_end":686,"column_start":8,"column_end":14},"name":"ignore","qualname":"::parser::combinator::ignore","value":"pub fn ignore<P>(P) -> Ignore<P> where P: Parser","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6399},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/combinator.rs","byte_start":249272,"byte_end":249287,"line_start":695,"line_end":695,"column_start":12,"column_end":27},"name":"AnyPartialState","qualname":"::parser::combinator::AnyPartialState","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/combinator.rs","byte_start":249218,"byte_end":249241,"line_start":693,"line_end":693,"column_start":1,"column_end":24}}]},{"kind":"Struct","id":{"krate":0,"index":1297},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/combinator.rs","byte_start":249355,"byte_end":249376,"line_start":698,"line_end":698,"column_start":12,"column_end":33},"name":"AnyPartialStateParser","qualname":"::parser::combinator::AnyPartialStateParser","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/combinator.rs","byte_start":249320,"byte_end":249343,"line_start":697,"line_end":697,"column_start":1,"column_end":24}}]},{"kind":"Function","id":{"krate":0,"index":1309},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/combinator.rs","byte_start":251509,"byte_end":251526,"line_start":781,"line_end":781,"column_start":8,"column_end":25},"name":"any_partial_state","qualname":"::parser::combinator::any_partial_state","value":"pub fn any_partial_state<P>(P) -> AnyPartialStateParser<P> where P: Parser,\nP::PartialState: 'static","parent":null,"children":[],"decl_id":null,"docs":" Returns a parser where `P::PartialState` is boxed. Useful as a way to avoid writing the type\n since it can get very large after combining a few parsers.","sig":null,"attributes":[{"value":"/ Returns a parser where `P::PartialState` is boxed. Useful as a way to avoid writing the type","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/combinator.rs","byte_start":250768,"byte_end":250864,"line_start":752,"line_end":752,"column_start":1,"column_end":97}},{"value":"/ since it can get very large after combining a few parsers.","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/combinator.rs","byte_start":250865,"byte_end":250927,"line_start":753,"line_end":753,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/combinator.rs","byte_start":250928,"byte_end":250931,"line_start":754,"line_end":754,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/combinator.rs","byte_start":250932,"byte_end":250939,"line_start":755,"line_end":755,"column_start":1,"column_end":8}},{"value":"/ # #[macro_use]","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/combinator.rs","byte_start":250940,"byte_end":250958,"line_start":756,"line_end":756,"column_start":1,"column_end":19}},{"value":"/ # extern crate combine;","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/combinator.rs","byte_start":250959,"byte_end":250986,"line_start":757,"line_end":757,"column_start":1,"column_end":28}},{"value":"/ # use combine::combinator::{AnyPartialState, any_partial_state};","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/combinator.rs","byte_start":250987,"byte_end":251055,"line_start":758,"line_end":758,"column_start":1,"column_end":69}},{"value":"/ # use combine::parser::char::letter;","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/combinator.rs","byte_start":251056,"byte_end":251096,"line_start":759,"line_end":759,"column_start":1,"column_end":41}},{"value":"/ # use combine::*;","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/combinator.rs","byte_start":251097,"byte_end":251118,"line_start":760,"line_end":760,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/combinator.rs","byte_start":251119,"byte_end":251122,"line_start":761,"line_end":761,"column_start":1,"column_end":4}},{"value":"/ # fn main() {","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/combinator.rs","byte_start":251123,"byte_end":251140,"line_start":762,"line_end":762,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/combinator.rs","byte_start":251141,"byte_end":251144,"line_start":763,"line_end":763,"column_start":1,"column_end":4}},{"value":"/ parser! {","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/combinator.rs","byte_start":251145,"byte_end":251158,"line_start":764,"line_end":764,"column_start":1,"column_end":14}},{"value":"/     type PartialState = AnyPartialState;","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/combinator.rs","byte_start":251159,"byte_end":251203,"line_start":765,"line_end":765,"column_start":1,"column_end":45}},{"value":"/     fn example[I]()(I) -> (char, char)","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/combinator.rs","byte_start":251204,"byte_end":251246,"line_start":766,"line_end":766,"column_start":1,"column_end":43}},{"value":"/     where [ I: Stream<Item = char> ]","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/combinator.rs","byte_start":251247,"byte_end":251287,"line_start":767,"line_end":767,"column_start":1,"column_end":41}},{"value":"/     {","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/combinator.rs","byte_start":251288,"byte_end":251297,"line_start":768,"line_end":768,"column_start":1,"column_end":10}},{"value":"/         any_partial_state((letter(), letter()))","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/combinator.rs","byte_start":251298,"byte_end":251349,"line_start":769,"line_end":769,"column_start":1,"column_end":52}},{"value":"/     }","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/combinator.rs","byte_start":251350,"byte_end":251359,"line_start":770,"line_end":770,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/combinator.rs","byte_start":251360,"byte_end":251365,"line_start":771,"line_end":771,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/combinator.rs","byte_start":251366,"byte_end":251369,"line_start":772,"line_end":772,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/combinator.rs","byte_start":251370,"byte_end":251385,"line_start":773,"line_end":773,"column_start":1,"column_end":16}},{"value":"/     example().easy_parse(\"ab\"),","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/combinator.rs","byte_start":251386,"byte_end":251421,"line_start":774,"line_end":774,"column_start":1,"column_end":36}},{"value":"/     Ok((('a', 'b'), \"\"))","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/combinator.rs","byte_start":251422,"byte_end":251450,"line_start":775,"line_end":775,"column_start":1,"column_end":29}},{"value":"/ );","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/combinator.rs","byte_start":251451,"byte_end":251457,"line_start":776,"line_end":776,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/combinator.rs","byte_start":251458,"byte_end":251461,"line_start":777,"line_end":777,"column_start":1,"column_end":4}},{"value":"/ # }","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/combinator.rs","byte_start":251462,"byte_end":251469,"line_start":778,"line_end":778,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/combinator.rs","byte_start":251470,"byte_end":251477,"line_start":779,"line_end":779,"column_start":1,"column_end":8}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/combinator.rs","byte_start":251478,"byte_end":251501,"line_start":780,"line_end":780,"column_start":1,"column_end":24}}]},{"kind":"Struct","id":{"krate":0,"index":6409},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/combinator.rs","byte_start":251703,"byte_end":251722,"line_start":791,"line_end":791,"column_start":12,"column_end":31},"name":"AnySendPartialState","qualname":"::parser::combinator::AnySendPartialState","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/combinator.rs","byte_start":251649,"byte_end":251672,"line_start":789,"line_end":789,"column_start":1,"column_end":24}}]},{"kind":"Struct","id":{"krate":0,"index":1311},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/combinator.rs","byte_start":251797,"byte_end":251822,"line_start":794,"line_end":794,"column_start":12,"column_end":37},"name":"AnySendPartialStateParser","qualname":"::parser::combinator::AnySendPartialStateParser","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/combinator.rs","byte_start":251762,"byte_end":251785,"line_start":793,"line_end":793,"column_start":1,"column_end":24}}]},{"kind":"Function","id":{"krate":0,"index":1323},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/combinator.rs","byte_start":253989,"byte_end":254011,"line_start":877,"line_end":877,"column_start":8,"column_end":30},"name":"any_send_partial_state","qualname":"::parser::combinator::any_send_partial_state","value":"pub fn any_send_partial_state<P>(P) -> AnySendPartialStateParser<P> where\nP: Parser, P::PartialState: Send + 'static","parent":null,"children":[],"decl_id":null,"docs":" Returns a parser where `P::PartialState` is boxed. Useful as a way to avoid writing the type\n since it can get very large after combining a few parsers.","sig":null,"attributes":[{"value":"/ Returns a parser where `P::PartialState` is boxed. Useful as a way to avoid writing the type","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/combinator.rs","byte_start":253230,"byte_end":253326,"line_start":848,"line_end":848,"column_start":1,"column_end":97}},{"value":"/ since it can get very large after combining a few parsers.","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/combinator.rs","byte_start":253327,"byte_end":253389,"line_start":849,"line_end":849,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/combinator.rs","byte_start":253390,"byte_end":253393,"line_start":850,"line_end":850,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/combinator.rs","byte_start":253394,"byte_end":253401,"line_start":851,"line_end":851,"column_start":1,"column_end":8}},{"value":"/ # #[macro_use]","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/combinator.rs","byte_start":253402,"byte_end":253420,"line_start":852,"line_end":852,"column_start":1,"column_end":19}},{"value":"/ # extern crate combine;","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/combinator.rs","byte_start":253421,"byte_end":253448,"line_start":853,"line_end":853,"column_start":1,"column_end":28}},{"value":"/ # use combine::combinator::{AnySendPartialState, any_send_partial_state};","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/combinator.rs","byte_start":253449,"byte_end":253526,"line_start":854,"line_end":854,"column_start":1,"column_end":78}},{"value":"/ # use combine::parser::char::letter;","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/combinator.rs","byte_start":253527,"byte_end":253567,"line_start":855,"line_end":855,"column_start":1,"column_end":41}},{"value":"/ # use combine::*;","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/combinator.rs","byte_start":253568,"byte_end":253589,"line_start":856,"line_end":856,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/combinator.rs","byte_start":253590,"byte_end":253593,"line_start":857,"line_end":857,"column_start":1,"column_end":4}},{"value":"/ # fn main() {","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/combinator.rs","byte_start":253594,"byte_end":253611,"line_start":858,"line_end":858,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/combinator.rs","byte_start":253612,"byte_end":253615,"line_start":859,"line_end":859,"column_start":1,"column_end":4}},{"value":"/ parser! {","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/combinator.rs","byte_start":253616,"byte_end":253629,"line_start":860,"line_end":860,"column_start":1,"column_end":14}},{"value":"/     type PartialState = AnySendPartialState;","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/combinator.rs","byte_start":253630,"byte_end":253678,"line_start":861,"line_end":861,"column_start":1,"column_end":49}},{"value":"/     fn example[I]()(I) -> (char, char)","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/combinator.rs","byte_start":253679,"byte_end":253721,"line_start":862,"line_end":862,"column_start":1,"column_end":43}},{"value":"/     where [ I: Stream<Item = char> ]","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/combinator.rs","byte_start":253722,"byte_end":253762,"line_start":863,"line_end":863,"column_start":1,"column_end":41}},{"value":"/     {","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/combinator.rs","byte_start":253763,"byte_end":253772,"line_start":864,"line_end":864,"column_start":1,"column_end":10}},{"value":"/         any_send_partial_state((letter(), letter()))","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/combinator.rs","byte_start":253773,"byte_end":253829,"line_start":865,"line_end":865,"column_start":1,"column_end":57}},{"value":"/     }","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/combinator.rs","byte_start":253830,"byte_end":253839,"line_start":866,"line_end":866,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/combinator.rs","byte_start":253840,"byte_end":253845,"line_start":867,"line_end":867,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/combinator.rs","byte_start":253846,"byte_end":253849,"line_start":868,"line_end":868,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/combinator.rs","byte_start":253850,"byte_end":253865,"line_start":869,"line_end":869,"column_start":1,"column_end":16}},{"value":"/     example().easy_parse(\"ab\"),","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/combinator.rs","byte_start":253866,"byte_end":253901,"line_start":870,"line_end":870,"column_start":1,"column_end":36}},{"value":"/     Ok((('a', 'b'), \"\"))","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/combinator.rs","byte_start":253902,"byte_end":253930,"line_start":871,"line_end":871,"column_start":1,"column_end":29}},{"value":"/ );","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/combinator.rs","byte_start":253931,"byte_end":253937,"line_start":872,"line_end":872,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/combinator.rs","byte_start":253938,"byte_end":253941,"line_start":873,"line_end":873,"column_start":1,"column_end":4}},{"value":"/ # }","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/combinator.rs","byte_start":253942,"byte_end":253949,"line_start":874,"line_end":874,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/combinator.rs","byte_start":253950,"byte_end":253957,"line_start":875,"line_end":875,"column_start":1,"column_end":8}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/combinator.rs","byte_start":253958,"byte_end":253981,"line_start":876,"line_end":876,"column_start":1,"column_end":24}}]},{"kind":"Struct","id":{"krate":0,"index":6419},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/combinator.rs","byte_start":254183,"byte_end":254187,"line_start":886,"line_end":886,"column_start":12,"column_end":16},"name":"Lazy","qualname":"::parser::combinator::Lazy","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1341},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/combinator.rs","byte_start":256042,"byte_end":256046,"line_start":952,"line_end":952,"column_start":8,"column_end":12},"name":"lazy","qualname":"::parser::combinator::lazy","value":"pub fn lazy<P, R>(P) -> Lazy<P> where P: FnMut() -> R, R: Parser","parent":null,"children":[],"decl_id":null,"docs":" Constructs the parser lazily on each `parse_*` call. Can be used to effectively reduce the\n size of deeply nested parsers as only the function producing the parser is stored.","sig":null,"attributes":[{"value":"/ Constructs the parser lazily on each `parse_*` call. Can be used to effectively reduce the","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/combinator.rs","byte_start":255586,"byte_end":255680,"line_start":943,"line_end":943,"column_start":1,"column_end":95}},{"value":"/ size of deeply nested parsers as only the function producing the parser is stored.","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/combinator.rs","byte_start":255681,"byte_end":255767,"line_start":944,"line_end":944,"column_start":1,"column_end":87}},{"value":"/","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/combinator.rs","byte_start":255768,"byte_end":255771,"line_start":945,"line_end":945,"column_start":1,"column_end":4}},{"value":"/ NOTE: Expects that the parser returned is always the same one, if that is not the case the","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/combinator.rs","byte_start":255772,"byte_end":255866,"line_start":946,"line_end":946,"column_start":1,"column_end":95}},{"value":"/ reported error may be wrong. If different parsers may be returned, use the [`factory`][] parser","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/combinator.rs","byte_start":255867,"byte_end":255966,"line_start":947,"line_end":947,"column_start":1,"column_end":100}},{"value":"/ instead.","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/combinator.rs","byte_start":255967,"byte_end":255979,"line_start":948,"line_end":948,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/combinator.rs","byte_start":255980,"byte_end":255983,"line_start":949,"line_end":949,"column_start":1,"column_end":4}},{"value":"/ [`factory`]: fn.factory.html","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/combinator.rs","byte_start":255984,"byte_end":256016,"line_start":950,"line_end":950,"column_start":1,"column_end":33}},{"value":"inline(always)","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/combinator.rs","byte_start":256017,"byte_end":256034,"line_start":951,"line_end":951,"column_start":1,"column_end":18}}]},{"kind":"Struct","id":{"krate":0,"index":6430},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/combinator.rs","byte_start":256163,"byte_end":256170,"line_start":961,"line_end":961,"column_start":12,"column_end":19},"name":"Factory","qualname":"::parser::combinator::Factory","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1360},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/combinator.rs","byte_start":258212,"byte_end":258219,"line_start":1034,"line_end":1034,"column_start":8,"column_end":15},"name":"factory","qualname":"::parser::combinator::factory","value":"pub fn factory<P, R>(P) -> Factory<P, R> where P: FnMut() -> R, R: Parser","parent":null,"children":[],"decl_id":null,"docs":" Constructs the parser lazily on each `parse_*` call. This is similar to [`lazy`][] but it\n allows different parsers to be returned on each call to `p` while still reporting the correct\n errors.","sig":null,"attributes":[{"value":"/ Constructs the parser lazily on each `parse_*` call. This is similar to [`lazy`][] but it","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/combinator.rs","byte_start":257492,"byte_end":257585,"line_start":1017,"line_end":1017,"column_start":1,"column_end":94}},{"value":"/ allows different parsers to be returned on each call to `p` while still reporting the correct","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/combinator.rs","byte_start":257586,"byte_end":257683,"line_start":1018,"line_end":1018,"column_start":1,"column_end":98}},{"value":"/ errors.","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/combinator.rs","byte_start":257684,"byte_end":257695,"line_start":1019,"line_end":1019,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/combinator.rs","byte_start":257696,"byte_end":257699,"line_start":1020,"line_end":1020,"column_start":1,"column_end":4}},{"value":"/ [`lazy`]: fn.lazy.html","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/combinator.rs","byte_start":257700,"byte_end":257726,"line_start":1021,"line_end":1021,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/combinator.rs","byte_start":257727,"byte_end":257730,"line_start":1022,"line_end":1022,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/combinator.rs","byte_start":257731,"byte_end":257738,"line_start":1023,"line_end":1023,"column_start":1,"column_end":8}},{"value":"/ # use combine::*;","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/combinator.rs","byte_start":257739,"byte_end":257760,"line_start":1024,"line_end":1024,"column_start":1,"column_end":22}},{"value":"/ # use combine::parser::char::{digit, letter};","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/combinator.rs","byte_start":257761,"byte_end":257810,"line_start":1025,"line_end":1025,"column_start":1,"column_end":50}},{"value":"/ # use combine::parser::combinator::{FnOpaque, opaque, factory};","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/combinator.rs","byte_start":257811,"byte_end":257878,"line_start":1026,"line_end":1026,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/combinator.rs","byte_start":257879,"byte_end":257882,"line_start":1027,"line_end":1027,"column_start":1,"column_end":4}},{"value":"/ let mut parsers: Vec<FnOpaque<_, _>> = vec![opaque(|f| f(&mut digit())), opaque(|f| f(&mut letter()))];","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/combinator.rs","byte_start":257883,"byte_end":257990,"line_start":1028,"line_end":1028,"column_start":1,"column_end":108}},{"value":"/ let mut iter = parsers.into_iter().cycle();","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/combinator.rs","byte_start":257991,"byte_end":258038,"line_start":1029,"line_end":1029,"column_start":1,"column_end":48}},{"value":"/ let mut parser = many(factory(move || iter.next().unwrap()));","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/combinator.rs","byte_start":258039,"byte_end":258104,"line_start":1030,"line_end":1030,"column_start":1,"column_end":66}},{"value":"/ assert_eq!(parser.parse(\"1a2b3cd\"), Ok((\"1a2b3c\".to_string(), \"d\")));","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/combinator.rs","byte_start":258105,"byte_end":258178,"line_start":1031,"line_end":1031,"column_start":1,"column_end":74}},{"value":"/ ```","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/combinator.rs","byte_start":258179,"byte_end":258186,"line_start":1032,"line_end":1032,"column_start":1,"column_end":8}},{"value":"inline(always)","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/combinator.rs","byte_start":258187,"byte_end":258204,"line_start":1033,"line_end":1033,"column_start":1,"column_end":18}}]},{"kind":"Trait","id":{"krate":0,"index":1364},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/combinator.rs","byte_start":258346,"byte_end":258352,"line_start":1043,"line_end":1043,"column_start":15,"column_end":21},"name":"Sealed","qualname":"::parser::combinator::internal::Sealed","value":"Sealed","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":1366},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/combinator.rs","byte_start":258398,"byte_end":258405,"line_start":1048,"line_end":1048,"column_start":11,"column_end":18},"name":"StrLike","qualname":"::parser::combinator::StrLike","value":"StrLike: Sealed","parent":null,"children":[{"krate":0,"index":1367}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1367},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/combinator.rs","byte_start":258423,"byte_end":258432,"line_start":1049,"line_end":1049,"column_start":8,"column_end":17},"name":"from_utf8","qualname":"::parser::combinator::StrLike::from_utf8","value":"pub fn from_utf8(&Self) -> Result<&str, ()>","parent":{"krate":0,"index":1366},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6445},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/combinator.rs","byte_start":259392,"byte_end":259399,"line_start":1099,"line_end":1099,"column_start":12,"column_end":19},"name":"FromStr","qualname":"::parser::combinator::FromStr","value":"FromStr { parser }","parent":null,"children":[{"krate":0,"index":6448},{"krate":0,"index":6449}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/lib.rs","byte_start":20591,"byte_end":20621,"line_start":574,"line_end":574,"column_start":9,"column_end":39}}]},{"kind":"Field","id":{"krate":0,"index":6448},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/combinator.rs","byte_start":260648,"byte_end":260654,"line_start":1134,"line_end":1134,"column_start":23,"column_end":29},"name":"parser","qualname":"::parser::combinator::FromStr::parser","value":"P","parent":{"krate":0,"index":6445},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":6466},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/combinator.rs","byte_start":260633,"byte_end":260641,"line_start":1134,"line_end":1134,"column_start":8,"column_end":16},"name":"from_str","qualname":"::parser::combinator::from_str","value":"pub fn from_str<O, P>(P) -> FromStr<O, P> where\n<P::Input as\ncrate::stream::StreamOnce>::Error: crate::error::ParseError<<P::Input as\n                                                            crate::stream::StreamOnce>::Item,\n                                                            <P::Input as\n                                                            crate::stream::StreamOnce>::Range,\n                                                            <P::Input as\n                                                            crate::stream::StreamOnce>::Position>,\nP: Parser, P::Output: StrLike, O: str::FromStr, O::Err: fmt::Display","parent":null,"children":[],"decl_id":null,"docs":" Takes a parser that outputs a string like value (`&str`, `String`, `&[u8]` or `Vec<u8>`) and parses it\n using `std::str::FromStr`. Errors if the output of `parser` is not UTF-8 or if\n `FromStr::from_str` returns an error.","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/lib.rs","byte_start":23684,"byte_end":23701,"line_start":648,"line_end":648,"column_start":9,"column_end":26}}]},{"kind":"Struct","id":{"krate":0,"index":6474},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/combinator.rs","byte_start":261043,"byte_end":261049,"line_start":1151,"line_end":1151,"column_start":12,"column_end":18},"name":"Opaque","qualname":"::parser::combinator::Opaque","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":1410},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/combinator.rs","byte_start":262798,"byte_end":262806,"line_start":1210,"line_end":1210,"column_start":10,"column_end":18},"name":"FnOpaque","qualname":"::parser::combinator::FnOpaque","value":"Opaque<fn(:\n              &mut FnMut(&mut Parser<Input = I, Output = I, PartialState = I>)\n                   -> ()), I, O, S>","parent":null,"children":[],"decl_id":null,"docs":" Alias over `Opaque` where the function can be a plain function pointer (does not need to\n capture any values)\n","sig":null,"attributes":[{"value":"/ Alias over `Opaque` where the function can be a plain function pointer (does not need to","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/combinator.rs","byte_start":262672,"byte_end":262764,"line_start":1208,"line_end":1208,"column_start":1,"column_end":93}},{"value":"/ capture any values)","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/combinator.rs","byte_start":262765,"byte_end":262788,"line_start":1209,"line_end":1209,"column_start":1,"column_end":24}}]},{"kind":"Function","id":{"krate":0,"index":1414},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/combinator.rs","byte_start":264640,"byte_end":264646,"line_start":1265,"line_end":1265,"column_start":8,"column_end":14},"name":"opaque","qualname":"::parser::combinator::opaque","value":"pub fn opaque<F, I, O, S>(F) -> Opaque<F, I, O, S> where I: Stream,\nS: Default,\nF: FnMut(&mut FnMut(&mut Parser<Input = I, Output = I, PartialState = I>) ->\n              ()) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Creates a parser from a function which takes a function that are given the actual parser.\n Though convoluted this makes it possible to hide the concrete parser type without `Box` or\n losing the full information about the parser as is the case of [`parser`][].","sig":null,"attributes":[{"value":"/ Creates a parser from a function which takes a function that are given the actual parser.","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/combinator.rs","byte_start":262915,"byte_end":263008,"line_start":1213,"line_end":1213,"column_start":1,"column_end":94}},{"value":"/ Though convoluted this makes it possible to hide the concrete parser type without `Box` or","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/combinator.rs","byte_start":263009,"byte_end":263103,"line_start":1214,"line_end":1214,"column_start":1,"column_end":95}},{"value":"/ losing the full information about the parser as is the case of [`parser`][].","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/combinator.rs","byte_start":263104,"byte_end":263184,"line_start":1215,"line_end":1215,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/combinator.rs","byte_start":263185,"byte_end":263188,"line_start":1216,"line_end":1216,"column_start":1,"column_end":4}},{"value":"/ Since this hides the type this can also be useful for writing mutually recursive `impl Parser`","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/combinator.rs","byte_start":263189,"byte_end":263287,"line_start":1217,"line_end":1217,"column_start":1,"column_end":99}},{"value":"/ parsers to break the otherwise arbitrarily large type that rustc creates internally.","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/combinator.rs","byte_start":263288,"byte_end":263376,"line_start":1218,"line_end":1218,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/combinator.rs","byte_start":263377,"byte_end":263380,"line_start":1219,"line_end":1219,"column_start":1,"column_end":4}},{"value":"/ If you need a more general version (that does not need trait objects) try the [`parser!`][]","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/combinator.rs","byte_start":263381,"byte_end":263476,"line_start":1220,"line_end":1220,"column_start":1,"column_end":96}},{"value":"/ macro.","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/combinator.rs","byte_start":263477,"byte_end":263487,"line_start":1221,"line_end":1221,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/combinator.rs","byte_start":263488,"byte_end":263491,"line_start":1222,"line_end":1222,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/combinator.rs","byte_start":263492,"byte_end":263499,"line_start":1223,"line_end":1223,"column_start":1,"column_end":8}},{"value":"/ # #[macro_use]","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/combinator.rs","byte_start":263500,"byte_end":263518,"line_start":1224,"line_end":1224,"column_start":1,"column_end":19}},{"value":"/ # extern crate combine;","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/combinator.rs","byte_start":263519,"byte_end":263546,"line_start":1225,"line_end":1225,"column_start":1,"column_end":28}},{"value":"/ # use combine::combinator::{FnOpaque, no_partial};","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/combinator.rs","byte_start":263547,"byte_end":263601,"line_start":1226,"line_end":1226,"column_start":1,"column_end":55}},{"value":"/ # use combine::parser::char::{char, digit};","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/combinator.rs","byte_start":263602,"byte_end":263649,"line_start":1227,"line_end":1227,"column_start":1,"column_end":48}},{"value":"/ # use combine::*;","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/combinator.rs","byte_start":263650,"byte_end":263671,"line_start":1228,"line_end":1228,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/combinator.rs","byte_start":263672,"byte_end":263675,"line_start":1229,"line_end":1229,"column_start":1,"column_end":4}},{"value":"/ # fn main() {","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/combinator.rs","byte_start":263676,"byte_end":263693,"line_start":1230,"line_end":1230,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/combinator.rs","byte_start":263694,"byte_end":263697,"line_start":1231,"line_end":1231,"column_start":1,"column_end":4}},{"value":"/ #[derive(PartialEq, Debug)]","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/combinator.rs","byte_start":263698,"byte_end":263729,"line_start":1232,"line_end":1232,"column_start":1,"column_end":32}},{"value":"/ enum Expr {","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/combinator.rs","byte_start":263730,"byte_end":263745,"line_start":1233,"line_end":1233,"column_start":1,"column_end":16}},{"value":"/     Number(i64),","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/combinator.rs","byte_start":263746,"byte_end":263766,"line_start":1234,"line_end":1234,"column_start":1,"column_end":21}},{"value":"/     Pair(Box<Expr>, Box<Expr>),","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/combinator.rs","byte_start":263767,"byte_end":263802,"line_start":1235,"line_end":1235,"column_start":1,"column_end":36}},{"value":"/ }","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/combinator.rs","byte_start":263803,"byte_end":263808,"line_start":1236,"line_end":1236,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/combinator.rs","byte_start":263809,"byte_end":263812,"line_start":1237,"line_end":1237,"column_start":1,"column_end":4}},{"value":"/ fn expr<I>() -> FnOpaque<I, Expr>","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/combinator.rs","byte_start":263813,"byte_end":263850,"line_start":1238,"line_end":1238,"column_start":1,"column_end":38}},{"value":"/ where","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/combinator.rs","byte_start":263851,"byte_end":263860,"line_start":1239,"line_end":1239,"column_start":1,"column_end":10}},{"value":"/     I: Stream<Item = char>,","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/combinator.rs","byte_start":263861,"byte_end":263892,"line_start":1240,"line_end":1240,"column_start":1,"column_end":32}},{"value":"/     I::Error: ParseError<I::Item, I::Range, I::Position>,","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/combinator.rs","byte_start":263893,"byte_end":263954,"line_start":1241,"line_end":1241,"column_start":1,"column_end":62}},{"value":"/ {","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/combinator.rs","byte_start":263955,"byte_end":263960,"line_start":1242,"line_end":1242,"column_start":1,"column_end":6}},{"value":"/     opaque!(","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/combinator.rs","byte_start":263961,"byte_end":263977,"line_start":1243,"line_end":1243,"column_start":1,"column_end":17}},{"value":"/         // `no_partial` disables partial parsing and replaces the partial state with `()`,","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/combinator.rs","byte_start":263978,"byte_end":264072,"line_start":1244,"line_end":1244,"column_start":1,"column_end":95}},{"value":"/         // letting us avoid naming that type","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/combinator.rs","byte_start":264073,"byte_end":264121,"line_start":1245,"line_end":1245,"column_start":1,"column_end":49}},{"value":"/         no_partial(choice((","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/combinator.rs","byte_start":264122,"byte_end":264153,"line_start":1246,"line_end":1246,"column_start":1,"column_end":32}},{"value":"/             from_str(many1::<String, _>(digit()))","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/combinator.rs","byte_start":264154,"byte_end":264207,"line_start":1247,"line_end":1247,"column_start":1,"column_end":54}},{"value":"/                 .map(Expr::Number),","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/combinator.rs","byte_start":264208,"byte_end":264247,"line_start":1248,"line_end":1248,"column_start":1,"column_end":40}},{"value":"/             (char('('), expr(), char(','), expr(), char(')'))","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/combinator.rs","byte_start":264248,"byte_end":264313,"line_start":1249,"line_end":1249,"column_start":1,"column_end":66}},{"value":"/                 .map(|(_, l, _, r, _)| Expr::Pair(Box::new(l), Box::new(r)))","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/combinator.rs","byte_start":264314,"byte_end":264394,"line_start":1250,"line_end":1250,"column_start":1,"column_end":81}},{"value":"/         ))),","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/combinator.rs","byte_start":264395,"byte_end":264411,"line_start":1251,"line_end":1251,"column_start":1,"column_end":17}},{"value":"/     )","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/combinator.rs","byte_start":264412,"byte_end":264421,"line_start":1252,"line_end":1252,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/combinator.rs","byte_start":264422,"byte_end":264427,"line_start":1253,"line_end":1253,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/combinator.rs","byte_start":264428,"byte_end":264431,"line_start":1254,"line_end":1254,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/combinator.rs","byte_start":264432,"byte_end":264447,"line_start":1255,"line_end":1255,"column_start":1,"column_end":16}},{"value":"/     expr().easy_parse(\"123\"),","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/combinator.rs","byte_start":264448,"byte_end":264481,"line_start":1256,"line_end":1256,"column_start":1,"column_end":34}},{"value":"/     Ok((Expr::Number(123), \"\"))","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/combinator.rs","byte_start":264482,"byte_end":264517,"line_start":1257,"line_end":1257,"column_start":1,"column_end":36}},{"value":"/ );","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/combinator.rs","byte_start":264518,"byte_end":264524,"line_start":1258,"line_end":1258,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/combinator.rs","byte_start":264525,"byte_end":264528,"line_start":1259,"line_end":1259,"column_start":1,"column_end":4}},{"value":"/ # }","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/combinator.rs","byte_start":264529,"byte_end":264536,"line_start":1260,"line_end":1260,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/combinator.rs","byte_start":264537,"byte_end":264544,"line_start":1261,"line_end":1261,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/combinator.rs","byte_start":264545,"byte_end":264548,"line_start":1262,"line_end":1262,"column_start":1,"column_end":4}},{"value":"/ [`parser`]: ../function/fn.parser.html","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/combinator.rs","byte_start":264549,"byte_end":264591,"line_start":1263,"line_end":1263,"column_start":1,"column_end":43}},{"value":"/ [`parser!`]: ../../macro.parser.html","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/combinator.rs","byte_start":264592,"byte_end":264632,"line_start":1264,"line_end":1264,"column_start":1,"column_end":41}}]},{"kind":"Mod","id":{"krate":0,"index":1420},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/error.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"error","qualname":"::parser::error","value":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/error.rs","parent":null,"children":[{"krate":0,"index":1421},{"krate":0,"index":8324},{"krate":0,"index":1422},{"krate":0,"index":1423},{"krate":0,"index":1424},{"krate":0,"index":1425},{"krate":0,"index":1426},{"krate":0,"index":1427},{"krate":0,"index":1428},{"krate":0,"index":1429},{"krate":0,"index":1430},{"krate":0,"index":1431},{"krate":0,"index":1432},{"krate":0,"index":1433},{"krate":0,"index":6495},{"krate":0,"index":6501},{"krate":0,"index":1434},{"krate":0,"index":1442},{"krate":0,"index":1445},{"krate":0,"index":6505},{"krate":0,"index":6510},{"krate":0,"index":1449},{"krate":0,"index":1458},{"krate":0,"index":6517},{"krate":0,"index":6522},{"krate":0,"index":1460},{"krate":0,"index":1469},{"krate":0,"index":6529},{"krate":0,"index":6533},{"krate":0,"index":1471},{"krate":0,"index":1481}],"decl_id":null,"docs":" Parsers which cause errors or modifies the returned error on parse failure.\n","sig":null,"attributes":[{"value":"/ Parsers which cause errors or modifies the returned error on parse failure.","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/error.rs","byte_start":266512,"byte_end":266591,"line_start":1,"line_end":1,"column_start":1,"column_end":80}}]},{"kind":"Struct","id":{"krate":0,"index":6495},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/error.rs","byte_start":266806,"byte_end":266816,"line_start":12,"line_end":12,"column_start":12,"column_end":22},"name":"Unexpected","qualname":"::parser::error::Unexpected","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1442},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/error.rs","byte_start":267921,"byte_end":267931,"line_start":53,"line_end":53,"column_start":8,"column_end":18},"name":"unexpected","qualname":"::parser::error::unexpected","value":"pub fn unexpected<I, S>(S) -> Unexpected<I, ()> where I: Stream,\nS: Into<Info<I::Item, I::Range>>","parent":null,"children":[],"decl_id":null,"docs":" Always fails with `message` as an unexpected error.\n Never consumes any input.","sig":null,"attributes":[{"value":"/ Always fails with `message` as an unexpected error.","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/error.rs","byte_start":267378,"byte_end":267433,"line_start":30,"line_end":30,"column_start":1,"column_end":56}},{"value":"/ Never consumes any input.","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/error.rs","byte_start":267434,"byte_end":267463,"line_start":31,"line_end":31,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/error.rs","byte_start":267464,"byte_end":267467,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ Has `()` the output type","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/error.rs","byte_start":267468,"byte_end":267496,"line_start":33,"line_end":33,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/error.rs","byte_start":267497,"byte_end":267500,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/error.rs","byte_start":267501,"byte_end":267508,"line_start":35,"line_end":35,"column_start":1,"column_end":8}},{"value":"/ # extern crate combine;","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/error.rs","byte_start":267509,"byte_end":267536,"line_start":36,"line_end":36,"column_start":1,"column_end":28}},{"value":"/ # use combine::*;","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/error.rs","byte_start":267537,"byte_end":267558,"line_start":37,"line_end":37,"column_start":1,"column_end":22}},{"value":"/ # use combine::error::StreamError;","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/error.rs","byte_start":267559,"byte_end":267597,"line_start":38,"line_end":38,"column_start":1,"column_end":39}},{"value":"/ # fn main() {","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/error.rs","byte_start":267598,"byte_end":267615,"line_start":39,"line_end":39,"column_start":1,"column_end":18}},{"value":"/ let result = unexpected(\"token\")","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/error.rs","byte_start":267616,"byte_end":267652,"line_start":40,"line_end":40,"column_start":1,"column_end":37}},{"value":"/     .easy_parse(\"a\");","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/error.rs","byte_start":267653,"byte_end":267678,"line_start":41,"line_end":41,"column_start":1,"column_end":26}},{"value":"/ assert!(result.is_err());","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/error.rs","byte_start":267679,"byte_end":267708,"line_start":42,"line_end":42,"column_start":1,"column_end":30}},{"value":"/ assert!(","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/error.rs","byte_start":267709,"byte_end":267721,"line_start":43,"line_end":43,"column_start":1,"column_end":13}},{"value":"/     result.err()","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/error.rs","byte_start":267722,"byte_end":267742,"line_start":44,"line_end":44,"column_start":1,"column_end":21}},{"value":"/         .unwrap()","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/error.rs","byte_start":267743,"byte_end":267764,"line_start":45,"line_end":45,"column_start":1,"column_end":22}},{"value":"/         .errors","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/error.rs","byte_start":267765,"byte_end":267784,"line_start":46,"line_end":46,"column_start":1,"column_end":20}},{"value":"/         .iter()","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/error.rs","byte_start":267785,"byte_end":267804,"line_start":47,"line_end":47,"column_start":1,"column_end":20}},{"value":"/         .any(|m| *m == StreamError::unexpected(\"token\".into()))","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/error.rs","byte_start":267805,"byte_end":267872,"line_start":48,"line_end":48,"column_start":1,"column_end":68}},{"value":"/ );","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/error.rs","byte_start":267873,"byte_end":267879,"line_start":49,"line_end":49,"column_start":1,"column_end":7}},{"value":"/ # }","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/error.rs","byte_start":267880,"byte_end":267887,"line_start":50,"line_end":50,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/error.rs","byte_start":267888,"byte_end":267895,"line_start":51,"line_end":51,"column_start":1,"column_end":8}},{"value":"inline(always)","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/error.rs","byte_start":267896,"byte_end":267913,"line_start":52,"line_end":52,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":1445},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/error.rs","byte_start":268819,"byte_end":268833,"line_start":86,"line_end":86,"column_start":8,"column_end":22},"name":"unexpected_any","qualname":"::parser::error::unexpected_any","value":"pub fn unexpected_any<I, S, T>(S) -> Unexpected<I, T> where I: Stream,\nS: Into<Info<I::Item, I::Range>>","parent":null,"children":[],"decl_id":null,"docs":" Always fails with `message` as an unexpected error.\n Never consumes any input.","sig":null,"attributes":[{"value":"/ Always fails with `message` as an unexpected error.","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/error.rs","byte_start":268063,"byte_end":268118,"line_start":61,"line_end":61,"column_start":1,"column_end":56}},{"value":"/ Never consumes any input.","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/error.rs","byte_start":268119,"byte_end":268148,"line_start":62,"line_end":62,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/error.rs","byte_start":268149,"byte_end":268152,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ May have anything as the output type but must be used such that the output type can inferred.","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/error.rs","byte_start":268153,"byte_end":268250,"line_start":64,"line_end":64,"column_start":1,"column_end":98}},{"value":"/ The `unexpected` parser can be used if the output type does not matter","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/error.rs","byte_start":268251,"byte_end":268325,"line_start":65,"line_end":65,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/error.rs","byte_start":268326,"byte_end":268329,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/error.rs","byte_start":268330,"byte_end":268337,"line_start":67,"line_end":67,"column_start":1,"column_end":8}},{"value":"/ # extern crate combine;","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/error.rs","byte_start":268338,"byte_end":268365,"line_start":68,"line_end":68,"column_start":1,"column_end":28}},{"value":"/ # use combine::*;","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/error.rs","byte_start":268366,"byte_end":268387,"line_start":69,"line_end":69,"column_start":1,"column_end":22}},{"value":"/ # use combine::parser::error::unexpected_any;","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/error.rs","byte_start":268388,"byte_end":268437,"line_start":70,"line_end":70,"column_start":1,"column_end":50}},{"value":"/ # use combine::error::StreamError;","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/error.rs","byte_start":268438,"byte_end":268476,"line_start":71,"line_end":71,"column_start":1,"column_end":39}},{"value":"/ # fn main() {","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/error.rs","byte_start":268477,"byte_end":268494,"line_start":72,"line_end":72,"column_start":1,"column_end":18}},{"value":"/ let result = token('b').or(unexpected_any(\"token\"))","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/error.rs","byte_start":268495,"byte_end":268550,"line_start":73,"line_end":73,"column_start":1,"column_end":56}},{"value":"/     .easy_parse(\"a\");","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/error.rs","byte_start":268551,"byte_end":268576,"line_start":74,"line_end":74,"column_start":1,"column_end":26}},{"value":"/ assert!(result.is_err());","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/error.rs","byte_start":268577,"byte_end":268606,"line_start":75,"line_end":75,"column_start":1,"column_end":30}},{"value":"/ assert!(","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/error.rs","byte_start":268607,"byte_end":268619,"line_start":76,"line_end":76,"column_start":1,"column_end":13}},{"value":"/     result.err()","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/error.rs","byte_start":268620,"byte_end":268640,"line_start":77,"line_end":77,"column_start":1,"column_end":21}},{"value":"/         .unwrap()","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/error.rs","byte_start":268641,"byte_end":268662,"line_start":78,"line_end":78,"column_start":1,"column_end":22}},{"value":"/         .errors","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/error.rs","byte_start":268663,"byte_end":268682,"line_start":79,"line_end":79,"column_start":1,"column_end":20}},{"value":"/         .iter()","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/error.rs","byte_start":268683,"byte_end":268702,"line_start":80,"line_end":80,"column_start":1,"column_end":20}},{"value":"/         .any(|m| *m == StreamError::unexpected(\"token\".into()))","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/error.rs","byte_start":268703,"byte_end":268770,"line_start":81,"line_end":81,"column_start":1,"column_end":68}},{"value":"/ );","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/error.rs","byte_start":268771,"byte_end":268777,"line_start":82,"line_end":82,"column_start":1,"column_end":7}},{"value":"/ # }","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/error.rs","byte_start":268778,"byte_end":268785,"line_start":83,"line_end":83,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/error.rs","byte_start":268786,"byte_end":268793,"line_start":84,"line_end":84,"column_start":1,"column_end":8}},{"value":"inline(always)","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/error.rs","byte_start":268794,"byte_end":268811,"line_start":85,"line_end":85,"column_start":1,"column_end":18}}]},{"kind":"Struct","id":{"krate":0,"index":6505},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/error.rs","byte_start":269011,"byte_end":269018,"line_start":95,"line_end":95,"column_start":12,"column_end":19},"name":"Message","qualname":"::parser::error::Message","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1458},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/error.rs","byte_start":270429,"byte_end":270436,"line_start":148,"line_end":148,"column_start":8,"column_end":15},"name":"message","qualname":"::parser::error::message","value":"pub fn message<P>(P,\n                  Info<<P::Input as StreamOnce>::Item,\n                       <P::Input as StreamOnce>::Range>) -> Message<P> where\nP: Parser","parent":null,"children":[],"decl_id":null,"docs":" Equivalent to [`p1.message(msg)`].","sig":null,"attributes":[{"value":"/ Equivalent to [`p1.message(msg)`].","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/error.rs","byte_start":270293,"byte_end":270331,"line_start":144,"line_end":144,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/error.rs","byte_start":270332,"byte_end":270335,"line_start":145,"line_end":145,"column_start":1,"column_end":4}},{"value":"/ [`p1.message(msg)`]: ../parser/trait.Parser.html#method.message","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/error.rs","byte_start":270336,"byte_end":270403,"line_start":146,"line_end":146,"column_start":1,"column_end":68}},{"value":"inline(always)","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/error.rs","byte_start":270404,"byte_end":270421,"line_start":147,"line_end":147,"column_start":1,"column_end":18}}]},{"kind":"Struct","id":{"krate":0,"index":6517},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/error.rs","byte_start":270621,"byte_end":270629,"line_start":159,"line_end":159,"column_start":12,"column_end":20},"name":"Expected","qualname":"::parser::error::Expected","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1469},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/error.rs","byte_start":271653,"byte_end":271661,"line_start":200,"line_end":200,"column_start":8,"column_end":16},"name":"expected","qualname":"::parser::error::expected","value":"pub fn expected<P>(P,\n                   Info<<P::Input as StreamOnce>::Item,\n                        <P::Input as StreamOnce>::Range>) -> Expected<P> where\nP: Parser","parent":null,"children":[],"decl_id":null,"docs":" Equivalent to [`p.expected(info)`].","sig":null,"attributes":[{"value":"/ Equivalent to [`p.expected(info)`].","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/error.rs","byte_start":271514,"byte_end":271553,"line_start":196,"line_end":196,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/error.rs","byte_start":271554,"byte_end":271557,"line_start":197,"line_end":197,"column_start":1,"column_end":4}},{"value":"/ [`p.expected(info)`]: ../parser/trait.Parser.html#method.expected","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/error.rs","byte_start":271558,"byte_end":271627,"line_start":198,"line_end":198,"column_start":1,"column_end":70}},{"value":"inline(always)","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/error.rs","byte_start":271628,"byte_end":271645,"line_start":199,"line_end":199,"column_start":1,"column_end":18}}]},{"kind":"Struct","id":{"krate":0,"index":6529},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/error.rs","byte_start":271850,"byte_end":271856,"line_start":211,"line_end":211,"column_start":12,"column_end":18},"name":"Silent","qualname":"::parser::error::Silent","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1481},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/error.rs","byte_start":272821,"byte_end":272827,"line_start":254,"line_end":254,"column_start":8,"column_end":14},"name":"silent","qualname":"::parser::error::silent","value":"pub fn silent<P>(P) -> Silent<P> where P: Parser","parent":null,"children":[],"decl_id":null,"docs":" Equivalent to [`p.silent()`].","sig":null,"attributes":[{"value":"/ Equivalent to [`p.silent()`].","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/error.rs","byte_start":272703,"byte_end":272736,"line_start":250,"line_end":250,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/error.rs","byte_start":272737,"byte_end":272740,"line_start":251,"line_end":251,"column_start":1,"column_end":4}},{"value":"/ [`p.silent()`]: ../trait.Parser.html#method.silent","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/error.rs","byte_start":272741,"byte_end":272795,"line_start":252,"line_end":252,"column_start":1,"column_end":55}},{"value":"inline(always)","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/error.rs","byte_start":272796,"byte_end":272813,"line_start":253,"line_end":253,"column_start":1,"column_end":18}}]},{"kind":"Mod","id":{"krate":0,"index":1483},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/function.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"function","qualname":"::parser::function","value":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/function.rs","parent":null,"children":[{"krate":0,"index":1484},{"krate":0,"index":8344},{"krate":0,"index":1485},{"krate":0,"index":1486},{"krate":0,"index":1487},{"krate":0,"index":1488},{"krate":0,"index":1489},{"krate":0,"index":1490},{"krate":0,"index":6539},{"krate":0,"index":6549},{"krate":0,"index":6545},{"krate":0,"index":1498},{"krate":0,"index":1502},{"krate":0,"index":1510},{"krate":0,"index":6552},{"krate":0,"index":6558},{"krate":0,"index":1517},{"krate":0,"index":1522},{"krate":0,"index":1530}],"decl_id":null,"docs":" Parsers constructor from regular functions\n","sig":null,"attributes":[{"value":"/ Parsers constructor from regular functions","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/function.rs","byte_start":273149,"byte_end":273195,"line_start":1,"line_end":1,"column_start":1,"column_end":47}}]},{"kind":"Struct","id":{"krate":0,"index":6539},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/function.rs","byte_start":273613,"byte_end":273621,"line_start":21,"line_end":21,"column_start":12,"column_end":20},"name":"FnParser","qualname":"::parser::function::FnParser","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1498},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/function.rs","byte_start":274870,"byte_end":274876,"line_start":60,"line_end":60,"column_start":8,"column_end":14},"name":"parser","qualname":"::parser::function::parser","value":"pub fn parser<I, O, F>(F) -> FnParser<I, F> where I: Stream, F: FnMut(&mut I)\n-> ParseResult<O, I>","parent":null,"children":[],"decl_id":null,"docs":" Wraps a function, turning it into a parser.","sig":null,"attributes":[{"value":"/ Wraps a function, turning it into a parser.","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/function.rs","byte_start":273658,"byte_end":273705,"line_start":23,"line_end":23,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/function.rs","byte_start":273706,"byte_end":273709,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ Mainly needed to turn closures into parsers as function types can be casted to function pointers","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/function.rs","byte_start":273710,"byte_end":273810,"line_start":25,"line_end":25,"column_start":1,"column_end":101}},{"value":"/ to make them usable as a parser.","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/function.rs","byte_start":273811,"byte_end":273847,"line_start":26,"line_end":26,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/function.rs","byte_start":273848,"byte_end":273851,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/function.rs","byte_start":273852,"byte_end":273859,"line_start":28,"line_end":28,"column_start":1,"column_end":8}},{"value":"/ extern crate combine;","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/function.rs","byte_start":273860,"byte_end":273885,"line_start":29,"line_end":29,"column_start":1,"column_end":26}},{"value":"/ # use combine::*;","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/function.rs","byte_start":273886,"byte_end":273907,"line_start":30,"line_end":30,"column_start":1,"column_end":22}},{"value":"/ # use combine::parser::char::digit;","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/function.rs","byte_start":273908,"byte_end":273947,"line_start":31,"line_end":31,"column_start":1,"column_end":40}},{"value":"/ # use combine::error::{Consumed, StreamError};","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/function.rs","byte_start":273948,"byte_end":273998,"line_start":32,"line_end":32,"column_start":1,"column_end":51}},{"value":"/ # use combine::stream::easy;","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/function.rs","byte_start":273999,"byte_end":274031,"line_start":33,"line_end":33,"column_start":1,"column_end":33}},{"value":"/ # fn main() {","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/function.rs","byte_start":274032,"byte_end":274049,"line_start":34,"line_end":34,"column_start":1,"column_end":18}},{"value":"/ let mut even_digit = parser(|input| {","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/function.rs","byte_start":274050,"byte_end":274091,"line_start":35,"line_end":35,"column_start":1,"column_end":42}},{"value":"/     // Help type inference out","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/function.rs","byte_start":274092,"byte_end":274126,"line_start":36,"line_end":36,"column_start":1,"column_end":35}},{"value":"/     let _: &mut easy::Stream<&str> = input;","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/function.rs","byte_start":274127,"byte_end":274174,"line_start":37,"line_end":37,"column_start":1,"column_end":48}},{"value":"/     let position = input.position();","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/function.rs","byte_start":274175,"byte_end":274215,"line_start":38,"line_end":38,"column_start":1,"column_end":41}},{"value":"/     let (char_digit, consumed) = try!(digit().parse_stream(input));","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/function.rs","byte_start":274216,"byte_end":274287,"line_start":39,"line_end":39,"column_start":1,"column_end":72}},{"value":"/     let d = (char_digit as i32) - ('0' as i32);","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/function.rs","byte_start":274288,"byte_end":274339,"line_start":40,"line_end":40,"column_start":1,"column_end":52}},{"value":"/     if d % 2 == 0 {","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/function.rs","byte_start":274340,"byte_end":274363,"line_start":41,"line_end":41,"column_start":1,"column_end":24}},{"value":"/         Ok((d, consumed))","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/function.rs","byte_start":274364,"byte_end":274393,"line_start":42,"line_end":42,"column_start":1,"column_end":30}},{"value":"/     }","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/function.rs","byte_start":274394,"byte_end":274403,"line_start":43,"line_end":43,"column_start":1,"column_end":10}},{"value":"/     else {","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/function.rs","byte_start":274404,"byte_end":274418,"line_start":44,"line_end":44,"column_start":1,"column_end":15}},{"value":"/         //Return an empty error since we only tested the first token of the stream","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/function.rs","byte_start":274419,"byte_end":274505,"line_start":45,"line_end":45,"column_start":1,"column_end":87}},{"value":"/         let errors = easy::Errors::new(","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/function.rs","byte_start":274506,"byte_end":274549,"line_start":46,"line_end":46,"column_start":1,"column_end":44}},{"value":"/             position,","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/function.rs","byte_start":274550,"byte_end":274575,"line_start":47,"line_end":47,"column_start":1,"column_end":26}},{"value":"/             StreamError::expected(From::from(\"even number\"))","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/function.rs","byte_start":274576,"byte_end":274640,"line_start":48,"line_end":48,"column_start":1,"column_end":65}},{"value":"/         );","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/function.rs","byte_start":274641,"byte_end":274655,"line_start":49,"line_end":49,"column_start":1,"column_end":15}},{"value":"/         Err(Consumed::Empty(errors.into()))","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/function.rs","byte_start":274656,"byte_end":274703,"line_start":50,"line_end":50,"column_start":1,"column_end":48}},{"value":"/     }","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/function.rs","byte_start":274704,"byte_end":274713,"line_start":51,"line_end":51,"column_start":1,"column_end":10}},{"value":"/ });","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/function.rs","byte_start":274714,"byte_end":274721,"line_start":52,"line_end":52,"column_start":1,"column_end":8}},{"value":"/ let result = even_digit","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/function.rs","byte_start":274722,"byte_end":274749,"line_start":53,"line_end":53,"column_start":1,"column_end":28}},{"value":"/     .easy_parse(\"8\")","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/function.rs","byte_start":274750,"byte_end":274774,"line_start":54,"line_end":54,"column_start":1,"column_end":25}},{"value":"/     .map(|x| x.0);","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/function.rs","byte_start":274775,"byte_end":274797,"line_start":55,"line_end":55,"column_start":1,"column_end":23}},{"value":"/ assert_eq!(result, Ok(8));","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/function.rs","byte_start":274798,"byte_end":274828,"line_start":56,"line_end":56,"column_start":1,"column_end":31}},{"value":"/ # }","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/function.rs","byte_start":274829,"byte_end":274836,"line_start":57,"line_end":57,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/function.rs","byte_start":274837,"byte_end":274844,"line_start":58,"line_end":58,"column_start":1,"column_end":8}},{"value":"inline(always)","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/function.rs","byte_start":274845,"byte_end":274862,"line_start":59,"line_end":59,"column_start":1,"column_end":18}}]},{"kind":"Struct","id":{"krate":0,"index":6552},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/function.rs","byte_start":275622,"byte_end":275631,"line_start":98,"line_end":98,"column_start":12,"column_end":21},"name":"EnvParser","qualname":"::parser::function::EnvParser","value":"EnvParser {  }","parent":null,"children":[{"krate":0,"index":6556},{"krate":0,"index":6557}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1530},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/function.rs","byte_start":277472,"byte_end":277482,"line_start":171,"line_end":171,"column_start":8,"column_end":18},"name":"env_parser","qualname":"::parser::function::env_parser","value":"pub fn env_parser<E, I, O>(E, fn(: E, : &mut I) -> ParseResult<O, I>)\n-> EnvParser<E, I, O> where E: Clone, I: Stream","parent":null,"children":[],"decl_id":null,"docs":" Constructs a parser out of an environment and a function which needs the given environment to\n do the parsing. This is commonly useful to allow multiple parsers to share some environment\n while still allowing the parsers to be written in separate functions.","sig":null,"attributes":[{"value":"/ Constructs a parser out of an environment and a function which needs the given environment to","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/function.rs","byte_start":276252,"byte_end":276349,"line_start":134,"line_end":134,"column_start":1,"column_end":98}},{"value":"/ do the parsing. This is commonly useful to allow multiple parsers to share some environment","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/function.rs","byte_start":276350,"byte_end":276445,"line_start":135,"line_end":135,"column_start":1,"column_end":96}},{"value":"/ while still allowing the parsers to be written in separate functions.","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/function.rs","byte_start":276446,"byte_end":276519,"line_start":136,"line_end":136,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/function.rs","byte_start":276520,"byte_end":276523,"line_start":137,"line_end":137,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/function.rs","byte_start":276524,"byte_end":276531,"line_start":138,"line_end":138,"column_start":1,"column_end":8}},{"value":"/ # extern crate combine;","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/function.rs","byte_start":276532,"byte_end":276559,"line_start":139,"line_end":139,"column_start":1,"column_end":28}},{"value":"/ # use std::collections::HashMap;","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/function.rs","byte_start":276560,"byte_end":276596,"line_start":140,"line_end":140,"column_start":1,"column_end":37}},{"value":"/ # use combine::*;","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/function.rs","byte_start":276597,"byte_end":276618,"line_start":141,"line_end":141,"column_start":1,"column_end":22}},{"value":"/ # use combine::char::letter;","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/function.rs","byte_start":276619,"byte_end":276651,"line_start":142,"line_end":142,"column_start":1,"column_end":33}},{"value":"/ # fn main() {","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/function.rs","byte_start":276652,"byte_end":276669,"line_start":143,"line_end":143,"column_start":1,"column_end":18}},{"value":"/ struct Interner(HashMap<String, u32>);","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/function.rs","byte_start":276670,"byte_end":276712,"line_start":144,"line_end":144,"column_start":1,"column_end":43}},{"value":"/ impl Interner {","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/function.rs","byte_start":276713,"byte_end":276732,"line_start":145,"line_end":145,"column_start":1,"column_end":20}},{"value":"/     fn string<I>(&self, input: &mut I) -> ParseResult<u32, I>","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/function.rs","byte_start":276733,"byte_end":276798,"line_start":146,"line_end":146,"column_start":1,"column_end":66}},{"value":"/         where I: Stream<Item=char>,","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/function.rs","byte_start":276799,"byte_end":276838,"line_start":147,"line_end":147,"column_start":1,"column_end":40}},{"value":"/               I::Error: ParseError<I::Item, I::Range, I::Position>,","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/function.rs","byte_start":276839,"byte_end":276910,"line_start":148,"line_end":148,"column_start":1,"column_end":72}},{"value":"/     {","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/function.rs","byte_start":276911,"byte_end":276920,"line_start":149,"line_end":149,"column_start":1,"column_end":10}},{"value":"/         many(letter())","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/function.rs","byte_start":276921,"byte_end":276947,"line_start":150,"line_end":150,"column_start":1,"column_end":27}},{"value":"/             .map(|s: String| self.0.get(&s).cloned().unwrap_or(0))","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/function.rs","byte_start":276948,"byte_end":277018,"line_start":151,"line_end":151,"column_start":1,"column_end":71}},{"value":"/             .parse_stream(input)","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/function.rs","byte_start":277019,"byte_end":277055,"line_start":152,"line_end":152,"column_start":1,"column_end":37}},{"value":"/     }","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/function.rs","byte_start":277056,"byte_end":277065,"line_start":153,"line_end":153,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/function.rs","byte_start":277066,"byte_end":277071,"line_start":154,"line_end":154,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/function.rs","byte_start":277072,"byte_end":277075,"line_start":155,"line_end":155,"column_start":1,"column_end":4}},{"value":"/ let mut map = HashMap::new();","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/function.rs","byte_start":277076,"byte_end":277109,"line_start":156,"line_end":156,"column_start":1,"column_end":34}},{"value":"/ map.insert(\"hello\".into(), 1);","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/function.rs","byte_start":277110,"byte_end":277144,"line_start":157,"line_end":157,"column_start":1,"column_end":35}},{"value":"/ map.insert(\"test\".into(), 2);","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/function.rs","byte_start":277145,"byte_end":277178,"line_start":158,"line_end":158,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/function.rs","byte_start":277179,"byte_end":277182,"line_start":159,"line_end":159,"column_start":1,"column_end":4}},{"value":"/ let env = Interner(map);","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/function.rs","byte_start":277183,"byte_end":277211,"line_start":160,"line_end":160,"column_start":1,"column_end":29}},{"value":"/ let mut parser = env_parser(&env, Interner::string);","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/function.rs","byte_start":277212,"byte_end":277268,"line_start":161,"line_end":161,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/function.rs","byte_start":277269,"byte_end":277272,"line_start":162,"line_end":162,"column_start":1,"column_end":4}},{"value":"/ let result = parser.parse(\"hello\");","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/function.rs","byte_start":277273,"byte_end":277312,"line_start":163,"line_end":163,"column_start":1,"column_end":40}},{"value":"/ assert_eq!(result, Ok((1, \"\")));","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/function.rs","byte_start":277313,"byte_end":277349,"line_start":164,"line_end":164,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/function.rs","byte_start":277350,"byte_end":277353,"line_start":165,"line_end":165,"column_start":1,"column_end":4}},{"value":"/ let result = parser.parse(\"world\");","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/function.rs","byte_start":277354,"byte_end":277393,"line_start":166,"line_end":166,"column_start":1,"column_end":40}},{"value":"/ assert_eq!(result, Ok((0, \"\")));","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/function.rs","byte_start":277394,"byte_end":277430,"line_start":167,"line_end":167,"column_start":1,"column_end":37}},{"value":"/ # }","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/function.rs","byte_start":277431,"byte_end":277438,"line_start":168,"line_end":168,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/function.rs","byte_start":277439,"byte_end":277446,"line_start":169,"line_end":169,"column_start":1,"column_end":8}},{"value":"inline(always)","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/function.rs","byte_start":277447,"byte_end":277464,"line_start":170,"line_end":170,"column_start":1,"column_end":18}}]},{"kind":"Mod","id":{"krate":0,"index":1534},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/item.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"item","qualname":"::parser::item","value":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/item.rs","parent":null,"children":[{"krate":0,"index":1535},{"krate":0,"index":8354},{"krate":0,"index":1536},{"krate":0,"index":1537},{"krate":0,"index":1538},{"krate":0,"index":1539},{"krate":0,"index":1540},{"krate":0,"index":1541},{"krate":0,"index":1542},{"krate":0,"index":1543},{"krate":0,"index":1544},{"krate":0,"index":1545},{"krate":0,"index":1546},{"krate":0,"index":1547},{"krate":0,"index":1548},{"krate":0,"index":6562},{"krate":0,"index":6569},{"krate":0,"index":6566},{"krate":0,"index":1549},{"krate":0,"index":1555},{"krate":0,"index":6571},{"krate":0,"index":6580},{"krate":0,"index":6576},{"krate":0,"index":1557},{"krate":0,"index":1561},{"krate":0,"index":1569},{"krate":0,"index":6583},{"krate":0,"index":6592},{"krate":0,"index":6588},{"krate":0,"index":1572},{"krate":0,"index":1580},{"krate":0,"index":6595},{"krate":0,"index":6602},{"krate":0,"index":6599},{"krate":0,"index":1584},{"krate":0,"index":1592},{"krate":0,"index":6604},{"krate":0,"index":6612},{"krate":0,"index":1594},{"krate":0,"index":1603},{"krate":0,"index":6617},{"krate":0,"index":6624},{"krate":0,"index":1607},{"krate":0,"index":1615},{"krate":0,"index":6629},{"krate":0,"index":6635},{"krate":0,"index":6632},{"krate":0,"index":1619},{"krate":0,"index":1625},{"krate":0,"index":6637},{"krate":0,"index":6646},{"krate":0,"index":6642},{"krate":0,"index":1627},{"krate":0,"index":1637},{"krate":0,"index":6649},{"krate":0,"index":6658},{"krate":0,"index":6654},{"krate":0,"index":1640},{"krate":0,"index":1649},{"krate":0,"index":6661},{"krate":0,"index":6671},{"krate":0,"index":6667},{"krate":0,"index":1652},{"krate":0,"index":1659},{"krate":0,"index":6674},{"krate":0,"index":6681},{"krate":0,"index":6678},{"krate":0,"index":1662},{"krate":0,"index":1669}],"decl_id":null,"docs":" Parsers working with single stream items.\n","sig":null,"attributes":[{"value":"/ Parsers working with single stream items.","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/item.rs","byte_start":277850,"byte_end":277895,"line_start":1,"line_end":1,"column_start":1,"column_end":46}}]},{"kind":"Struct","id":{"krate":0,"index":6562},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/item.rs","byte_start":278158,"byte_end":278161,"line_start":15,"line_end":15,"column_start":12,"column_end":15},"name":"Any","qualname":"::parser::item::Any","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1555},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/item.rs","byte_start":278884,"byte_end":278887,"line_start":46,"line_end":46,"column_start":8,"column_end":11},"name":"any","qualname":"::parser::item::any","value":"pub fn any<I>() -> Any<I> where I: Stream","parent":null,"children":[],"decl_id":null,"docs":" Parses any token.","sig":null,"attributes":[{"value":"/ Parses any token.","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/item.rs","byte_start":278448,"byte_end":278469,"line_start":31,"line_end":31,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/item.rs","byte_start":278470,"byte_end":278473,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/item.rs","byte_start":278474,"byte_end":278481,"line_start":33,"line_end":33,"column_start":1,"column_end":8}},{"value":"/ # extern crate combine;","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/item.rs","byte_start":278482,"byte_end":278509,"line_start":34,"line_end":34,"column_start":1,"column_end":28}},{"value":"/ # use combine::*;","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/item.rs","byte_start":278510,"byte_end":278531,"line_start":35,"line_end":35,"column_start":1,"column_end":22}},{"value":"/ # fn main() {","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/item.rs","byte_start":278532,"byte_end":278549,"line_start":36,"line_end":36,"column_start":1,"column_end":18}},{"value":"/ let mut char_parser = any();","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/item.rs","byte_start":278550,"byte_end":278582,"line_start":37,"line_end":37,"column_start":1,"column_end":33}},{"value":"/ assert_eq!(char_parser.parse(\"!\").map(|x| x.0), Ok('!'));","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/item.rs","byte_start":278583,"byte_end":278644,"line_start":38,"line_end":38,"column_start":1,"column_end":62}},{"value":"/ assert!(char_parser.parse(\"\").is_err());","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/item.rs","byte_start":278645,"byte_end":278689,"line_start":39,"line_end":39,"column_start":1,"column_end":45}},{"value":"/ let mut byte_parser = any();","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/item.rs","byte_start":278690,"byte_end":278722,"line_start":40,"line_end":40,"column_start":1,"column_end":33}},{"value":"/ assert_eq!(byte_parser.parse(&b\"!\"[..]).map(|x| x.0), Ok(b'!'));","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/item.rs","byte_start":278723,"byte_end":278791,"line_start":41,"line_end":41,"column_start":1,"column_end":69}},{"value":"/ assert!(byte_parser.parse(&b\"\"[..]).is_err());","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/item.rs","byte_start":278792,"byte_end":278842,"line_start":42,"line_end":42,"column_start":1,"column_end":51}},{"value":"/ # }","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/item.rs","byte_start":278843,"byte_end":278850,"line_start":43,"line_end":43,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/item.rs","byte_start":278851,"byte_end":278858,"line_start":44,"line_end":44,"column_start":1,"column_end":8}},{"value":"inline(always)","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/item.rs","byte_start":278859,"byte_end":278876,"line_start":45,"line_end":45,"column_start":1,"column_end":18}}]},{"kind":"Struct","id":{"krate":0,"index":6571},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/item.rs","byte_start":278984,"byte_end":278991,"line_start":54,"line_end":54,"column_start":12,"column_end":19},"name":"Satisfy","qualname":"::parser::item::Satisfy","value":"Satisfy {  }","parent":null,"children":[{"krate":0,"index":6574},{"krate":0,"index":6575}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1569},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/item.rs","byte_start":280352,"byte_end":280359,"line_start":108,"line_end":108,"column_start":8,"column_end":15},"name":"satisfy","qualname":"::parser::item::satisfy","value":"pub fn satisfy<I, P>(P) -> Satisfy<I, P> where I: Stream, P: FnMut(I::Item) ->\nbool","parent":null,"children":[],"decl_id":null,"docs":" Parses a token and succeeds depending on the result of `predicate`.","sig":null,"attributes":[{"value":"/ Parses a token and succeeds depending on the result of `predicate`.","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/item.rs","byte_start":279989,"byte_end":280060,"line_start":96,"line_end":96,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/item.rs","byte_start":280061,"byte_end":280064,"line_start":97,"line_end":97,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/item.rs","byte_start":280065,"byte_end":280072,"line_start":98,"line_end":98,"column_start":1,"column_end":8}},{"value":"/ # extern crate combine;","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/item.rs","byte_start":280073,"byte_end":280100,"line_start":99,"line_end":99,"column_start":1,"column_end":28}},{"value":"/ # use combine::*;","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/item.rs","byte_start":280101,"byte_end":280122,"line_start":100,"line_end":100,"column_start":1,"column_end":22}},{"value":"/ # fn main() {","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/item.rs","byte_start":280123,"byte_end":280140,"line_start":101,"line_end":101,"column_start":1,"column_end":18}},{"value":"/ let mut parser = satisfy(|c| c == '!' || c == '?');","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/item.rs","byte_start":280141,"byte_end":280196,"line_start":102,"line_end":102,"column_start":1,"column_end":56}},{"value":"/ assert_eq!(parser.parse(\"!\").map(|x| x.0), Ok('!'));","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/item.rs","byte_start":280197,"byte_end":280253,"line_start":103,"line_end":103,"column_start":1,"column_end":57}},{"value":"/ assert_eq!(parser.parse(\"?\").map(|x| x.0), Ok('?'));","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/item.rs","byte_start":280254,"byte_end":280310,"line_start":104,"line_end":104,"column_start":1,"column_end":57}},{"value":"/ # }","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/item.rs","byte_start":280311,"byte_end":280318,"line_start":105,"line_end":105,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/item.rs","byte_start":280319,"byte_end":280326,"line_start":106,"line_end":106,"column_start":1,"column_end":8}},{"value":"inline(always)","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/item.rs","byte_start":280327,"byte_end":280344,"line_start":107,"line_end":107,"column_start":1,"column_end":18}}]},{"kind":"Struct","id":{"krate":0,"index":6583},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/item.rs","byte_start":280568,"byte_end":280578,"line_start":120,"line_end":120,"column_start":12,"column_end":22},"name":"SatisfyMap","qualname":"::parser::item::SatisfyMap","value":"SatisfyMap {  }","parent":null,"children":[{"krate":0,"index":6586},{"krate":0,"index":6587}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1580},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/item.rs","byte_start":281696,"byte_end":281707,"line_start":164,"line_end":164,"column_start":8,"column_end":19},"name":"satisfy_map","qualname":"::parser::item::satisfy_map","value":"pub fn satisfy_map<I, P, R>(P) -> SatisfyMap<I, P> where I: Stream,\nP: FnMut(I::Item) -> Option<R>","parent":null,"children":[],"decl_id":null,"docs":" Parses a token and passes it to `predicate`. If `predicate` returns `Some` the parser succeeds\n and returns the value inside the `Option`. If `predicate` returns `None` the parser fails\n without consuming any input.","sig":null,"attributes":[{"value":"/ Parses a token and passes it to `predicate`. If `predicate` returns `Some` the parser succeeds","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/item.rs","byte_start":280980,"byte_end":281078,"line_start":139,"line_end":139,"column_start":1,"column_end":99}},{"value":"/ and returns the value inside the `Option`. If `predicate` returns `None` the parser fails","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/item.rs","byte_start":281079,"byte_end":281172,"line_start":140,"line_end":140,"column_start":1,"column_end":94}},{"value":"/ without consuming any input.","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/item.rs","byte_start":281173,"byte_end":281205,"line_start":141,"line_end":141,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/item.rs","byte_start":281206,"byte_end":281209,"line_start":142,"line_end":142,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/item.rs","byte_start":281210,"byte_end":281217,"line_start":143,"line_end":143,"column_start":1,"column_end":8}},{"value":"/ # extern crate combine;","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/item.rs","byte_start":281218,"byte_end":281245,"line_start":144,"line_end":144,"column_start":1,"column_end":28}},{"value":"/ # use combine::*;","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/item.rs","byte_start":281246,"byte_end":281267,"line_start":145,"line_end":145,"column_start":1,"column_end":22}},{"value":"/ # fn main() {","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/item.rs","byte_start":281268,"byte_end":281285,"line_start":146,"line_end":146,"column_start":1,"column_end":18}},{"value":"/ #[derive(Debug, PartialEq)]","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/item.rs","byte_start":281286,"byte_end":281317,"line_start":147,"line_end":147,"column_start":1,"column_end":32}},{"value":"/ enum YesNo {","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/item.rs","byte_start":281318,"byte_end":281334,"line_start":148,"line_end":148,"column_start":1,"column_end":17}},{"value":"/     Yes,","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/item.rs","byte_start":281335,"byte_end":281347,"line_start":149,"line_end":149,"column_start":1,"column_end":13}},{"value":"/     No,","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/item.rs","byte_start":281348,"byte_end":281359,"line_start":150,"line_end":150,"column_start":1,"column_end":12}},{"value":"/ }","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/item.rs","byte_start":281360,"byte_end":281365,"line_start":151,"line_end":151,"column_start":1,"column_end":6}},{"value":"/ let mut parser = satisfy_map(|c| {","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/item.rs","byte_start":281366,"byte_end":281404,"line_start":152,"line_end":152,"column_start":1,"column_end":39}},{"value":"/     match c {","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/item.rs","byte_start":281405,"byte_end":281422,"line_start":153,"line_end":153,"column_start":1,"column_end":18}},{"value":"/         'Y' => Some(YesNo::Yes),","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/item.rs","byte_start":281423,"byte_end":281459,"line_start":154,"line_end":154,"column_start":1,"column_end":37}},{"value":"/         'N' => Some(YesNo::No),","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/item.rs","byte_start":281460,"byte_end":281495,"line_start":155,"line_end":155,"column_start":1,"column_end":36}},{"value":"/         _ => None,","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/item.rs","byte_start":281496,"byte_end":281518,"line_start":156,"line_end":156,"column_start":1,"column_end":23}},{"value":"/     }","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/item.rs","byte_start":281519,"byte_end":281528,"line_start":157,"line_end":157,"column_start":1,"column_end":10}},{"value":"/ });","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/item.rs","byte_start":281529,"byte_end":281536,"line_start":158,"line_end":158,"column_start":1,"column_end":8}},{"value":"/ assert_eq!(parser.parse(\"Y\").map(|x| x.0), Ok(YesNo::Yes));","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/item.rs","byte_start":281537,"byte_end":281600,"line_start":159,"line_end":159,"column_start":1,"column_end":64}},{"value":"/ assert!(parser.parse(\"A\").map(|x| x.0).is_err());","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/item.rs","byte_start":281601,"byte_end":281654,"line_start":160,"line_end":160,"column_start":1,"column_end":54}},{"value":"/ # }","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/item.rs","byte_start":281655,"byte_end":281662,"line_start":161,"line_end":161,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/item.rs","byte_start":281663,"byte_end":281670,"line_start":162,"line_end":162,"column_start":1,"column_end":8}},{"value":"inline(always)","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/item.rs","byte_start":281671,"byte_end":281688,"line_start":163,"line_end":163,"column_start":1,"column_end":18}}]},{"kind":"Struct","id":{"krate":0,"index":6595},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/item.rs","byte_start":281930,"byte_end":281935,"line_start":176,"line_end":176,"column_start":12,"column_end":17},"name":"Token","qualname":"::parser::item::Token","value":"Token {  }","parent":null,"children":[{"krate":0,"index":6597},{"krate":0,"index":6598}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1592},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/item.rs","byte_start":282829,"byte_end":282834,"line_start":216,"line_end":216,"column_start":8,"column_end":13},"name":"token","qualname":"::parser::item::token","value":"pub fn token<I>(I::Item) -> Token<I> where I: Stream, I::Item: PartialEq","parent":null,"children":[],"decl_id":null,"docs":" Parses a character and succeeds if the character is equal to `c`.","sig":null,"attributes":[{"value":"/ Parses a character and succeeds if the character is equal to `c`.","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/item.rs","byte_start":282534,"byte_end":282603,"line_start":203,"line_end":203,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/item.rs","byte_start":282604,"byte_end":282607,"line_start":204,"line_end":204,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/item.rs","byte_start":282608,"byte_end":282615,"line_start":205,"line_end":205,"column_start":1,"column_end":8}},{"value":"/ # extern crate combine;","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/item.rs","byte_start":282616,"byte_end":282643,"line_start":206,"line_end":206,"column_start":1,"column_end":28}},{"value":"/ # use combine::*;","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/item.rs","byte_start":282644,"byte_end":282665,"line_start":207,"line_end":207,"column_start":1,"column_end":22}},{"value":"/ # fn main() {","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/item.rs","byte_start":282666,"byte_end":282683,"line_start":208,"line_end":208,"column_start":1,"column_end":18}},{"value":"/ let result = token('!')","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/item.rs","byte_start":282684,"byte_end":282711,"line_start":209,"line_end":209,"column_start":1,"column_end":28}},{"value":"/     .parse(\"!\")","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/item.rs","byte_start":282712,"byte_end":282731,"line_start":210,"line_end":210,"column_start":1,"column_end":20}},{"value":"/     .map(|x| x.0);","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/item.rs","byte_start":282732,"byte_end":282754,"line_start":211,"line_end":211,"column_start":1,"column_end":23}},{"value":"/ assert_eq!(result, Ok('!'));","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/item.rs","byte_start":282755,"byte_end":282787,"line_start":212,"line_end":212,"column_start":1,"column_end":33}},{"value":"/ # }","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/item.rs","byte_start":282788,"byte_end":282795,"line_start":213,"line_end":213,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/item.rs","byte_start":282796,"byte_end":282803,"line_start":214,"line_end":214,"column_start":1,"column_end":8}},{"value":"inline(always)","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/item.rs","byte_start":282804,"byte_end":282821,"line_start":215,"line_end":215,"column_start":1,"column_end":18}}]},{"kind":"Struct","id":{"krate":0,"index":6604},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/item.rs","byte_start":283002,"byte_end":283008,"line_start":228,"line_end":228,"column_start":12,"column_end":18},"name":"Tokens","qualname":"::parser::item::Tokens","value":"Tokens {  }","parent":null,"children":[{"krate":0,"index":6608},{"krate":0,"index":6609},{"krate":0,"index":6610},{"krate":0,"index":6611}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1603},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/item.rs","byte_start":286000,"byte_end":286006,"line_start":320,"line_end":320,"column_start":8,"column_end":14},"name":"tokens","qualname":"::parser::item::tokens","value":"pub fn tokens<C, T, I>(C, Info<I::Item, I::Range>, T) -> Tokens<C, T, I> where\nC: FnMut(T::Item, I::Item) -> bool, T: Clone + IntoIterator, I: Stream","parent":null,"children":[],"decl_id":null,"docs":" Parses multiple tokens.","sig":null,"attributes":[{"value":"/ Parses multiple tokens.","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/item.rs","byte_start":285113,"byte_end":285140,"line_start":293,"line_end":293,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/item.rs","byte_start":285141,"byte_end":285144,"line_start":294,"line_end":294,"column_start":1,"column_end":4}},{"value":"/ Consumes items from the input and compares them to the values from `tokens` using the","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/item.rs","byte_start":285145,"byte_end":285234,"line_start":295,"line_end":295,"column_start":1,"column_end":90}},{"value":"/ comparison function `cmp`. Succeeds if all the items from `tokens` are matched in the input","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/item.rs","byte_start":285235,"byte_end":285330,"line_start":296,"line_end":296,"column_start":1,"column_end":96}},{"value":"/ stream and fails otherwise with `expected` used as part of the error.","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/item.rs","byte_start":285331,"byte_end":285404,"line_start":297,"line_end":297,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/item.rs","byte_start":285405,"byte_end":285408,"line_start":298,"line_end":298,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/item.rs","byte_start":285409,"byte_end":285416,"line_start":299,"line_end":299,"column_start":1,"column_end":8}},{"value":"/ # extern crate combine;","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/item.rs","byte_start":285417,"byte_end":285444,"line_start":300,"line_end":300,"column_start":1,"column_end":28}},{"value":"/ # use combine::*;","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/item.rs","byte_start":285445,"byte_end":285466,"line_start":301,"line_end":301,"column_start":1,"column_end":22}},{"value":"/ # use combine::error::Info;","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/item.rs","byte_start":285467,"byte_end":285498,"line_start":302,"line_end":302,"column_start":1,"column_end":32}},{"value":"/ # fn main() {","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/item.rs","byte_start":285499,"byte_end":285516,"line_start":303,"line_end":303,"column_start":1,"column_end":18}},{"value":"/ use std::ascii::AsciiExt;","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/item.rs","byte_start":285517,"byte_end":285546,"line_start":304,"line_end":304,"column_start":1,"column_end":30}},{"value":"/ let result = tokens(|l, r| l.eq_ignore_ascii_case(&r), \"abc\".into(), \"abc\".chars())","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/item.rs","byte_start":285547,"byte_end":285634,"line_start":305,"line_end":305,"column_start":1,"column_end":88}},{"value":"/     .parse(\"AbC\")","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/item.rs","byte_start":285635,"byte_end":285656,"line_start":306,"line_end":306,"column_start":1,"column_end":22}},{"value":"/     .map(|x| x.0.as_str());","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/item.rs","byte_start":285657,"byte_end":285688,"line_start":307,"line_end":307,"column_start":1,"column_end":32}},{"value":"/ assert_eq!(result, Ok(\"abc\"));","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/item.rs","byte_start":285689,"byte_end":285723,"line_start":308,"line_end":308,"column_start":1,"column_end":35}},{"value":"/ let result = tokens(","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/item.rs","byte_start":285724,"byte_end":285748,"line_start":309,"line_end":309,"column_start":1,"column_end":25}},{"value":"/     |&l, r| (if l < r { r - l } else { l - r }) <= 2,","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/item.rs","byte_start":285749,"byte_end":285806,"line_start":310,"line_end":310,"column_start":1,"column_end":58}},{"value":"/     Info::Range(&b\"025\"[..]),","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/item.rs","byte_start":285807,"byte_end":285840,"line_start":311,"line_end":311,"column_start":1,"column_end":34}},{"value":"/     &b\"025\"[..]","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/item.rs","byte_start":285841,"byte_end":285860,"line_start":312,"line_end":312,"column_start":1,"column_end":20}},{"value":"/ )","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/item.rs","byte_start":285861,"byte_end":285866,"line_start":313,"line_end":313,"column_start":1,"column_end":6}},{"value":"/     .parse(&b\"123\"[..])","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/item.rs","byte_start":285867,"byte_end":285894,"line_start":314,"line_end":314,"column_start":1,"column_end":28}},{"value":"/     .map(|x| x.0);","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/item.rs","byte_start":285895,"byte_end":285917,"line_start":315,"line_end":315,"column_start":1,"column_end":23}},{"value":"/ assert_eq!(result, Ok(&b\"025\"[..]));","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/item.rs","byte_start":285918,"byte_end":285958,"line_start":316,"line_end":316,"column_start":1,"column_end":41}},{"value":"/ # }","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/item.rs","byte_start":285959,"byte_end":285966,"line_start":317,"line_end":317,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/item.rs","byte_start":285967,"byte_end":285974,"line_start":318,"line_end":318,"column_start":1,"column_end":8}},{"value":"inline(always)","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/item.rs","byte_start":285975,"byte_end":285992,"line_start":319,"line_end":319,"column_start":1,"column_end":18}}]},{"kind":"Struct","id":{"krate":0,"index":6617},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/item.rs","byte_start":286331,"byte_end":286338,"line_start":335,"line_end":335,"column_start":12,"column_end":19},"name":"Tokens2","qualname":"::parser::item::Tokens2","value":"Tokens2 {  }","parent":null,"children":[{"krate":0,"index":6621},{"krate":0,"index":6622},{"krate":0,"index":6623}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1615},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/item.rs","byte_start":288967,"byte_end":288974,"line_start":422,"line_end":422,"column_start":8,"column_end":15},"name":"tokens2","qualname":"::parser::item::tokens2","value":"pub fn tokens2<C, T, I>(C, T) -> Tokens2<C, T, I> where\nC: FnMut(T::Item, I::Item) -> bool, T: Clone + IntoIterator, I: Stream","parent":null,"children":[],"decl_id":null,"docs":" Parses multiple tokens.","sig":null,"attributes":[{"value":"/ Parses multiple tokens.","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/item.rs","byte_start":288171,"byte_end":288198,"line_start":396,"line_end":396,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/item.rs","byte_start":288199,"byte_end":288202,"line_start":397,"line_end":397,"column_start":1,"column_end":4}},{"value":"/ Consumes items from the input and compares them to the values from `tokens` using the","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/item.rs","byte_start":288203,"byte_end":288292,"line_start":398,"line_end":398,"column_start":1,"column_end":90}},{"value":"/ comparison function `cmp`. Succeeds if all the items from `tokens` are matched in the input","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/item.rs","byte_start":288293,"byte_end":288388,"line_start":399,"line_end":399,"column_start":1,"column_end":96}},{"value":"/ stream and fails otherwise.","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/item.rs","byte_start":288389,"byte_end":288420,"line_start":400,"line_end":400,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/item.rs","byte_start":288421,"byte_end":288424,"line_start":401,"line_end":401,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/item.rs","byte_start":288425,"byte_end":288432,"line_start":402,"line_end":402,"column_start":1,"column_end":8}},{"value":"/ # extern crate combine;","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/item.rs","byte_start":288433,"byte_end":288460,"line_start":403,"line_end":403,"column_start":1,"column_end":28}},{"value":"/ # use combine::*;","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/item.rs","byte_start":288461,"byte_end":288482,"line_start":404,"line_end":404,"column_start":1,"column_end":22}},{"value":"/ # fn main() {","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/item.rs","byte_start":288483,"byte_end":288500,"line_start":405,"line_end":405,"column_start":1,"column_end":18}},{"value":"/ # #[allow(deprecated)]","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/item.rs","byte_start":288501,"byte_end":288527,"line_start":406,"line_end":406,"column_start":1,"column_end":27}},{"value":"/ # use std::ascii::AsciiExt;","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/item.rs","byte_start":288528,"byte_end":288559,"line_start":407,"line_end":407,"column_start":1,"column_end":32}},{"value":"/ let result = tokens2(|l, r| l.eq_ignore_ascii_case(&r), \"abc\".chars())","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/item.rs","byte_start":288560,"byte_end":288634,"line_start":408,"line_end":408,"column_start":1,"column_end":75}},{"value":"/     .parse(\"AbC\")","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/item.rs","byte_start":288635,"byte_end":288656,"line_start":409,"line_end":409,"column_start":1,"column_end":22}},{"value":"/     .map(|x| x.0.as_str());","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/item.rs","byte_start":288657,"byte_end":288688,"line_start":410,"line_end":410,"column_start":1,"column_end":32}},{"value":"/ assert_eq!(result, Ok(\"abc\"));","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/item.rs","byte_start":288689,"byte_end":288723,"line_start":411,"line_end":411,"column_start":1,"column_end":35}},{"value":"/ let result = tokens2(","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/item.rs","byte_start":288724,"byte_end":288749,"line_start":412,"line_end":412,"column_start":1,"column_end":26}},{"value":"/     |&l, r| (if l < r { r - l } else { l - r }) <= 2,","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/item.rs","byte_start":288750,"byte_end":288807,"line_start":413,"line_end":413,"column_start":1,"column_end":58}},{"value":"/     &b\"025\"[..]","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/item.rs","byte_start":288808,"byte_end":288827,"line_start":414,"line_end":414,"column_start":1,"column_end":20}},{"value":"/ )","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/item.rs","byte_start":288828,"byte_end":288833,"line_start":415,"line_end":415,"column_start":1,"column_end":6}},{"value":"/     .parse(&b\"123\"[..])","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/item.rs","byte_start":288834,"byte_end":288861,"line_start":416,"line_end":416,"column_start":1,"column_end":28}},{"value":"/     .map(|x| x.0);","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/item.rs","byte_start":288862,"byte_end":288884,"line_start":417,"line_end":417,"column_start":1,"column_end":23}},{"value":"/ assert_eq!(result, Ok(&b\"025\"[..]));","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/item.rs","byte_start":288885,"byte_end":288925,"line_start":418,"line_end":418,"column_start":1,"column_end":41}},{"value":"/ # }","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/item.rs","byte_start":288926,"byte_end":288933,"line_start":419,"line_end":419,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/item.rs","byte_start":288934,"byte_end":288941,"line_start":420,"line_end":420,"column_start":1,"column_end":8}},{"value":"inline(always)","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/item.rs","byte_start":288942,"byte_end":288959,"line_start":421,"line_end":421,"column_start":1,"column_end":18}}]},{"kind":"Struct","id":{"krate":0,"index":6629},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/item.rs","byte_start":289244,"byte_end":289252,"line_start":436,"line_end":436,"column_start":12,"column_end":20},"name":"Position","qualname":"::parser::item::Position","value":"Position {  }","parent":null,"children":[{"krate":0,"index":6631}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1625},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/item.rs","byte_start":290114,"byte_end":290122,"line_start":473,"line_end":473,"column_start":8,"column_end":16},"name":"position","qualname":"::parser::item::position","value":"pub fn position<I>() -> Position<I> where I: Stream","parent":null,"children":[],"decl_id":null,"docs":" Parser which just returns the current position in the stream.","sig":null,"attributes":[{"value":"/ Parser which just returns the current position in the stream.","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/item.rs","byte_start":289592,"byte_end":289657,"line_start":457,"line_end":457,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/item.rs","byte_start":289658,"byte_end":289661,"line_start":458,"line_end":458,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/item.rs","byte_start":289662,"byte_end":289669,"line_start":459,"line_end":459,"column_start":1,"column_end":8}},{"value":"/ # extern crate combine;","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/item.rs","byte_start":289670,"byte_end":289697,"line_start":460,"line_end":460,"column_start":1,"column_end":28}},{"value":"/ # use combine::*;","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/item.rs","byte_start":289698,"byte_end":289719,"line_start":461,"line_end":461,"column_start":1,"column_end":22}},{"value":"/ # use combine::stream::state::{State, SourcePosition};","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/item.rs","byte_start":289720,"byte_end":289778,"line_start":462,"line_end":462,"column_start":1,"column_end":59}},{"value":"/ # fn main() {","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/item.rs","byte_start":289779,"byte_end":289796,"line_start":463,"line_end":463,"column_start":1,"column_end":18}},{"value":"/ let result = (position(), token('!'), position())","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/item.rs","byte_start":289797,"byte_end":289850,"line_start":464,"line_end":464,"column_start":1,"column_end":54}},{"value":"/     .parse(State::new(\"!\"))","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/item.rs","byte_start":289851,"byte_end":289882,"line_start":465,"line_end":465,"column_start":1,"column_end":32}},{"value":"/     .map(|x| x.0);","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/item.rs","byte_start":289883,"byte_end":289905,"line_start":466,"line_end":466,"column_start":1,"column_end":23}},{"value":"/ assert_eq!(result, Ok((SourcePosition { line: 1, column: 1 },","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/item.rs","byte_start":289906,"byte_end":289971,"line_start":467,"line_end":467,"column_start":1,"column_end":66}},{"value":"/                        '!',","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/item.rs","byte_start":289972,"byte_end":290003,"line_start":468,"line_end":468,"column_start":1,"column_end":32}},{"value":"/                        SourcePosition { line: 1, column: 2 })));","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/item.rs","byte_start":290004,"byte_end":290072,"line_start":469,"line_end":469,"column_start":1,"column_end":69}},{"value":"/ # }","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/item.rs","byte_start":290073,"byte_end":290080,"line_start":470,"line_end":470,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/item.rs","byte_start":290081,"byte_end":290088,"line_start":471,"line_end":471,"column_start":1,"column_end":8}},{"value":"inline(always)","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/item.rs","byte_start":290089,"byte_end":290106,"line_start":472,"line_end":472,"column_start":1,"column_end":18}}]},{"kind":"Struct","id":{"krate":0,"index":6637},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/item.rs","byte_start":290254,"byte_end":290259,"line_start":483,"line_end":483,"column_start":12,"column_end":17},"name":"OneOf","qualname":"::parser::item::OneOf","value":"OneOf {  }","parent":null,"children":[{"krate":0,"index":6640},{"krate":0,"index":6641}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1637},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/item.rs","byte_start":291253,"byte_end":291259,"line_start":525,"line_end":525,"column_start":8,"column_end":14},"name":"one_of","qualname":"::parser::item::one_of","value":"pub fn one_of<T, I>(T) -> OneOf<T, I> where T: Clone + IntoIterator,\nI: Stream, I::Item: PartialEq<T::Item>","parent":null,"children":[],"decl_id":null,"docs":" Extract one token and succeeds if it is part of `tokens`.","sig":null,"attributes":[{"value":"/ Extract one token and succeeds if it is part of `tokens`.","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/item.rs","byte_start":290947,"byte_end":291008,"line_start":513,"line_end":513,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/item.rs","byte_start":291009,"byte_end":291012,"line_start":514,"line_end":514,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/item.rs","byte_start":291013,"byte_end":291020,"line_start":515,"line_end":515,"column_start":1,"column_end":8}},{"value":"/ # extern crate combine;","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/item.rs","byte_start":291021,"byte_end":291048,"line_start":516,"line_end":516,"column_start":1,"column_end":28}},{"value":"/ # use combine::*;","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/item.rs","byte_start":291049,"byte_end":291070,"line_start":517,"line_end":517,"column_start":1,"column_end":22}},{"value":"/ # fn main() {","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/item.rs","byte_start":291071,"byte_end":291088,"line_start":518,"line_end":518,"column_start":1,"column_end":18}},{"value":"/ let result = many(one_of(\"abc\".chars()))","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/item.rs","byte_start":291089,"byte_end":291133,"line_start":519,"line_end":519,"column_start":1,"column_end":45}},{"value":"/     .parse(\"abd\");","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/item.rs","byte_start":291134,"byte_end":291156,"line_start":520,"line_end":520,"column_start":1,"column_end":23}},{"value":"/ assert_eq!(result, Ok((String::from(\"ab\"), \"d\")));","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/item.rs","byte_start":291157,"byte_end":291211,"line_start":521,"line_end":521,"column_start":1,"column_end":55}},{"value":"/ # }","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/item.rs","byte_start":291212,"byte_end":291219,"line_start":522,"line_end":522,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/item.rs","byte_start":291220,"byte_end":291227,"line_start":523,"line_end":523,"column_start":1,"column_end":8}},{"value":"inline(always)","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/item.rs","byte_start":291228,"byte_end":291245,"line_start":524,"line_end":524,"column_start":1,"column_end":18}}]},{"kind":"Struct","id":{"krate":0,"index":6649},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/item.rs","byte_start":291486,"byte_end":291492,"line_start":538,"line_end":538,"column_start":12,"column_end":18},"name":"NoneOf","qualname":"::parser::item::NoneOf","value":"NoneOf {  }","parent":null,"children":[{"krate":0,"index":6652},{"krate":0,"index":6653}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1649},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/item.rs","byte_start":292698,"byte_end":292705,"line_start":585,"line_end":585,"column_start":8,"column_end":15},"name":"none_of","qualname":"::parser::item::none_of","value":"pub fn none_of<T, I>(T) -> NoneOf<T, I> where T: Clone + IntoIterator,\nI: Stream, I::Item: PartialEq<T::Item>","parent":null,"children":[],"decl_id":null,"docs":" Extract one token and succeeds if it is not part of `tokens`.","sig":null,"attributes":[{"value":"/ Extract one token and succeeds if it is not part of `tokens`.","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/item.rs","byte_start":291968,"byte_end":292033,"line_start":562,"line_end":562,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/item.rs","byte_start":292034,"byte_end":292037,"line_start":563,"line_end":563,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/item.rs","byte_start":292038,"byte_end":292045,"line_start":564,"line_end":564,"column_start":1,"column_end":8}},{"value":"/ # extern crate combine;","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/item.rs","byte_start":292046,"byte_end":292073,"line_start":565,"line_end":565,"column_start":1,"column_end":28}},{"value":"/ # use combine::*;","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/item.rs","byte_start":292074,"byte_end":292095,"line_start":566,"line_end":566,"column_start":1,"column_end":22}},{"value":"/ # use combine::stream::easy;","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/item.rs","byte_start":292096,"byte_end":292128,"line_start":567,"line_end":567,"column_start":1,"column_end":33}},{"value":"/ # use combine::stream::state::State;","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/item.rs","byte_start":292129,"byte_end":292169,"line_start":568,"line_end":568,"column_start":1,"column_end":41}},{"value":"/ # fn main() {","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/item.rs","byte_start":292170,"byte_end":292187,"line_start":569,"line_end":569,"column_start":1,"column_end":18}},{"value":"/ let mut parser = many1(none_of(b\"abc\".iter().cloned()));","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/item.rs","byte_start":292188,"byte_end":292248,"line_start":570,"line_end":570,"column_start":1,"column_end":61}},{"value":"/ let result = parser.easy_parse(State::new(&b\"xyb\"[..]))","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/item.rs","byte_start":292249,"byte_end":292308,"line_start":571,"line_end":571,"column_start":1,"column_end":60}},{"value":"/     .map(|(output, input)| (output, input.input));","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/item.rs","byte_start":292309,"byte_end":292363,"line_start":572,"line_end":572,"column_start":1,"column_end":55}},{"value":"/ assert_eq!(result, Ok((b\"xy\"[..].to_owned(), &b\"b\"[..])));","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/item.rs","byte_start":292364,"byte_end":292426,"line_start":573,"line_end":573,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/item.rs","byte_start":292427,"byte_end":292430,"line_start":574,"line_end":574,"column_start":1,"column_end":4}},{"value":"/ let result = parser.easy_parse(State::new(&b\"ab\"[..]));","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/item.rs","byte_start":292431,"byte_end":292490,"line_start":575,"line_end":575,"column_start":1,"column_end":60}},{"value":"/ assert_eq!(result, Err(easy::Errors {","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/item.rs","byte_start":292491,"byte_end":292532,"line_start":576,"line_end":576,"column_start":1,"column_end":42}},{"value":"/     position: 0,","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/item.rs","byte_start":292533,"byte_end":292553,"line_start":577,"line_end":577,"column_start":1,"column_end":21}},{"value":"/     errors: vec![","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/item.rs","byte_start":292554,"byte_end":292575,"line_start":578,"line_end":578,"column_start":1,"column_end":22}},{"value":"/         easy::Error::Unexpected(easy::Info::Token(b'a')),","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/item.rs","byte_start":292576,"byte_end":292637,"line_start":579,"line_end":579,"column_start":1,"column_end":62}},{"value":"/     ]","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/item.rs","byte_start":292638,"byte_end":292647,"line_start":580,"line_end":580,"column_start":1,"column_end":10}},{"value":"/ }));","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/item.rs","byte_start":292648,"byte_end":292656,"line_start":581,"line_end":581,"column_start":1,"column_end":9}},{"value":"/ # }","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/item.rs","byte_start":292657,"byte_end":292664,"line_start":582,"line_end":582,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/item.rs","byte_start":292665,"byte_end":292672,"line_start":583,"line_end":583,"column_start":1,"column_end":8}},{"value":"inline(always)","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/item.rs","byte_start":292673,"byte_end":292690,"line_start":584,"line_end":584,"column_start":1,"column_end":18}}]},{"kind":"Struct","id":{"krate":0,"index":6661},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/item.rs","byte_start":292934,"byte_end":292939,"line_start":598,"line_end":598,"column_start":12,"column_end":17},"name":"Value","qualname":"::parser::item::Value","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1659},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/item.rs","byte_start":293541,"byte_end":293546,"line_start":626,"line_end":626,"column_start":8,"column_end":13},"name":"value","qualname":"::parser::item::value","value":"pub fn value<I, T>(T) -> Value<I, T> where I: Stream, T: Clone","parent":null,"children":[],"decl_id":null,"docs":" Always returns the value `v` without consuming any input.","sig":null,"attributes":[{"value":"/ Always returns the value `v` without consuming any input.","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/item.rs","byte_start":293246,"byte_end":293307,"line_start":613,"line_end":613,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/item.rs","byte_start":293308,"byte_end":293311,"line_start":614,"line_end":614,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/item.rs","byte_start":293312,"byte_end":293319,"line_start":615,"line_end":615,"column_start":1,"column_end":8}},{"value":"/ # extern crate combine;","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/item.rs","byte_start":293320,"byte_end":293347,"line_start":616,"line_end":616,"column_start":1,"column_end":28}},{"value":"/ # use combine::*;","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/item.rs","byte_start":293348,"byte_end":293369,"line_start":617,"line_end":617,"column_start":1,"column_end":22}},{"value":"/ # fn main() {","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/item.rs","byte_start":293370,"byte_end":293387,"line_start":618,"line_end":618,"column_start":1,"column_end":18}},{"value":"/ let result = value(42)","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/item.rs","byte_start":293388,"byte_end":293414,"line_start":619,"line_end":619,"column_start":1,"column_end":27}},{"value":"/     .parse(\"hello world\")","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/item.rs","byte_start":293415,"byte_end":293444,"line_start":620,"line_end":620,"column_start":1,"column_end":30}},{"value":"/     .map(|x| x.0);","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/item.rs","byte_start":293445,"byte_end":293467,"line_start":621,"line_end":621,"column_start":1,"column_end":23}},{"value":"/ assert_eq!(result, Ok(42));","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/item.rs","byte_start":293468,"byte_end":293499,"line_start":622,"line_end":622,"column_start":1,"column_end":32}},{"value":"/ # }","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/item.rs","byte_start":293500,"byte_end":293507,"line_start":623,"line_end":623,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/item.rs","byte_start":293508,"byte_end":293515,"line_start":624,"line_end":624,"column_start":1,"column_end":8}},{"value":"inline(always)","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/item.rs","byte_start":293516,"byte_end":293533,"line_start":625,"line_end":625,"column_start":1,"column_end":18}}]},{"kind":"Struct","id":{"krate":0,"index":6674},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/item.rs","byte_start":293674,"byte_end":293677,"line_start":635,"line_end":635,"column_start":12,"column_end":15},"name":"Eof","qualname":"::parser::item::Eof","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1669},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/item.rs","byte_start":295049,"byte_end":295052,"line_start":681,"line_end":681,"column_start":8,"column_end":11},"name":"eof","qualname":"::parser::item::eof","value":"pub fn eof<I>() -> Eof<I> where I: Stream","parent":null,"children":[],"decl_id":null,"docs":" Succeeds only if the stream is at end of input, fails otherwise.","sig":null,"attributes":[{"value":"/ Succeeds only if the stream is at end of input, fails otherwise.","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/item.rs","byte_start":294400,"byte_end":294468,"line_start":661,"line_end":661,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/item.rs","byte_start":294469,"byte_end":294472,"line_start":662,"line_end":662,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/item.rs","byte_start":294473,"byte_end":294480,"line_start":663,"line_end":663,"column_start":1,"column_end":8}},{"value":"/ # extern crate combine;","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/item.rs","byte_start":294481,"byte_end":294508,"line_start":664,"line_end":664,"column_start":1,"column_end":28}},{"value":"/ # use combine::*;","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/item.rs","byte_start":294509,"byte_end":294530,"line_start":665,"line_end":665,"column_start":1,"column_end":22}},{"value":"/ # use combine::stream::easy;","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/item.rs","byte_start":294531,"byte_end":294563,"line_start":666,"line_end":666,"column_start":1,"column_end":33}},{"value":"/ # use combine::stream::state::{State, SourcePosition};","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/item.rs","byte_start":294564,"byte_end":294622,"line_start":667,"line_end":667,"column_start":1,"column_end":59}},{"value":"/ # fn main() {","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/item.rs","byte_start":294623,"byte_end":294640,"line_start":668,"line_end":668,"column_start":1,"column_end":18}},{"value":"/ let mut parser = eof();","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/item.rs","byte_start":294641,"byte_end":294668,"line_start":669,"line_end":669,"column_start":1,"column_end":28}},{"value":"/ assert_eq!(parser.easy_parse(State::new(\"\")), Ok(((), State::new(\"\"))));","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/item.rs","byte_start":294669,"byte_end":294745,"line_start":670,"line_end":670,"column_start":1,"column_end":77}},{"value":"/ assert_eq!(parser.easy_parse(State::new(\"x\")), Err(easy::Errors {","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/item.rs","byte_start":294746,"byte_end":294815,"line_start":671,"line_end":671,"column_start":1,"column_end":70}},{"value":"/     position: SourcePosition::default(),","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/item.rs","byte_start":294816,"byte_end":294860,"line_start":672,"line_end":672,"column_start":1,"column_end":45}},{"value":"/     errors: vec![","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/item.rs","byte_start":294861,"byte_end":294882,"line_start":673,"line_end":673,"column_start":1,"column_end":22}},{"value":"/         easy::Error::Unexpected('x'.into()),","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/item.rs","byte_start":294883,"byte_end":294931,"line_start":674,"line_end":674,"column_start":1,"column_end":49}},{"value":"/         easy::Error::Expected(\"end of input\".into())","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/item.rs","byte_start":294932,"byte_end":294988,"line_start":675,"line_end":675,"column_start":1,"column_end":57}},{"value":"/     ]","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/item.rs","byte_start":294989,"byte_end":294998,"line_start":676,"line_end":676,"column_start":1,"column_end":10}},{"value":"/ }));","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/item.rs","byte_start":294999,"byte_end":295007,"line_start":677,"line_end":677,"column_start":1,"column_end":9}},{"value":"/ # }","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/item.rs","byte_start":295008,"byte_end":295015,"line_start":678,"line_end":678,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/item.rs","byte_start":295016,"byte_end":295023,"line_start":679,"line_end":679,"column_start":1,"column_end":8}},{"value":"inline(always)","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/item.rs","byte_start":295024,"byte_end":295041,"line_start":680,"line_end":680,"column_start":1,"column_end":18}}]},{"kind":"Mod","id":{"krate":0,"index":1671},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/range.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"range","qualname":"::parser::range","value":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/range.rs","parent":null,"children":[{"krate":0,"index":1672},{"krate":0,"index":8376},{"krate":0,"index":1673},{"krate":0,"index":1674},{"krate":0,"index":1675},{"krate":0,"index":1676},{"krate":0,"index":1677},{"krate":0,"index":1678},{"krate":0,"index":1679},{"krate":0,"index":1680},{"krate":0,"index":1681},{"krate":0,"index":1682},{"krate":0,"index":1683},{"krate":0,"index":1684},{"krate":0,"index":1685},{"krate":0,"index":1686},{"krate":0,"index":1687},{"krate":0,"index":1688},{"krate":0,"index":1689},{"krate":0,"index":1690},{"krate":0,"index":1691},{"krate":0,"index":1692},{"krate":0,"index":1693},{"krate":0,"index":1697},{"krate":0,"index":6696},{"krate":0,"index":6700},{"krate":0,"index":6683},{"krate":0,"index":6694},{"krate":0,"index":1705},{"krate":0,"index":6706},{"krate":0,"index":6710},{"krate":0,"index":1712},{"krate":0,"index":1721},{"krate":0,"index":1723},{"krate":0,"index":1725},{"krate":0,"index":1730},{"krate":0,"index":1736},{"krate":0,"index":1738},{"krate":0,"index":1744},{"krate":0,"index":1754},{"krate":0,"index":1757},{"krate":0,"index":1763},{"krate":0,"index":1773},{"krate":0,"index":1776},{"krate":0,"index":1780},{"krate":0,"index":1787},{"krate":0,"index":6719},{"krate":0,"index":6730},{"krate":0,"index":6726},{"krate":0,"index":6727},{"krate":0,"index":1789},{"krate":0,"index":1791},{"krate":0,"index":1796},{"krate":0,"index":1805}],"decl_id":null,"docs":" Module containing zero-copy parsers.","sig":null,"attributes":[{"value":"/ Module containing zero-copy parsers.","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/range.rs","byte_start":295801,"byte_end":295841,"line_start":1,"line_end":1,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/range.rs","byte_start":295842,"byte_end":295845,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ These parsers require the [`RangeStream`][] bound instead of a plain [`Stream`][].","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/range.rs","byte_start":295846,"byte_end":295932,"line_start":3,"line_end":3,"column_start":1,"column_end":87}},{"value":"/","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/range.rs","byte_start":295933,"byte_end":295936,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ [`RangeStream`]: ../../stream/trait.RangeStream.html","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/range.rs","byte_start":295937,"byte_end":295993,"line_start":5,"line_end":5,"column_start":1,"column_end":57}},{"value":"/ [`Stream`]: ../../stream/trait.Stream.html","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/range.rs","byte_start":295994,"byte_end":296040,"line_start":6,"line_end":6,"column_start":1,"column_end":47}}]},{"kind":"Struct","id":{"krate":0,"index":1693},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/range.rs","byte_start":296394,"byte_end":296399,"line_start":19,"line_end":19,"column_start":12,"column_end":17},"name":"Range","qualname":"::parser::range::Range","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6696},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/range.rs","byte_start":297388,"byte_end":297397,"line_start":55,"line_end":55,"column_start":16,"column_end":25},"name":"Recognize","qualname":"::parser::range::Recognize","value":"Recognize { parser }","parent":null,"children":[{"krate":0,"index":6698},{"krate":0,"index":6699}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/lib.rs","byte_start":20591,"byte_end":20621,"line_start":574,"line_end":574,"column_start":9,"column_end":39}}]},{"kind":"Field","id":{"krate":0,"index":6698},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/range.rs","byte_start":298131,"byte_end":298137,"line_start":74,"line_end":74,"column_start":25,"column_end":31},"name":"parser","qualname":"::parser::range::Recognize::parser","value":"P","parent":{"krate":0,"index":6696},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":6694},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/range.rs","byte_start":298118,"byte_end":298127,"line_start":74,"line_end":74,"column_start":12,"column_end":21},"name":"recognize","qualname":"::parser::range::recognize","value":"pub fn recognize<P>(P) -> Recognize<P> where\n<P::Input as\ncrate::stream::StreamOnce>::Error: crate::error::ParseError<<P::Input as\n                                                            crate::stream::StreamOnce>::Item,\n                                                            <P::Input as\n                                                            crate::stream::StreamOnce>::Range,\n                                                            <P::Input as\n                                                            crate::stream::StreamOnce>::Position>,\nP: Parser, P::Input: RangeStream,\n<P::Input as StreamOnce>::Range: ::stream::Range","parent":null,"children":[],"decl_id":null,"docs":" Zero-copy parser which returns consumed input range.","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/lib.rs","byte_start":23665,"byte_end":23673,"line_start":647,"line_end":647,"column_start":11,"column_end":19}},{"value":"inline(always)","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/lib.rs","byte_start":23684,"byte_end":23701,"line_start":648,"line_end":648,"column_start":9,"column_end":26}}]},{"kind":"Struct","id":{"krate":0,"index":6706},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/range.rs","byte_start":299823,"byte_end":299841,"line_start":136,"line_end":136,"column_start":12,"column_end":30},"name":"RecognizeWithValue","qualname":"::parser::range::RecognizeWithValue","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1721},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/range.rs","byte_start":302313,"byte_end":302333,"line_start":214,"line_end":214,"column_start":8,"column_end":28},"name":"recognize_with_value","qualname":"::parser::range::recognize_with_value","value":"pub fn recognize_with_value<P>(P) -> RecognizeWithValue<P> where P: Parser,\nP::Input: RangeStream, <P::Input as StreamOnce>::Range: ::stream::Range","parent":null,"children":[],"decl_id":null,"docs":" Zero-copy parser which returns a pair: (consumed input range, parsed value).","sig":null,"attributes":[{"value":"/ Zero-copy parser which returns a pair: (consumed input range, parsed value).","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/range.rs","byte_start":301420,"byte_end":301500,"line_start":190,"line_end":190,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/range.rs","byte_start":301501,"byte_end":301504,"line_start":191,"line_end":191,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/range.rs","byte_start":301505,"byte_end":301508,"line_start":192,"line_end":192,"column_start":1,"column_end":4}},{"value":"/ [`combinator::recognize_with_value`][] is a non-`RangeStream` alternative.","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/range.rs","byte_start":301509,"byte_end":301587,"line_start":193,"line_end":193,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/range.rs","byte_start":301588,"byte_end":301591,"line_start":194,"line_end":194,"column_start":1,"column_end":4}},{"value":"/ [`combinator::recognize_with_value`]: ../../parser/combinator/fn.recognize_with_value.html","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/range.rs","byte_start":301592,"byte_end":301686,"line_start":195,"line_end":195,"column_start":1,"column_end":95}},{"value":"/ ```","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/range.rs","byte_start":301687,"byte_end":301694,"line_start":196,"line_end":196,"column_start":1,"column_end":8}},{"value":"/ # extern crate combine;","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/range.rs","byte_start":301695,"byte_end":301722,"line_start":197,"line_end":197,"column_start":1,"column_end":28}},{"value":"/ # use combine::parser::range::recognize_with_value;","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/range.rs","byte_start":301723,"byte_end":301778,"line_start":198,"line_end":198,"column_start":1,"column_end":56}},{"value":"/ # use combine::parser::char::{digit, char};","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/range.rs","byte_start":301779,"byte_end":301826,"line_start":199,"line_end":199,"column_start":1,"column_end":48}},{"value":"/ # use combine::*;","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/range.rs","byte_start":301827,"byte_end":301848,"line_start":200,"line_end":200,"column_start":1,"column_end":22}},{"value":"/ # fn main() {","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/range.rs","byte_start":301849,"byte_end":301866,"line_start":201,"line_end":201,"column_start":1,"column_end":18}},{"value":"/ let mut parser = recognize_with_value((","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/range.rs","byte_start":301867,"byte_end":301910,"line_start":202,"line_end":202,"column_start":1,"column_end":44}},{"value":"/     skip_many1(digit()),","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/range.rs","byte_start":301911,"byte_end":301939,"line_start":203,"line_end":203,"column_start":1,"column_end":29}},{"value":"/     optional((attempt(char('.')), skip_many1(digit()))),","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/range.rs","byte_start":301940,"byte_end":302000,"line_start":204,"line_end":204,"column_start":1,"column_end":61}},{"value":"/ ).map(|(_, opt)| opt.is_some()));","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/range.rs","byte_start":302001,"byte_end":302038,"line_start":205,"line_end":205,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/range.rs","byte_start":302039,"byte_end":302042,"line_start":206,"line_end":206,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser.parse(\"1234!\"), Ok(((\"1234\", false), \"!\")));","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/range.rs","byte_start":302043,"byte_end":302109,"line_start":207,"line_end":207,"column_start":1,"column_end":67}},{"value":"/ assert_eq!(parser.parse(\"1234.0001!\"), Ok(((\"1234.0001\", true), \"!\")));","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/range.rs","byte_start":302110,"byte_end":302185,"line_start":208,"line_end":208,"column_start":1,"column_end":76}},{"value":"/ assert!(parser.parse(\"!\").is_err());","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/range.rs","byte_start":302186,"byte_end":302226,"line_start":209,"line_end":209,"column_start":1,"column_end":41}},{"value":"/ assert!(parser.parse(\"1234.\").is_err());","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/range.rs","byte_start":302227,"byte_end":302271,"line_start":210,"line_end":210,"column_start":1,"column_end":45}},{"value":"/ # }","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/range.rs","byte_start":302272,"byte_end":302279,"line_start":211,"line_end":211,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/range.rs","byte_start":302280,"byte_end":302287,"line_start":212,"line_end":212,"column_start":1,"column_end":8}},{"value":"inline(always)","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/range.rs","byte_start":302288,"byte_end":302305,"line_start":213,"line_end":213,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":1723},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/range.rs","byte_start":303097,"byte_end":303102,"line_start":242,"line_end":242,"column_start":8,"column_end":13},"name":"range","qualname":"::parser::range::range","value":"pub fn range<I>(I::Range) -> Range<I> where I: RangeStream,\nI::Range: PartialEq","parent":null,"children":[],"decl_id":null,"docs":" Zero-copy parser which reads a range of length `i.len()` and succeeds if `i` is equal to that\n range.","sig":null,"attributes":[{"value":"/ Zero-copy parser which reads a range of length `i.len()` and succeeds if `i` is equal to that","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/range.rs","byte_start":302511,"byte_end":302608,"line_start":223,"line_end":223,"column_start":1,"column_end":98}},{"value":"/ range.","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/range.rs","byte_start":302609,"byte_end":302619,"line_start":224,"line_end":224,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/range.rs","byte_start":302620,"byte_end":302623,"line_start":225,"line_end":225,"column_start":1,"column_end":4}},{"value":"/ [`tokens2`][] is a non-`RangeStream` alternative.","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/range.rs","byte_start":302624,"byte_end":302677,"line_start":226,"line_end":226,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/range.rs","byte_start":302678,"byte_end":302681,"line_start":227,"line_end":227,"column_start":1,"column_end":4}},{"value":"/ [`tokens2`]: ../../parser/item/fn.tokens2.html","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/range.rs","byte_start":302682,"byte_end":302732,"line_start":228,"line_end":228,"column_start":1,"column_end":51}},{"value":"/ ```","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/range.rs","byte_start":302733,"byte_end":302740,"line_start":229,"line_end":229,"column_start":1,"column_end":8}},{"value":"/ # extern crate combine;","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/range.rs","byte_start":302741,"byte_end":302768,"line_start":230,"line_end":230,"column_start":1,"column_end":28}},{"value":"/ # use combine::parser::range::range;","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/range.rs","byte_start":302769,"byte_end":302809,"line_start":231,"line_end":231,"column_start":1,"column_end":41}},{"value":"/ # use combine::*;","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/range.rs","byte_start":302810,"byte_end":302831,"line_start":232,"line_end":232,"column_start":1,"column_end":22}},{"value":"/ # fn main() {","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/range.rs","byte_start":302832,"byte_end":302849,"line_start":233,"line_end":233,"column_start":1,"column_end":18}},{"value":"/ let mut parser = range(\"hello\");","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/range.rs","byte_start":302850,"byte_end":302886,"line_start":234,"line_end":234,"column_start":1,"column_end":37}},{"value":"/ let result = parser.parse(\"hello world\");","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/range.rs","byte_start":302887,"byte_end":302932,"line_start":235,"line_end":235,"column_start":1,"column_end":46}},{"value":"/ assert_eq!(result, Ok((\"hello\", \" world\")));","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/range.rs","byte_start":302933,"byte_end":302981,"line_start":236,"line_end":236,"column_start":1,"column_end":49}},{"value":"/ let result = parser.parse(\"hel world\");","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/range.rs","byte_start":302982,"byte_end":303025,"line_start":237,"line_end":237,"column_start":1,"column_end":44}},{"value":"/ assert!(result.is_err());","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/range.rs","byte_start":303026,"byte_end":303055,"line_start":238,"line_end":238,"column_start":1,"column_end":30}},{"value":"/ # }","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/range.rs","byte_start":303056,"byte_end":303063,"line_start":239,"line_end":239,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/range.rs","byte_start":303064,"byte_end":303071,"line_start":240,"line_end":240,"column_start":1,"column_end":8}},{"value":"inline(always)","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/range.rs","byte_start":303072,"byte_end":303089,"line_start":241,"line_end":241,"column_start":1,"column_end":18}}]},{"kind":"Struct","id":{"krate":0,"index":1725},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/range.rs","byte_start":303211,"byte_end":303215,"line_start":250,"line_end":250,"column_start":12,"column_end":16},"name":"Take","qualname":"::parser::range::Take","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1736},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/range.rs","byte_start":304178,"byte_end":304182,"line_start":286,"line_end":286,"column_start":8,"column_end":12},"name":"take","qualname":"::parser::range::take","value":"pub fn take<I>(usize) -> Take<I> where I: RangeStream","parent":null,"children":[],"decl_id":null,"docs":" Zero-copy parser which reads a range of length `n`.","sig":null,"attributes":[{"value":"/ Zero-copy parser which reads a range of length `n`.","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/range.rs","byte_start":303544,"byte_end":303599,"line_start":265,"line_end":265,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/range.rs","byte_start":303600,"byte_end":303603,"line_start":266,"line_end":266,"column_start":1,"column_end":4}},{"value":"/ [`count_min_max`][] is a non-`RangeStream` alternative.","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/range.rs","byte_start":303604,"byte_end":303663,"line_start":267,"line_end":267,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/range.rs","byte_start":303664,"byte_end":303667,"line_start":268,"line_end":268,"column_start":1,"column_end":4}},{"value":"/ [`count_min_max`]: ../../parser/repeat/fn.count_min_max.html","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/range.rs","byte_start":303668,"byte_end":303732,"line_start":269,"line_end":269,"column_start":1,"column_end":65}},{"value":"/ ```","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/range.rs","byte_start":303733,"byte_end":303740,"line_start":270,"line_end":270,"column_start":1,"column_end":8}},{"value":"/ # extern crate combine;","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/range.rs","byte_start":303741,"byte_end":303768,"line_start":271,"line_end":271,"column_start":1,"column_end":28}},{"value":"/ # use combine::parser::range::take;","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/range.rs","byte_start":303769,"byte_end":303808,"line_start":272,"line_end":272,"column_start":1,"column_end":40}},{"value":"/ # use combine::*;","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/range.rs","byte_start":303809,"byte_end":303830,"line_start":273,"line_end":273,"column_start":1,"column_end":22}},{"value":"/ # fn main() {","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/range.rs","byte_start":303831,"byte_end":303848,"line_start":274,"line_end":274,"column_start":1,"column_end":18}},{"value":"/ let mut parser = take(1);","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/range.rs","byte_start":303849,"byte_end":303878,"line_start":275,"line_end":275,"column_start":1,"column_end":30}},{"value":"/ let result = parser.parse(\"1\");","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/range.rs","byte_start":303879,"byte_end":303914,"line_start":276,"line_end":276,"column_start":1,"column_end":36}},{"value":"/ assert_eq!(result, Ok((\"1\", \"\")));","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/range.rs","byte_start":303915,"byte_end":303953,"line_start":277,"line_end":277,"column_start":1,"column_end":39}},{"value":"/ let mut parser = take(4);","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/range.rs","byte_start":303954,"byte_end":303983,"line_start":278,"line_end":278,"column_start":1,"column_end":30}},{"value":"/ let result = parser.parse(\"123abc\");","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/range.rs","byte_start":303984,"byte_end":304024,"line_start":279,"line_end":279,"column_start":1,"column_end":41}},{"value":"/ assert_eq!(result, Ok((\"123a\", \"bc\")));","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/range.rs","byte_start":304025,"byte_end":304068,"line_start":280,"line_end":280,"column_start":1,"column_end":44}},{"value":"/ let result = parser.parse(\"abc\");","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/range.rs","byte_start":304069,"byte_end":304106,"line_start":281,"line_end":281,"column_start":1,"column_end":38}},{"value":"/ assert!(result.is_err());","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/range.rs","byte_start":304107,"byte_end":304136,"line_start":282,"line_end":282,"column_start":1,"column_end":30}},{"value":"/ # }","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/range.rs","byte_start":304137,"byte_end":304144,"line_start":283,"line_end":283,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/range.rs","byte_start":304145,"byte_end":304152,"line_start":284,"line_end":284,"column_start":1,"column_end":8}},{"value":"inline(always)","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/range.rs","byte_start":304153,"byte_end":304170,"line_start":285,"line_end":285,"column_start":1,"column_end":18}}]},{"kind":"Struct","id":{"krate":0,"index":1738},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/range.rs","byte_start":304274,"byte_end":304283,"line_start":293,"line_end":293,"column_start":12,"column_end":21},"name":"TakeWhile","qualname":"::parser::range::TakeWhile","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1754},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/range.rs","byte_start":305612,"byte_end":305622,"line_start":344,"line_end":344,"column_start":8,"column_end":18},"name":"take_while","qualname":"::parser::range::take_while","value":"pub fn take_while<I, F>(F) -> TakeWhile<I, F> where I: RangeStream,\nI::Range: ::stream::Range, F: FnMut(I::Item) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Zero-copy parser which reads a range of 0 or more tokens which satisfy `f`.","sig":null,"attributes":[{"value":"/ Zero-copy parser which reads a range of 0 or more tokens which satisfy `f`.","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/range.rs","byte_start":305040,"byte_end":305119,"line_start":326,"line_end":326,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/range.rs","byte_start":305120,"byte_end":305123,"line_start":327,"line_end":327,"column_start":1,"column_end":4}},{"value":"/ [`many`][] is a non-`RangeStream` alternative.","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/range.rs","byte_start":305124,"byte_end":305174,"line_start":328,"line_end":328,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/range.rs","byte_start":305175,"byte_end":305178,"line_start":329,"line_end":329,"column_start":1,"column_end":4}},{"value":"/ [`many`]: ../../parser/repeat/fn.many.html","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/range.rs","byte_start":305179,"byte_end":305225,"line_start":330,"line_end":330,"column_start":1,"column_end":47}},{"value":"/ ```","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/range.rs","byte_start":305226,"byte_end":305233,"line_start":331,"line_end":331,"column_start":1,"column_end":8}},{"value":"/ # extern crate combine;","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/range.rs","byte_start":305234,"byte_end":305261,"line_start":332,"line_end":332,"column_start":1,"column_end":28}},{"value":"/ # use combine::parser::range::take_while;","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/range.rs","byte_start":305262,"byte_end":305307,"line_start":333,"line_end":333,"column_start":1,"column_end":46}},{"value":"/ # use combine::*;","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/range.rs","byte_start":305308,"byte_end":305329,"line_start":334,"line_end":334,"column_start":1,"column_end":22}},{"value":"/ # fn main() {","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/range.rs","byte_start":305330,"byte_end":305347,"line_start":335,"line_end":335,"column_start":1,"column_end":18}},{"value":"/ let mut parser = take_while(|c: char| c.is_digit(10));","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/range.rs","byte_start":305348,"byte_end":305406,"line_start":336,"line_end":336,"column_start":1,"column_end":59}},{"value":"/ let result = parser.parse(\"123abc\");","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/range.rs","byte_start":305407,"byte_end":305447,"line_start":337,"line_end":337,"column_start":1,"column_end":41}},{"value":"/ assert_eq!(result, Ok((\"123\", \"abc\")));","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/range.rs","byte_start":305448,"byte_end":305491,"line_start":338,"line_end":338,"column_start":1,"column_end":44}},{"value":"/ let result = parser.parse(\"abc\");","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/range.rs","byte_start":305492,"byte_end":305529,"line_start":339,"line_end":339,"column_start":1,"column_end":38}},{"value":"/ assert_eq!(result, Ok((\"\", \"abc\")));","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/range.rs","byte_start":305530,"byte_end":305570,"line_start":340,"line_end":340,"column_start":1,"column_end":41}},{"value":"/ # }","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/range.rs","byte_start":305571,"byte_end":305578,"line_start":341,"line_end":341,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/range.rs","byte_start":305579,"byte_end":305586,"line_start":342,"line_end":342,"column_start":1,"column_end":8}},{"value":"inline(always)","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/range.rs","byte_start":305587,"byte_end":305604,"line_start":343,"line_end":343,"column_start":1,"column_end":18}}]},{"kind":"Struct","id":{"krate":0,"index":1757},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/range.rs","byte_start":305788,"byte_end":305798,"line_start":353,"line_end":353,"column_start":12,"column_end":22},"name":"TakeWhile1","qualname":"::parser::range::TakeWhile1","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1773},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/range.rs","byte_start":307123,"byte_end":307134,"line_start":404,"line_end":404,"column_start":8,"column_end":19},"name":"take_while1","qualname":"::parser::range::take_while1","value":"pub fn take_while1<I, F>(F) -> TakeWhile1<I, F> where I: RangeStream,\nI::Range: ::stream::Range, F: FnMut(I::Item) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Zero-copy parser which reads a range of 1 or more tokens which satisfy `f`.","sig":null,"attributes":[{"value":"/ Zero-copy parser which reads a range of 1 or more tokens which satisfy `f`.","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/range.rs","byte_start":306557,"byte_end":306636,"line_start":386,"line_end":386,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/range.rs","byte_start":306637,"byte_end":306640,"line_start":387,"line_end":387,"column_start":1,"column_end":4}},{"value":"/ [`many1`][] is a non-`RangeStream` alternative.","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/range.rs","byte_start":306641,"byte_end":306692,"line_start":388,"line_end":388,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/range.rs","byte_start":306693,"byte_end":306696,"line_start":389,"line_end":389,"column_start":1,"column_end":4}},{"value":"/ [`many1`]: ../../parser/repeat/fn.many1.html","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/range.rs","byte_start":306697,"byte_end":306745,"line_start":390,"line_end":390,"column_start":1,"column_end":49}},{"value":"/ ```","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/range.rs","byte_start":306746,"byte_end":306753,"line_start":391,"line_end":391,"column_start":1,"column_end":8}},{"value":"/ # extern crate combine;","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/range.rs","byte_start":306754,"byte_end":306781,"line_start":392,"line_end":392,"column_start":1,"column_end":28}},{"value":"/ # use combine::parser::range::take_while1;","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/range.rs","byte_start":306782,"byte_end":306828,"line_start":393,"line_end":393,"column_start":1,"column_end":47}},{"value":"/ # use combine::*;","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/range.rs","byte_start":306829,"byte_end":306850,"line_start":394,"line_end":394,"column_start":1,"column_end":22}},{"value":"/ # fn main() {","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/range.rs","byte_start":306851,"byte_end":306868,"line_start":395,"line_end":395,"column_start":1,"column_end":18}},{"value":"/ let mut parser = take_while1(|c: char| c.is_digit(10));","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/range.rs","byte_start":306869,"byte_end":306928,"line_start":396,"line_end":396,"column_start":1,"column_end":60}},{"value":"/ let result = parser.parse(\"123abc\");","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/range.rs","byte_start":306929,"byte_end":306969,"line_start":397,"line_end":397,"column_start":1,"column_end":41}},{"value":"/ assert_eq!(result, Ok((\"123\", \"abc\")));","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/range.rs","byte_start":306970,"byte_end":307013,"line_start":398,"line_end":398,"column_start":1,"column_end":44}},{"value":"/ let result = parser.parse(\"abc\");","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/range.rs","byte_start":307014,"byte_end":307051,"line_start":399,"line_end":399,"column_start":1,"column_end":38}},{"value":"/ assert!(result.is_err());","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/range.rs","byte_start":307052,"byte_end":307081,"line_start":400,"line_end":400,"column_start":1,"column_end":30}},{"value":"/ # }","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/range.rs","byte_start":307082,"byte_end":307089,"line_start":401,"line_end":401,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/range.rs","byte_start":307090,"byte_end":307097,"line_start":402,"line_end":402,"column_start":1,"column_end":8}},{"value":"inline(always)","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/range.rs","byte_start":307098,"byte_end":307115,"line_start":403,"line_end":403,"column_start":1,"column_end":18}}]},{"kind":"Struct","id":{"krate":0,"index":1776},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/range.rs","byte_start":307302,"byte_end":307316,"line_start":413,"line_end":413,"column_start":12,"column_end":26},"name":"TakeUntilRange","qualname":"::parser::range::TakeUntilRange","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1787},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/range.rs","byte_start":311485,"byte_end":311501,"line_start":523,"line_end":523,"column_start":8,"column_end":24},"name":"take_until_range","qualname":"::parser::range::take_until_range","value":"pub fn take_until_range<I>(I::Range) -> TakeUntilRange<I> where I: RangeStream","parent":null,"children":[],"decl_id":null,"docs":" Zero-copy parser which reads a range of 0 or more tokens until `r` is found.","sig":null,"attributes":[{"value":"/ Zero-copy parser which reads a range of 0 or more tokens until `r` is found.","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/range.rs","byte_start":310737,"byte_end":310817,"line_start":502,"line_end":502,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/range.rs","byte_start":310818,"byte_end":310821,"line_start":503,"line_end":503,"column_start":1,"column_end":4}},{"value":"/ The range `r` will not be consumed. If `r` is not found, the parser will","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/range.rs","byte_start":310822,"byte_end":310898,"line_start":504,"line_end":504,"column_start":1,"column_end":77}},{"value":"/ return an error.","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/range.rs","byte_start":310899,"byte_end":310919,"line_start":505,"line_end":505,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/range.rs","byte_start":310920,"byte_end":310923,"line_start":506,"line_end":506,"column_start":1,"column_end":4}},{"value":"/ [`repeat::take_until`][] is a non-`RangeStream` alternative.","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/range.rs","byte_start":310924,"byte_end":310988,"line_start":507,"line_end":507,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/range.rs","byte_start":310989,"byte_end":310992,"line_start":508,"line_end":508,"column_start":1,"column_end":4}},{"value":"/ [`repeat::take_until`]: ../../parser/repeat/fn.take_until.html","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/range.rs","byte_start":310993,"byte_end":311059,"line_start":509,"line_end":509,"column_start":1,"column_end":67}},{"value":"/ ```","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/range.rs","byte_start":311060,"byte_end":311067,"line_start":510,"line_end":510,"column_start":1,"column_end":8}},{"value":"/ # extern crate combine;","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/range.rs","byte_start":311068,"byte_end":311095,"line_start":511,"line_end":511,"column_start":1,"column_end":28}},{"value":"/ # use combine::parser::range::{range, take_until_range};","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/range.rs","byte_start":311096,"byte_end":311156,"line_start":512,"line_end":512,"column_start":1,"column_end":61}},{"value":"/ # use combine::*;","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/range.rs","byte_start":311157,"byte_end":311178,"line_start":513,"line_end":513,"column_start":1,"column_end":22}},{"value":"/ # fn main() {","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/range.rs","byte_start":311179,"byte_end":311196,"line_start":514,"line_end":514,"column_start":1,"column_end":18}},{"value":"/ let mut parser = take_until_range(\"\\r\\n\");","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/range.rs","byte_start":311197,"byte_end":311243,"line_start":515,"line_end":515,"column_start":1,"column_end":47}},{"value":"/ let result = parser.parse(\"To: user@example.com\\r\\n\");","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/range.rs","byte_start":311244,"byte_end":311302,"line_start":516,"line_end":516,"column_start":1,"column_end":59}},{"value":"/ assert_eq!(result, Ok((\"To: user@example.com\", \"\\r\\n\")));","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/range.rs","byte_start":311303,"byte_end":311364,"line_start":517,"line_end":517,"column_start":1,"column_end":62}},{"value":"/ let result = parser.parse(\"Hello, world\\n\");","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/range.rs","byte_start":311365,"byte_end":311413,"line_start":518,"line_end":518,"column_start":1,"column_end":49}},{"value":"/ assert!(result.is_err());","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/range.rs","byte_start":311414,"byte_end":311443,"line_start":519,"line_end":519,"column_start":1,"column_end":30}},{"value":"/ # }","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/range.rs","byte_start":311444,"byte_end":311451,"line_start":520,"line_end":520,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/range.rs","byte_start":311452,"byte_end":311459,"line_start":521,"line_end":521,"column_start":1,"column_end":8}},{"value":"inline(always)","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/range.rs","byte_start":311460,"byte_end":311477,"line_start":522,"line_end":522,"column_start":1,"column_end":18}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6720},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/range.rs","byte_start":311686,"byte_end":311691,"line_start":533,"line_end":533,"column_start":5,"column_end":10},"name":"Found","qualname":"::parser::range::TakeRange::Found","value":"TakeRange::Found(usize)","parent":{"krate":0,"index":6719},"children":[],"decl_id":null,"docs":" Found the pattern at this offset\n","sig":null,"attributes":[{"value":"/ Found the pattern at this offset","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/range.rs","byte_start":311645,"byte_end":311681,"line_start":532,"line_end":532,"column_start":5,"column_end":41}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6723},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/range.rs","byte_start":311783,"byte_end":311791,"line_start":535,"line_end":535,"column_start":5,"column_end":13},"name":"NotFound","qualname":"::parser::range::TakeRange::NotFound","value":"TakeRange::NotFound(usize)","parent":{"krate":0,"index":6719},"children":[],"decl_id":null,"docs":" Did not find the pattern but the parser can skip ahead to this offset.\n","sig":null,"attributes":[{"value":"/ Did not find the pattern but the parser can skip ahead to this offset.","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/range.rs","byte_start":311704,"byte_end":311778,"line_start":534,"line_end":534,"column_start":5,"column_end":79}}]},{"kind":"Enum","id":{"krate":0,"index":6719},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/range.rs","byte_start":311629,"byte_end":311638,"line_start":531,"line_end":531,"column_start":10,"column_end":19},"name":"TakeRange","qualname":"::parser::range::TakeRange","value":"pub enum TakeRange {\n\n    /// Found the pattern at this offset\n    Found(usize),\n\n    /// Did not find the pattern but the parser can skip ahead to this offset.\n    NotFound(usize),\n}","parent":null,"children":[{"krate":0,"index":6720},{"krate":0,"index":6723}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1791},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/range.rs","byte_start":312029,"byte_end":312035,"line_start":547,"line_end":547,"column_start":12,"column_end":18},"name":"TakeFn","qualname":"::parser::range::TakeFn","value":"TakeFn {  }","parent":null,"children":[{"krate":0,"index":1794},{"krate":0,"index":1795}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1805},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/range.rs","byte_start":314210,"byte_end":314217,"line_start":619,"line_end":619,"column_start":8,"column_end":15},"name":"take_fn","qualname":"::parser::range::take_fn","value":"pub fn take_fn<F, R, I>(F) -> TakeFn<F, I> where F: FnMut(I::Range) -> R,\nR: Into<TakeRange>, I: FullRangeStream, I::Range: ::stream::Range","parent":null,"children":[],"decl_id":null,"docs":" Searches the entire range using `searcher` and then consumes a range of `Some(n)`.\n If `f` can not find anything in the range it must return `None/NotFound` which indicates an end of input error.","sig":null,"attributes":[{"value":"/ Searches the entire range using `searcher` and then consumes a range of `Some(n)`.","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/range.rs","byte_start":313678,"byte_end":313764,"line_start":610,"line_end":610,"column_start":1,"column_end":87}},{"value":"/ If `f` can not find anything in the range it must return `None/NotFound` which indicates an end of input error.","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/range.rs","byte_start":313765,"byte_end":313880,"line_start":611,"line_end":611,"column_start":1,"column_end":116}},{"value":"/","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/range.rs","byte_start":313881,"byte_end":313884,"line_start":612,"line_end":612,"column_start":1,"column_end":4}},{"value":"/ If partial parsing is used the `TakeRange` enum can be returned instead of `Option`. By","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/range.rs","byte_start":313885,"byte_end":313976,"line_start":613,"line_end":613,"column_start":1,"column_end":92}},{"value":"/ returning `TakeRange::NotFound(n)` it indicates that the input can skip ahead until `n`","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/range.rs","byte_start":313977,"byte_end":314068,"line_start":614,"line_end":614,"column_start":1,"column_end":92}},{"value":"/ when parsing is next resumed.","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/range.rs","byte_start":314069,"byte_end":314102,"line_start":615,"line_end":615,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/range.rs","byte_start":314103,"byte_end":314106,"line_start":616,"line_end":616,"column_start":1,"column_end":4}},{"value":"/ See [`take_until_bytes`](../byte/fn.take_until_bytes.html) for a usecase.","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/range.rs","byte_start":314107,"byte_end":314184,"line_start":617,"line_end":617,"column_start":1,"column_end":78}},{"value":"inline(always)","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/range.rs","byte_start":314185,"byte_end":314202,"line_start":618,"line_end":618,"column_start":1,"column_end":18}}]},{"kind":"Mod","id":{"krate":0,"index":1809},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"repeat","qualname":"::parser::repeat","value":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","parent":null,"children":[{"krate":0,"index":1810},{"krate":0,"index":1811},{"krate":0,"index":8418},{"krate":0,"index":1812},{"krate":0,"index":1813},{"krate":0,"index":1814},{"krate":0,"index":1815},{"krate":0,"index":1816},{"krate":0,"index":1817},{"krate":0,"index":1818},{"krate":0,"index":1819},{"krate":0,"index":1820},{"krate":0,"index":1821},{"krate":0,"index":1822},{"krate":0,"index":1823},{"krate":0,"index":1824},{"krate":0,"index":1825},{"krate":0,"index":1826},{"krate":0,"index":1827},{"krate":0,"index":1828},{"krate":0,"index":1829},{"krate":0,"index":1830},{"krate":0,"index":1831},{"krate":0,"index":1832},{"krate":0,"index":1833},{"krate":0,"index":1834},{"krate":0,"index":1835},{"krate":0,"index":1836},{"krate":0,"index":1837},{"krate":0,"index":1838},{"krate":0,"index":1839},{"krate":0,"index":8466},{"krate":0,"index":1840},{"krate":0,"index":1841},{"krate":0,"index":6747},{"krate":0,"index":6757},{"krate":0,"index":6753},{"krate":0,"index":6734},{"krate":0,"index":6744},{"krate":0,"index":6775},{"krate":0,"index":6783},{"krate":0,"index":6780},{"krate":0,"index":6762},{"krate":0,"index":6773},{"krate":0,"index":6788},{"krate":0,"index":6799},{"krate":0,"index":6795},{"krate":0,"index":1842},{"krate":0,"index":1853},{"krate":0,"index":6817},{"krate":0,"index":6826},{"krate":0,"index":6823},{"krate":0,"index":6804},{"krate":0,"index":6815},{"krate":0,"index":1856},{"krate":0,"index":1867},{"krate":0,"index":1876},{"krate":0,"index":1890},{"krate":0,"index":6831},{"krate":0,"index":6841},{"krate":0,"index":6837},{"krate":0,"index":1897},{"krate":0,"index":1908},{"krate":0,"index":6846},{"krate":0,"index":6856},{"krate":0,"index":6852},{"krate":0,"index":1911},{"krate":0,"index":1921},{"krate":0,"index":6863},{"krate":0,"index":6865},{"krate":0,"index":1924},{"krate":0,"index":1926},{"krate":0,"index":6872},{"krate":0,"index":6876},{"krate":0,"index":6867},{"krate":0,"index":1930},{"krate":0,"index":6890},{"krate":0,"index":6894},{"krate":0,"index":6885},{"krate":0,"index":1932},{"krate":0,"index":6903},{"krate":0,"index":6915},{"krate":0,"index":6910},{"krate":0,"index":1934},{"krate":0,"index":1945},{"krate":0,"index":6923},{"krate":0,"index":6935},{"krate":0,"index":6930},{"krate":0,"index":1949},{"krate":0,"index":1961},{"krate":0,"index":6943},{"krate":0,"index":6955},{"krate":0,"index":6950},{"krate":0,"index":1965},{"krate":0,"index":1976},{"krate":0,"index":6961},{"krate":0,"index":6973},{"krate":0,"index":6968},{"krate":0,"index":1980},{"krate":0,"index":1993},{"krate":0,"index":6979},{"krate":0,"index":6989},{"krate":0,"index":6985},{"krate":0,"index":1997},{"krate":0,"index":2007},{"krate":0,"index":6994},{"krate":0,"index":7004},{"krate":0,"index":7000},{"krate":0,"index":2010},{"krate":0,"index":2019},{"krate":0,"index":7007},{"krate":0,"index":7016},{"krate":0,"index":7012},{"krate":0,"index":2022},{"krate":0,"index":2030},{"krate":0,"index":7032},{"krate":0,"index":7039},{"krate":0,"index":7036},{"krate":0,"index":7021},{"krate":0,"index":7030},{"krate":0,"index":7043},{"krate":0,"index":7048},{"krate":0,"index":2033},{"krate":0,"index":2039},{"krate":0,"index":2048}],"decl_id":null,"docs":" Combinators which take one or more parsers and applies them repeatedly.\n","sig":null,"attributes":[{"value":"/ Combinators which take one or more parsers and applies them repeatedly.","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":317108,"byte_end":317183,"line_start":1,"line_end":1,"column_start":1,"column_end":76}}]},{"kind":"Struct","id":{"krate":0,"index":6747},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":317668,"byte_end":317673,"line_start":19,"line_end":19,"column_start":12,"column_end":17},"name":"Count","qualname":"::parser::repeat::Count","value":"Count { count, parser }","parent":null,"children":[{"krate":0,"index":6750},{"krate":0,"index":6751},{"krate":0,"index":6752}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/lib.rs","byte_start":20591,"byte_end":20621,"line_start":574,"line_end":574,"column_start":9,"column_end":39}}]},{"kind":"Field","id":{"krate":0,"index":6750},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":318089,"byte_end":318094,"line_start":36,"line_end":36,"column_start":20,"column_end":25},"name":"count","qualname":"::parser::repeat::Count::count","value":"usize","parent":{"krate":0,"index":6747},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6751},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":318103,"byte_end":318109,"line_start":36,"line_end":36,"column_start":34,"column_end":40},"name":"parser","qualname":"::parser::repeat::Count::parser","value":"P","parent":{"krate":0,"index":6747},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":6744},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":318077,"byte_end":318082,"line_start":36,"line_end":36,"column_start":8,"column_end":13},"name":"count","qualname":"::parser::repeat::count","value":"pub fn count<F, P>(usize, P) -> Count<F, P> where\n<P::Input as\ncrate::stream::StreamOnce>::Error: crate::error::ParseError<<P::Input as\n                                                            crate::stream::StreamOnce>::Item,\n                                                            <P::Input as\n                                                            crate::stream::StreamOnce>::Range,\n                                                            <P::Input as\n                                                            crate::stream::StreamOnce>::Position>,\nP: Parser, F: Extend<P::Output> + Default","parent":null,"children":[],"decl_id":null,"docs":" Parses `parser` from zero up to `count` times.","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/lib.rs","byte_start":23665,"byte_end":23673,"line_start":647,"line_end":647,"column_start":11,"column_end":19}},{"value":"inline(always)","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/lib.rs","byte_start":23684,"byte_end":23701,"line_start":648,"line_end":648,"column_start":9,"column_end":26}}]},{"kind":"Struct","id":{"krate":0,"index":6775},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":318287,"byte_end":318296,"line_start":49,"line_end":49,"column_start":16,"column_end":25},"name":"SkipCount","qualname":"::parser::repeat::SkipCount","value":"SkipCount { count, parser }","parent":null,"children":[{"krate":0,"index":6777},{"krate":0,"index":6778},{"krate":0,"index":6779}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/lib.rs","byte_start":20591,"byte_end":20621,"line_start":574,"line_end":574,"column_start":9,"column_end":39}}]},{"kind":"Field","id":{"krate":0,"index":6777},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":318839,"byte_end":318844,"line_start":64,"line_end":64,"column_start":26,"column_end":31},"name":"count","qualname":"::parser::repeat::SkipCount::count","value":"usize","parent":{"krate":0,"index":6775},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6778},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":318853,"byte_end":318859,"line_start":64,"line_end":64,"column_start":40,"column_end":46},"name":"parser","qualname":"::parser::repeat::SkipCount::parser","value":"P","parent":{"krate":0,"index":6775},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":6773},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":318825,"byte_end":318835,"line_start":64,"line_end":64,"column_start":12,"column_end":22},"name":"skip_count","qualname":"::parser::repeat::skip_count","value":"pub fn skip_count<P>(usize, P) -> SkipCount<P> where\n<P::Input as\ncrate::stream::StreamOnce>::Error: crate::error::ParseError<<P::Input as\n                                                            crate::stream::StreamOnce>::Item,\n                                                            <P::Input as\n                                                            crate::stream::StreamOnce>::Range,\n                                                            <P::Input as\n                                                            crate::stream::StreamOnce>::Position>,\nP: Parser","parent":null,"children":[],"decl_id":null,"docs":" Parses `parser` from zero up to `count` times skipping the output of `parser`.","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/lib.rs","byte_start":23684,"byte_end":23701,"line_start":648,"line_end":648,"column_start":9,"column_end":26}}]},{"kind":"Struct","id":{"krate":0,"index":6788},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":319048,"byte_end":319059,"line_start":74,"line_end":74,"column_start":12,"column_end":23},"name":"CountMinMax","qualname":"::parser::repeat::CountMinMax","value":"CountMinMax {  }","parent":null,"children":[{"krate":0,"index":6791},{"krate":0,"index":6792},{"krate":0,"index":6793},{"krate":0,"index":6794}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1853},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":320950,"byte_end":320963,"line_start":148,"line_end":148,"column_start":8,"column_end":21},"name":"count_min_max","qualname":"::parser::repeat::count_min_max","value":"pub fn count_min_max<F, P>(usize, usize, P) -> CountMinMax<F, P> where\nP: Parser, F: Extend<P::Output> + Default","parent":null,"children":[],"decl_id":null,"docs":" Parses `parser` from `min` to `max` times (including `min` and `max`).","sig":null,"attributes":[{"value":"/ Parses `parser` from `min` to `max` times (including `min` and `max`).","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":320422,"byte_end":320496,"line_start":128,"line_end":128,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":320497,"byte_end":320500,"line_start":129,"line_end":129,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":320501,"byte_end":320508,"line_start":130,"line_end":130,"column_start":1,"column_end":8}},{"value":"/ # extern crate combine;","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":320509,"byte_end":320536,"line_start":131,"line_end":131,"column_start":1,"column_end":28}},{"value":"/ # use combine::*;","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":320537,"byte_end":320558,"line_start":132,"line_end":132,"column_start":1,"column_end":22}},{"value":"/ # use combine::stream::easy::{Error, Info};","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":320559,"byte_end":320606,"line_start":133,"line_end":133,"column_start":1,"column_end":48}},{"value":"/ # fn main() {","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":320607,"byte_end":320624,"line_start":134,"line_end":134,"column_start":1,"column_end":18}},{"value":"/ let mut parser = count_min_max(2, 2, token(b'a'));","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":320625,"byte_end":320679,"line_start":135,"line_end":135,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":320680,"byte_end":320683,"line_start":136,"line_end":136,"column_start":1,"column_end":4}},{"value":"/ let result = parser.parse(&b\"aaab\"[..]);","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":320684,"byte_end":320728,"line_start":137,"line_end":137,"column_start":1,"column_end":45}},{"value":"/ assert_eq!(result, Ok((b\"aa\"[..].to_owned(), &b\"ab\"[..])));","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":320729,"byte_end":320792,"line_start":138,"line_end":138,"column_start":1,"column_end":64}},{"value":"/ let result = parser.parse(&b\"ab\"[..]);","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":320793,"byte_end":320835,"line_start":139,"line_end":139,"column_start":1,"column_end":43}},{"value":"/ assert!(result.is_err());","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":320836,"byte_end":320865,"line_start":140,"line_end":140,"column_start":1,"column_end":30}},{"value":"/ # }","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":320866,"byte_end":320873,"line_start":141,"line_end":141,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":320874,"byte_end":320881,"line_start":142,"line_end":142,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":320882,"byte_end":320885,"line_start":143,"line_end":143,"column_start":1,"column_end":4}},{"value":"/ # Panics","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":320886,"byte_end":320898,"line_start":144,"line_end":144,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":320899,"byte_end":320902,"line_start":145,"line_end":145,"column_start":1,"column_end":4}},{"value":"/ If `min` > `max`.","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":320903,"byte_end":320924,"line_start":146,"line_end":146,"column_start":1,"column_end":22}},{"value":"inline(always)","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":320925,"byte_end":320942,"line_start":147,"line_end":147,"column_start":1,"column_end":18}}]},{"kind":"Struct","id":{"krate":0,"index":6817},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":321272,"byte_end":321287,"line_start":165,"line_end":165,"column_start":16,"column_end":31},"name":"SkipCountMinMax","qualname":"::parser::repeat::SkipCountMinMax","value":"SkipCountMinMax { min, max, parser }","parent":null,"children":[{"krate":0,"index":6819},{"krate":0,"index":6820},{"krate":0,"index":6821},{"krate":0,"index":6822}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/lib.rs","byte_start":20591,"byte_end":20621,"line_start":574,"line_end":574,"column_start":9,"column_end":39}}]},{"kind":"Field","id":{"krate":0,"index":6819},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":321975,"byte_end":321978,"line_start":186,"line_end":186,"column_start":34,"column_end":37},"name":"min","qualname":"::parser::repeat::SkipCountMinMax::min","value":"usize","parent":{"krate":0,"index":6817},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6820},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":321987,"byte_end":321990,"line_start":186,"line_end":186,"column_start":46,"column_end":49},"name":"max","qualname":"::parser::repeat::SkipCountMinMax::max","value":"usize","parent":{"krate":0,"index":6817},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6821},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":321999,"byte_end":322005,"line_start":186,"line_end":186,"column_start":58,"column_end":64},"name":"parser","qualname":"::parser::repeat::SkipCountMinMax::parser","value":"P","parent":{"krate":0,"index":6817},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":6815},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":321953,"byte_end":321971,"line_start":186,"line_end":186,"column_start":12,"column_end":30},"name":"skip_count_min_max","qualname":"::parser::repeat::skip_count_min_max","value":"pub fn skip_count_min_max<P>(usize, usize, P) -> SkipCountMinMax<P> where\n<P::Input as\ncrate::stream::StreamOnce>::Error: crate::error::ParseError<<P::Input as\n                                                            crate::stream::StreamOnce>::Item,\n                                                            <P::Input as\n                                                            crate::stream::StreamOnce>::Range,\n                                                            <P::Input as\n                                                            crate::stream::StreamOnce>::Position>,\nP: Parser","parent":null,"children":[],"decl_id":null,"docs":" Parses `parser` from `min` to `max` times (including `min` and `max`)\n skipping the output of `parser`.","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/lib.rs","byte_start":23684,"byte_end":23701,"line_start":648,"line_end":648,"column_start":9,"column_end":26}}]},{"kind":"Struct","id":{"krate":0,"index":1856},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":322183,"byte_end":322187,"line_start":195,"line_end":195,"column_start":12,"column_end":16},"name":"Iter","qualname":"::parser::repeat::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":1861},{"krate":0,"index":1862},{"krate":0,"index":1863},{"krate":0,"index":1864},{"krate":0,"index":1865},{"krate":0,"index":1866}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1881},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":322547,"byte_end":322550,"line_start":217,"line_end":217,"column_start":12,"column_end":15},"name":"new","qualname":"<Iter>::new","value":"pub fn new(P, M, &'a mut P::Input, S) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1882},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":322956,"byte_end":322967,"line_start":229,"line_end":229,"column_start":12,"column_end":23},"name":"into_result","qualname":"<Iter>::into_result","value":"pub fn into_result<O>(Self, O) -> ParseResult<O, P::Input>","parent":null,"children":[],"decl_id":null,"docs":" Converts the iterator to a `ParseResult`, returning `Ok` if the parsing so far has be done\n without any errors which consumed data.\n","sig":null,"attributes":[{"value":"/ Converts the iterator to a `ParseResult`, returning `Ok` if the parsing so far has be done","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":322802,"byte_end":322896,"line_start":227,"line_end":227,"column_start":5,"column_end":99}},{"value":"/ without any errors which consumed data.","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":322901,"byte_end":322944,"line_start":228,"line_end":228,"column_start":5,"column_end":48}}]},{"kind":"Struct","id":{"krate":0,"index":6831},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":325638,"byte_end":325642,"line_start":324,"line_end":324,"column_start":12,"column_end":16},"name":"Many","qualname":"::parser::repeat::Many","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1908},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":327519,"byte_end":327523,"line_start":391,"line_end":391,"column_start":8,"column_end":12},"name":"many","qualname":"::parser::repeat::many","value":"pub fn many<F, P>(P) -> Many<F, P> where P: Parser, F: Extend<P::Output> +\nDefault","parent":null,"children":[],"decl_id":null,"docs":" Parses `p` zero or more times returning a collection with the values from `p`.","sig":null,"attributes":[{"value":"/ Parses `p` zero or more times returning a collection with the values from `p`.","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":326737,"byte_end":326819,"line_start":370,"line_end":370,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":326820,"byte_end":326823,"line_start":371,"line_end":371,"column_start":1,"column_end":4}},{"value":"/ If the returned collection cannot be inferred type annotations must be supplied, either by","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":326824,"byte_end":326918,"line_start":372,"line_end":372,"column_start":1,"column_end":95}},{"value":"/ annotating the resulting type binding `let collection: Vec<_> = ...` or by specializing when","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":326919,"byte_end":327015,"line_start":373,"line_end":373,"column_start":1,"column_end":97}},{"value":"/ calling many, `many::<Vec<_>, _>(...)`.","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":327016,"byte_end":327059,"line_start":374,"line_end":374,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":327060,"byte_end":327063,"line_start":375,"line_end":375,"column_start":1,"column_end":4}},{"value":"/ NOTE: If `p` can succeed without consuming any input this may hang forever as `many` will","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":327064,"byte_end":327157,"line_start":376,"line_end":376,"column_start":1,"column_end":94}},{"value":"/ repeatedly use `p` to parse the same location in the input every time","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":327158,"byte_end":327231,"line_start":377,"line_end":377,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":327232,"byte_end":327235,"line_start":378,"line_end":378,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":327236,"byte_end":327243,"line_start":379,"line_end":379,"column_start":1,"column_end":8}},{"value":"/ # extern crate combine;","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":327244,"byte_end":327271,"line_start":380,"line_end":380,"column_start":1,"column_end":28}},{"value":"/ # use combine::*;","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":327272,"byte_end":327293,"line_start":381,"line_end":381,"column_start":1,"column_end":22}},{"value":"/ # use combine::parser::char::digit;","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":327294,"byte_end":327333,"line_start":382,"line_end":382,"column_start":1,"column_end":40}},{"value":"/ # fn main() {","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":327334,"byte_end":327351,"line_start":383,"line_end":383,"column_start":1,"column_end":18}},{"value":"/ let result = many(digit())","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":327352,"byte_end":327382,"line_start":384,"line_end":384,"column_start":1,"column_end":31}},{"value":"/     .parse(\"123A\")","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":327383,"byte_end":327405,"line_start":385,"line_end":385,"column_start":1,"column_end":23}},{"value":"/     .map(|x| x.0);","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":327406,"byte_end":327428,"line_start":386,"line_end":386,"column_start":1,"column_end":23}},{"value":"/ assert_eq!(result, Ok(vec!['1', '2', '3']));","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":327429,"byte_end":327477,"line_start":387,"line_end":387,"column_start":1,"column_end":49}},{"value":"/ # }","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":327478,"byte_end":327485,"line_start":388,"line_end":388,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":327486,"byte_end":327493,"line_start":389,"line_end":389,"column_start":1,"column_end":8}},{"value":"inline(always)","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":327494,"byte_end":327511,"line_start":390,"line_end":390,"column_start":1,"column_end":18}}]},{"kind":"Struct","id":{"krate":0,"index":6846},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":327671,"byte_end":327676,"line_start":400,"line_end":400,"column_start":12,"column_end":17},"name":"Many1","qualname":"::parser::repeat::Many1","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1921},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":330023,"byte_end":330028,"line_start":482,"line_end":482,"column_start":8,"column_end":13},"name":"many1","qualname":"::parser::repeat::many1","value":"pub fn many1<F, P>(P) -> Many1<F, P> where F: Extend<P::Output> + Default,\nP: Parser","parent":null,"children":[],"decl_id":null,"docs":" Parses `p` one or more times returning a collection with the values from `p`.","sig":null,"attributes":[{"value":"/ Parses `p` one or more times returning a collection with the values from `p`.","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":329263,"byte_end":329344,"line_start":461,"line_end":461,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":329345,"byte_end":329348,"line_start":462,"line_end":462,"column_start":1,"column_end":4}},{"value":"/ If the returned collection cannot be inferred type annotations must be supplied, either by","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":329349,"byte_end":329443,"line_start":463,"line_end":463,"column_start":1,"column_end":95}},{"value":"/ annotating the resulting type binding `let collection: Vec<_> = ...` or by specializing when","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":329444,"byte_end":329540,"line_start":464,"line_end":464,"column_start":1,"column_end":97}},{"value":"/ calling many1 `many1::<Vec<_>, _>(...)`.","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":329541,"byte_end":329585,"line_start":465,"line_end":465,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":329586,"byte_end":329589,"line_start":466,"line_end":466,"column_start":1,"column_end":4}},{"value":"/ NOTE: If `p` can succeed without consuming any input this may hang forever as `many1` will","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":329590,"byte_end":329684,"line_start":467,"line_end":467,"column_start":1,"column_end":95}},{"value":"/ repeatedly use `p` to parse the same location in the input every time","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":329685,"byte_end":329758,"line_start":468,"line_end":468,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":329759,"byte_end":329762,"line_start":469,"line_end":469,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":329763,"byte_end":329766,"line_start":470,"line_end":470,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":329767,"byte_end":329774,"line_start":471,"line_end":471,"column_start":1,"column_end":8}},{"value":"/ # extern crate combine;","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":329775,"byte_end":329802,"line_start":472,"line_end":472,"column_start":1,"column_end":28}},{"value":"/ # use combine::*;","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":329803,"byte_end":329824,"line_start":473,"line_end":473,"column_start":1,"column_end":22}},{"value":"/ # use combine::parser::char::digit;","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":329825,"byte_end":329864,"line_start":474,"line_end":474,"column_start":1,"column_end":40}},{"value":"/ # fn main() {","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":329865,"byte_end":329882,"line_start":475,"line_end":475,"column_start":1,"column_end":18}},{"value":"/ let result = many1::<Vec<_>, _>(digit())","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":329883,"byte_end":329927,"line_start":476,"line_end":476,"column_start":1,"column_end":45}},{"value":"/     .parse(\"A123\");","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":329928,"byte_end":329951,"line_start":477,"line_end":477,"column_start":1,"column_end":24}},{"value":"/ assert!(result.is_err());","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":329952,"byte_end":329981,"line_start":478,"line_end":478,"column_start":1,"column_end":30}},{"value":"/ # }","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":329982,"byte_end":329989,"line_start":479,"line_end":479,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":329990,"byte_end":329997,"line_start":480,"line_end":480,"column_start":1,"column_end":8}},{"value":"inline(always)","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":329998,"byte_end":330015,"line_start":481,"line_end":481,"column_start":1,"column_end":18}}]},{"kind":"Struct","id":{"krate":0,"index":6863},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":330217,"byte_end":330221,"line_start":493,"line_end":493,"column_start":12,"column_end":16},"name":"Sink","qualname":"::parser::repeat::Sink","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6872},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":330463,"byte_end":330471,"line_start":510,"line_end":510,"column_start":16,"column_end":24},"name":"SkipMany","qualname":"::parser::repeat::SkipMany","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1930},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":330999,"byte_end":331008,"line_start":528,"line_end":528,"column_start":8,"column_end":17},"name":"skip_many","qualname":"::parser::repeat::skip_many","value":"pub fn skip_many<P>(P) -> SkipMany<P> where P: Parser","parent":null,"children":[],"decl_id":null,"docs":" Parses `p` zero or more times ignoring the result.","sig":null,"attributes":[{"value":"/ Parses `p` zero or more times ignoring the result.","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":330510,"byte_end":330564,"line_start":512,"line_end":512,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":330565,"byte_end":330568,"line_start":513,"line_end":513,"column_start":1,"column_end":4}},{"value":"/ NOTE: If `p` can succeed without consuming any input this may hang forever as `skip_many` will","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":330569,"byte_end":330667,"line_start":514,"line_end":514,"column_start":1,"column_end":99}},{"value":"/ repeatedly use `p` to parse the same location in the input every time","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":330668,"byte_end":330741,"line_start":515,"line_end":515,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":330742,"byte_end":330745,"line_start":516,"line_end":516,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":330746,"byte_end":330753,"line_start":517,"line_end":517,"column_start":1,"column_end":8}},{"value":"/ # extern crate combine;","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":330754,"byte_end":330781,"line_start":518,"line_end":518,"column_start":1,"column_end":28}},{"value":"/ # use combine::*;","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":330782,"byte_end":330803,"line_start":519,"line_end":519,"column_start":1,"column_end":22}},{"value":"/ # use combine::parser::char::digit;","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":330804,"byte_end":330843,"line_start":520,"line_end":520,"column_start":1,"column_end":40}},{"value":"/ # fn main() {","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":330844,"byte_end":330861,"line_start":521,"line_end":521,"column_start":1,"column_end":18}},{"value":"/ let result = skip_many(digit())","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":330862,"byte_end":330897,"line_start":522,"line_end":522,"column_start":1,"column_end":36}},{"value":"/     .parse(\"A\");","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":330898,"byte_end":330918,"line_start":523,"line_end":523,"column_start":1,"column_end":21}},{"value":"/ assert_eq!(result, Ok(((), \"A\")));","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":330919,"byte_end":330957,"line_start":524,"line_end":524,"column_start":1,"column_end":39}},{"value":"/ # }","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":330958,"byte_end":330965,"line_start":525,"line_end":525,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":330966,"byte_end":330973,"line_start":526,"line_end":526,"column_start":1,"column_end":8}},{"value":"inline(always)","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":330974,"byte_end":330991,"line_start":527,"line_end":527,"column_start":1,"column_end":18}}]},{"kind":"Struct","id":{"krate":0,"index":6890},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":331112,"byte_end":331121,"line_start":535,"line_end":535,"column_start":16,"column_end":25},"name":"SkipMany1","qualname":"::parser::repeat::SkipMany1","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1932},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":331654,"byte_end":331664,"line_start":553,"line_end":553,"column_start":8,"column_end":18},"name":"skip_many1","qualname":"::parser::repeat::skip_many1","value":"pub fn skip_many1<P>(P) -> SkipMany1<P> where P: Parser","parent":null,"children":[],"decl_id":null,"docs":" Parses `p` one or more times ignoring the result.","sig":null,"attributes":[{"value":"/ Parses `p` one or more times ignoring the result.","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":331161,"byte_end":331214,"line_start":537,"line_end":537,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":331215,"byte_end":331218,"line_start":538,"line_end":538,"column_start":1,"column_end":4}},{"value":"/ NOTE: If `p` can succeed without consuming any input this may hang forever as `skip_many1` will","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":331219,"byte_end":331318,"line_start":539,"line_end":539,"column_start":1,"column_end":100}},{"value":"/ repeatedly use `p` to parse the same location in the input every time","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":331319,"byte_end":331392,"line_start":540,"line_end":540,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":331393,"byte_end":331396,"line_start":541,"line_end":541,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":331397,"byte_end":331404,"line_start":542,"line_end":542,"column_start":1,"column_end":8}},{"value":"/ # extern crate combine;","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":331405,"byte_end":331432,"line_start":543,"line_end":543,"column_start":1,"column_end":28}},{"value":"/ # use combine::*;","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":331433,"byte_end":331454,"line_start":544,"line_end":544,"column_start":1,"column_end":22}},{"value":"/ # use combine::parser::char::digit;","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":331455,"byte_end":331494,"line_start":545,"line_end":545,"column_start":1,"column_end":40}},{"value":"/ # fn main() {","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":331495,"byte_end":331512,"line_start":546,"line_end":546,"column_start":1,"column_end":18}},{"value":"/ let result = skip_many1(digit())","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":331513,"byte_end":331549,"line_start":547,"line_end":547,"column_start":1,"column_end":37}},{"value":"/     .parse(\"123A\");","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":331550,"byte_end":331573,"line_start":548,"line_end":548,"column_start":1,"column_end":24}},{"value":"/ assert_eq!(result, Ok(((), \"A\")));","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":331574,"byte_end":331612,"line_start":549,"line_end":549,"column_start":1,"column_end":39}},{"value":"/ # }","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":331613,"byte_end":331620,"line_start":550,"line_end":550,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":331621,"byte_end":331628,"line_start":551,"line_end":551,"column_start":1,"column_end":8}},{"value":"inline(always)","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":331629,"byte_end":331646,"line_start":552,"line_end":552,"column_start":1,"column_end":18}}]},{"kind":"Struct","id":{"krate":0,"index":6903},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":331790,"byte_end":331795,"line_start":561,"line_end":561,"column_start":12,"column_end":17},"name":"SepBy","qualname":"::parser::repeat::SepBy","value":"SepBy {  }","parent":null,"children":[{"krate":0,"index":6907},{"krate":0,"index":6908},{"krate":0,"index":6909}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1945},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":333642,"byte_end":333648,"line_start":625,"line_end":625,"column_start":8,"column_end":14},"name":"sep_by","qualname":"::parser::repeat::sep_by","value":"pub fn sep_by<F, P, S>(P, S) -> SepBy<F, P, S> where F: Extend<P::Output> +\nDefault, P: Parser, S: Parser<Input = P::Input>","parent":null,"children":[],"decl_id":null,"docs":" Parses `parser` zero or more time separated by `separator`, returning a collection with the\n values from `p`.","sig":null,"attributes":[{"value":"/ Parses `parser` zero or more time separated by `separator`, returning a collection with the","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":332879,"byte_end":332974,"line_start":605,"line_end":605,"column_start":1,"column_end":96}},{"value":"/ values from `p`.","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":332975,"byte_end":332995,"line_start":606,"line_end":606,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":332996,"byte_end":332999,"line_start":607,"line_end":607,"column_start":1,"column_end":4}},{"value":"/ If the returned collection cannot be inferred type annotations must be supplied, either by","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":333000,"byte_end":333094,"line_start":608,"line_end":608,"column_start":1,"column_end":95}},{"value":"/ annotating the resulting type binding `let collection: Vec<_> = ...` or by specializing when","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":333095,"byte_end":333191,"line_start":609,"line_end":609,"column_start":1,"column_end":97}},{"value":"/ calling `sep_by`, `sep_by::<Vec<_>, _, _>(...)`.","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":333192,"byte_end":333244,"line_start":610,"line_end":610,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":333245,"byte_end":333248,"line_start":611,"line_end":611,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":333249,"byte_end":333256,"line_start":612,"line_end":612,"column_start":1,"column_end":8}},{"value":"/ # extern crate combine;","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":333257,"byte_end":333284,"line_start":613,"line_end":613,"column_start":1,"column_end":28}},{"value":"/ # use combine::*;","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":333285,"byte_end":333306,"line_start":614,"line_end":614,"column_start":1,"column_end":22}},{"value":"/ # use combine::parser::char::digit;","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":333307,"byte_end":333346,"line_start":615,"line_end":615,"column_start":1,"column_end":40}},{"value":"/ # fn main() {","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":333347,"byte_end":333364,"line_start":616,"line_end":616,"column_start":1,"column_end":18}},{"value":"/ let mut parser = sep_by(digit(), token(','));","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":333365,"byte_end":333414,"line_start":617,"line_end":617,"column_start":1,"column_end":50}},{"value":"/ let result_ok = parser.parse(\"1,2,3\");","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":333415,"byte_end":333457,"line_start":618,"line_end":618,"column_start":1,"column_end":43}},{"value":"/ assert_eq!(result_ok, Ok((vec!['1', '2', '3'], \"\")));","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":333458,"byte_end":333515,"line_start":619,"line_end":619,"column_start":1,"column_end":58}},{"value":"/ let result_ok2 = parser.parse(\"\");","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":333516,"byte_end":333554,"line_start":620,"line_end":620,"column_start":1,"column_end":39}},{"value":"/ assert_eq!(result_ok2, Ok((vec![], \"\")));","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":333555,"byte_end":333600,"line_start":621,"line_end":621,"column_start":1,"column_end":46}},{"value":"/ # }","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":333601,"byte_end":333608,"line_start":622,"line_end":622,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":333609,"byte_end":333616,"line_start":623,"line_end":623,"column_start":1,"column_end":8}},{"value":"inline(always)","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":333617,"byte_end":333634,"line_start":624,"line_end":624,"column_start":1,"column_end":18}}]},{"kind":"Struct","id":{"krate":0,"index":6923},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":333913,"byte_end":333919,"line_start":639,"line_end":639,"column_start":12,"column_end":18},"name":"SepBy1","qualname":"::parser::repeat::SepBy1","value":"SepBy1 {  }","parent":null,"children":[{"krate":0,"index":6927},{"krate":0,"index":6928},{"krate":0,"index":6929}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1961},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":336741,"byte_end":336748,"line_start":735,"line_end":735,"column_start":8,"column_end":15},"name":"sep_by1","qualname":"::parser::repeat::sep_by1","value":"pub fn sep_by1<F, P, S>(P, S) -> SepBy1<F, P, S> where F: Extend<P::Output> +\nDefault, P: Parser, S: Parser<Input = P::Input>","parent":null,"children":[],"decl_id":null,"docs":" Parses `parser` one or more time separated by `separator`, returning a collection with the\n values from `p`.","sig":null,"attributes":[{"value":"/ Parses `parser` one or more time separated by `separator`, returning a collection with the","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":335608,"byte_end":335702,"line_start":706,"line_end":706,"column_start":1,"column_end":95}},{"value":"/ values from `p`.","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":335703,"byte_end":335723,"line_start":707,"line_end":707,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":335724,"byte_end":335727,"line_start":708,"line_end":708,"column_start":1,"column_end":4}},{"value":"/ If the returned collection cannot be inferred type annotations must be supplied, either by","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":335728,"byte_end":335822,"line_start":709,"line_end":709,"column_start":1,"column_end":95}},{"value":"/ annotating the resulting type binding `let collection: Vec<_> = ...` or by specializing when","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":335823,"byte_end":335919,"line_start":710,"line_end":710,"column_start":1,"column_end":97}},{"value":"/ calling `sep_by`, `sep_by1::<Vec<_>, _, _>(...)`.","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":335920,"byte_end":335973,"line_start":711,"line_end":711,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":335974,"byte_end":335977,"line_start":712,"line_end":712,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":335978,"byte_end":335985,"line_start":713,"line_end":713,"column_start":1,"column_end":8}},{"value":"/ # extern crate combine;","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":335986,"byte_end":336013,"line_start":714,"line_end":714,"column_start":1,"column_end":28}},{"value":"/ # use combine::*;","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":336014,"byte_end":336035,"line_start":715,"line_end":715,"column_start":1,"column_end":22}},{"value":"/ # use combine::parser::char::digit;","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":336036,"byte_end":336075,"line_start":716,"line_end":716,"column_start":1,"column_end":40}},{"value":"/ # use combine::stream::easy;","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":336076,"byte_end":336108,"line_start":717,"line_end":717,"column_start":1,"column_end":33}},{"value":"/ # use combine::stream::state::{State, SourcePosition};","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":336109,"byte_end":336167,"line_start":718,"line_end":718,"column_start":1,"column_end":59}},{"value":"/ # fn main() {","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":336168,"byte_end":336185,"line_start":719,"line_end":719,"column_start":1,"column_end":18}},{"value":"/ let mut parser = sep_by1(digit(), token(','));","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":336186,"byte_end":336236,"line_start":720,"line_end":720,"column_start":1,"column_end":51}},{"value":"/ let result_ok = parser.easy_parse(State::new(\"1,2,3\"))","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":336237,"byte_end":336295,"line_start":721,"line_end":721,"column_start":1,"column_end":59}},{"value":"/                       .map(|(vec, state)| (vec, state.input));","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":336296,"byte_end":336362,"line_start":722,"line_end":722,"column_start":1,"column_end":67}},{"value":"/ assert_eq!(result_ok, Ok((vec!['1', '2', '3'], \"\")));","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":336363,"byte_end":336420,"line_start":723,"line_end":723,"column_start":1,"column_end":58}},{"value":"/ let result_err = parser.easy_parse(State::new(\"\"));","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":336421,"byte_end":336476,"line_start":724,"line_end":724,"column_start":1,"column_end":56}},{"value":"/ assert_eq!(result_err, Err(easy::Errors {","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":336477,"byte_end":336522,"line_start":725,"line_end":725,"column_start":1,"column_end":46}},{"value":"/     position: SourcePosition::default(),","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":336523,"byte_end":336567,"line_start":726,"line_end":726,"column_start":1,"column_end":45}},{"value":"/     errors: vec![","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":336568,"byte_end":336589,"line_start":727,"line_end":727,"column_start":1,"column_end":22}},{"value":"/         easy::Error::end_of_input(),","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":336590,"byte_end":336630,"line_start":728,"line_end":728,"column_start":1,"column_end":41}},{"value":"/         easy::Error::Expected(\"digit\".into())","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":336631,"byte_end":336680,"line_start":729,"line_end":729,"column_start":1,"column_end":50}},{"value":"/     ]","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":336681,"byte_end":336690,"line_start":730,"line_end":730,"column_start":1,"column_end":10}},{"value":"/ }));","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":336691,"byte_end":336699,"line_start":731,"line_end":731,"column_start":1,"column_end":9}},{"value":"/ # }","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":336700,"byte_end":336707,"line_start":732,"line_end":732,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":336708,"byte_end":336715,"line_start":733,"line_end":733,"column_start":1,"column_end":8}},{"value":"inline(always)","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":336716,"byte_end":336733,"line_start":734,"line_end":734,"column_start":1,"column_end":18}}]},{"kind":"Struct","id":{"krate":0,"index":6943},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":337015,"byte_end":337023,"line_start":749,"line_end":749,"column_start":12,"column_end":20},"name":"SepEndBy","qualname":"::parser::repeat::SepEndBy","value":"SepEndBy {  }","parent":null,"children":[{"krate":0,"index":6947},{"krate":0,"index":6948},{"krate":0,"index":6949}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1976},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":338830,"byte_end":338840,"line_start":809,"line_end":809,"column_start":8,"column_end":18},"name":"sep_end_by","qualname":"::parser::repeat::sep_end_by","value":"pub fn sep_end_by<F, P, S>(P, S) -> SepEndBy<F, P, S> where\nF: Extend<P::Output> + Default, P: Parser, S: Parser<Input = P::Input>","parent":null,"children":[],"decl_id":null,"docs":" Parses `parser` zero or more times separated and ended by `separator`, returning a collection\n with the values from `p`.","sig":null,"attributes":[{"value":"/ Parses `parser` zero or more times separated and ended by `separator`, returning a collection","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":338034,"byte_end":338131,"line_start":789,"line_end":789,"column_start":1,"column_end":98}},{"value":"/ with the values from `p`.","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":338132,"byte_end":338161,"line_start":790,"line_end":790,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":338162,"byte_end":338165,"line_start":791,"line_end":791,"column_start":1,"column_end":4}},{"value":"/ If the returned collection cannot be inferred type annotations must be supplied, either by","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":338166,"byte_end":338260,"line_start":792,"line_end":792,"column_start":1,"column_end":95}},{"value":"/ annotating the resulting type binding `let collection: Vec<_> = ...` or by specializing when","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":338261,"byte_end":338357,"line_start":793,"line_end":793,"column_start":1,"column_end":97}},{"value":"/ calling `sep_by`, `sep_by::<Vec<_>, _, _>(...)`","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":338358,"byte_end":338409,"line_start":794,"line_end":794,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":338410,"byte_end":338413,"line_start":795,"line_end":795,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":338414,"byte_end":338421,"line_start":796,"line_end":796,"column_start":1,"column_end":8}},{"value":"/ # extern crate combine;","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":338422,"byte_end":338449,"line_start":797,"line_end":797,"column_start":1,"column_end":28}},{"value":"/ # use combine::*;","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":338450,"byte_end":338471,"line_start":798,"line_end":798,"column_start":1,"column_end":22}},{"value":"/ # use combine::parser::char::digit;","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":338472,"byte_end":338511,"line_start":799,"line_end":799,"column_start":1,"column_end":40}},{"value":"/ # fn main() {","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":338512,"byte_end":338529,"line_start":800,"line_end":800,"column_start":1,"column_end":18}},{"value":"/ let mut parser = sep_end_by(digit(), token(';'));","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":338530,"byte_end":338583,"line_start":801,"line_end":801,"column_start":1,"column_end":54}},{"value":"/ let result_ok = parser.parse(\"1;2;3;\");","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":338584,"byte_end":338627,"line_start":802,"line_end":802,"column_start":1,"column_end":44}},{"value":"/ assert_eq!(result_ok, Ok((vec!['1', '2', '3'], \"\")));","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":338628,"byte_end":338685,"line_start":803,"line_end":803,"column_start":1,"column_end":58}},{"value":"/ let result_ok2 = parser.parse(\"1;2;3\");","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":338686,"byte_end":338729,"line_start":804,"line_end":804,"column_start":1,"column_end":44}},{"value":"/ assert_eq!(result_ok2, Ok((vec!['1', '2', '3'], \"\")));","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":338730,"byte_end":338788,"line_start":805,"line_end":805,"column_start":1,"column_end":59}},{"value":"/ # }","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":338789,"byte_end":338796,"line_start":806,"line_end":806,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":338797,"byte_end":338804,"line_start":807,"line_end":807,"column_start":1,"column_end":8}},{"value":"inline(always)","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":338805,"byte_end":338822,"line_start":808,"line_end":808,"column_start":1,"column_end":18}}]},{"kind":"Struct","id":{"krate":0,"index":6961},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":339111,"byte_end":339120,"line_start":823,"line_end":823,"column_start":12,"column_end":21},"name":"SepEndBy1","qualname":"::parser::repeat::SepEndBy1","value":"SepEndBy1 {  }","parent":null,"children":[{"krate":0,"index":6965},{"krate":0,"index":6966},{"krate":0,"index":6967}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1993},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":341963,"byte_end":341974,"line_start":916,"line_end":916,"column_start":8,"column_end":19},"name":"sep_end_by1","qualname":"::parser::repeat::sep_end_by1","value":"pub fn sep_end_by1<F, P, S>(P, S) -> SepEndBy1<F, P, S> where\nF: Extend<P::Output> + Default, P: Parser, S: Parser<Input = P::Input>","parent":null,"children":[],"decl_id":null,"docs":" Parses `parser` one or more times separated and ended by `separator`, returning a collection\n with the values from `p`.","sig":null,"attributes":[{"value":"/ Parses `parser` one or more times separated and ended by `separator`, returning a collection","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":340814,"byte_end":340910,"line_start":887,"line_end":887,"column_start":1,"column_end":97}},{"value":"/ with the values from `p`.","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":340911,"byte_end":340940,"line_start":888,"line_end":888,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":340941,"byte_end":340944,"line_start":889,"line_end":889,"column_start":1,"column_end":4}},{"value":"/ If the returned collection cannot be inferred type annotations must be","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":340945,"byte_end":341019,"line_start":890,"line_end":890,"column_start":1,"column_end":75}},{"value":"/ supplied, either by annotating the resulting type binding `let collection: Vec<_> = ...` or by","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":341020,"byte_end":341118,"line_start":891,"line_end":891,"column_start":1,"column_end":99}},{"value":"/ specializing when calling `sep_by`, `sep_by1::<Vec<_>, _, _>(...)`.","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":341119,"byte_end":341190,"line_start":892,"line_end":892,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":341191,"byte_end":341194,"line_start":893,"line_end":893,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":341195,"byte_end":341202,"line_start":894,"line_end":894,"column_start":1,"column_end":8}},{"value":"/ # extern crate combine;","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":341203,"byte_end":341230,"line_start":895,"line_end":895,"column_start":1,"column_end":28}},{"value":"/ # use combine::*;","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":341231,"byte_end":341252,"line_start":896,"line_end":896,"column_start":1,"column_end":22}},{"value":"/ # use combine::parser::char::digit;","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":341253,"byte_end":341292,"line_start":897,"line_end":897,"column_start":1,"column_end":40}},{"value":"/ # use combine::stream::easy;","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":341293,"byte_end":341325,"line_start":898,"line_end":898,"column_start":1,"column_end":33}},{"value":"/ # use combine::stream::state::{State, SourcePosition};","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":341326,"byte_end":341384,"line_start":899,"line_end":899,"column_start":1,"column_end":59}},{"value":"/ # fn main() {","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":341385,"byte_end":341402,"line_start":900,"line_end":900,"column_start":1,"column_end":18}},{"value":"/ let mut parser = sep_end_by1(digit(), token(';'));","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":341403,"byte_end":341457,"line_start":901,"line_end":901,"column_start":1,"column_end":55}},{"value":"/ let result_ok = parser.easy_parse(State::new(\"1;2;3;\"))","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":341458,"byte_end":341517,"line_start":902,"line_end":902,"column_start":1,"column_end":60}},{"value":"/                       .map(|(vec, state)| (vec, state.input));","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":341518,"byte_end":341584,"line_start":903,"line_end":903,"column_start":1,"column_end":67}},{"value":"/ assert_eq!(result_ok, Ok((vec!['1', '2', '3'], \"\")));","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":341585,"byte_end":341642,"line_start":904,"line_end":904,"column_start":1,"column_end":58}},{"value":"/ let result_err = parser.easy_parse(State::new(\"\"));","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":341643,"byte_end":341698,"line_start":905,"line_end":905,"column_start":1,"column_end":56}},{"value":"/ assert_eq!(result_err, Err(easy::Errors {","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":341699,"byte_end":341744,"line_start":906,"line_end":906,"column_start":1,"column_end":46}},{"value":"/     position: SourcePosition::default(),","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":341745,"byte_end":341789,"line_start":907,"line_end":907,"column_start":1,"column_end":45}},{"value":"/     errors: vec![","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":341790,"byte_end":341811,"line_start":908,"line_end":908,"column_start":1,"column_end":22}},{"value":"/         easy::Error::end_of_input(),","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":341812,"byte_end":341852,"line_start":909,"line_end":909,"column_start":1,"column_end":41}},{"value":"/         easy::Error::Expected(\"digit\".into())","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":341853,"byte_end":341902,"line_start":910,"line_end":910,"column_start":1,"column_end":50}},{"value":"/     ]","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":341903,"byte_end":341912,"line_start":911,"line_end":911,"column_start":1,"column_end":10}},{"value":"/ }));","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":341913,"byte_end":341921,"line_start":912,"line_end":912,"column_start":1,"column_end":9}},{"value":"/ # }","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":341922,"byte_end":341929,"line_start":913,"line_end":913,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":341930,"byte_end":341937,"line_start":914,"line_end":914,"column_start":1,"column_end":8}},{"value":"inline(always)","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":341938,"byte_end":341955,"line_start":915,"line_end":915,"column_start":1,"column_end":18}}]},{"kind":"Struct","id":{"krate":0,"index":6979},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":342247,"byte_end":342254,"line_start":930,"line_end":930,"column_start":12,"column_end":19},"name":"Chainl1","qualname":"::parser::repeat::Chainl1","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":2007},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":344640,"byte_end":344647,"line_start":1011,"line_end":1011,"column_start":8,"column_end":15},"name":"chainl1","qualname":"::parser::repeat::chainl1","value":"pub fn chainl1<P, Op>(P, Op) -> Chainl1<P, Op> where P: Parser,\nOp: Parser<Input = P::Input>, Op::Output: FnOnce(P::Output, P::Output) ->\nP::Output","parent":null,"children":[],"decl_id":null,"docs":" Parses `p` 1 or more times separated by `op`. The value returned is the one produced by the\n left associative application of the function returned by the parser `op`.","sig":null,"attributes":[{"value":"/ Parses `p` 1 or more times separated by `op`. The value returned is the one produced by the","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":344087,"byte_end":344182,"line_start":996,"line_end":996,"column_start":1,"column_end":96}},{"value":"/ left associative application of the function returned by the parser `op`.","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":344183,"byte_end":344260,"line_start":997,"line_end":997,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":344261,"byte_end":344264,"line_start":998,"line_end":998,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":344265,"byte_end":344272,"line_start":999,"line_end":999,"column_start":1,"column_end":8}},{"value":"/ # extern crate combine;","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":344273,"byte_end":344300,"line_start":1000,"line_end":1000,"column_start":1,"column_end":28}},{"value":"/ # use combine::*;","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":344301,"byte_end":344322,"line_start":1001,"line_end":1001,"column_start":1,"column_end":22}},{"value":"/ # use combine::parser::char::digit;","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":344323,"byte_end":344362,"line_start":1002,"line_end":1002,"column_start":1,"column_end":40}},{"value":"/ # fn main() {","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":344363,"byte_end":344380,"line_start":1003,"line_end":1003,"column_start":1,"column_end":18}},{"value":"/ let number = digit().map(|c: char| c.to_digit(10).unwrap());","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":344381,"byte_end":344445,"line_start":1004,"line_end":1004,"column_start":1,"column_end":65}},{"value":"/ let sub = token('-').map(|_| |l: u32, r: u32| l - r);","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":344446,"byte_end":344503,"line_start":1005,"line_end":1005,"column_start":1,"column_end":58}},{"value":"/ let mut parser = chainl1(number, sub);","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":344504,"byte_end":344546,"line_start":1006,"line_end":1006,"column_start":1,"column_end":43}},{"value":"/ assert_eq!(parser.parse(\"9-3-5\"), Ok((1, \"\")));","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":344547,"byte_end":344598,"line_start":1007,"line_end":1007,"column_start":1,"column_end":52}},{"value":"/ # }","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":344599,"byte_end":344606,"line_start":1008,"line_end":1008,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":344607,"byte_end":344614,"line_start":1009,"line_end":1009,"column_start":1,"column_end":8}},{"value":"inline(always)","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":344615,"byte_end":344632,"line_start":1010,"line_end":1010,"column_start":1,"column_end":18}}]},{"kind":"Struct","id":{"krate":0,"index":6994},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":344869,"byte_end":344876,"line_start":1021,"line_end":1021,"column_start":12,"column_end":19},"name":"Chainr1","qualname":"::parser::repeat::Chainr1","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":2019},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":347008,"byte_end":347015,"line_start":1084,"line_end":1084,"column_start":8,"column_end":15},"name":"chainr1","qualname":"::parser::repeat::chainr1","value":"pub fn chainr1<P, Op>(P, Op) -> Chainr1<P, Op> where P: Parser,\nOp: Parser<Input = P::Input>, Op::Output: FnOnce(P::Output, P::Output) ->\nP::Output","parent":null,"children":[],"decl_id":null,"docs":" Parses `p` one or more times separated by `op`. The value returned is the one produced by the\n right associative application of the function returned by `op`.","sig":null,"attributes":[{"value":"/ Parses `p` one or more times separated by `op`. The value returned is the one produced by the","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":346456,"byte_end":346553,"line_start":1069,"line_end":1069,"column_start":1,"column_end":98}},{"value":"/ right associative application of the function returned by `op`.","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":346554,"byte_end":346621,"line_start":1070,"line_end":1070,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":346622,"byte_end":346625,"line_start":1071,"line_end":1071,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":346626,"byte_end":346633,"line_start":1072,"line_end":1072,"column_start":1,"column_end":8}},{"value":"/ # extern crate combine;","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":346634,"byte_end":346661,"line_start":1073,"line_end":1073,"column_start":1,"column_end":28}},{"value":"/ # use combine::*;","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":346662,"byte_end":346683,"line_start":1074,"line_end":1074,"column_start":1,"column_end":22}},{"value":"/ # use combine::parser::char::digit;","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":346684,"byte_end":346723,"line_start":1075,"line_end":1075,"column_start":1,"column_end":40}},{"value":"/ # fn main() {","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":346724,"byte_end":346741,"line_start":1076,"line_end":1076,"column_start":1,"column_end":18}},{"value":"/ let number = digit().map(|c: char| c.to_digit(10).unwrap());","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":346742,"byte_end":346806,"line_start":1077,"line_end":1077,"column_start":1,"column_end":65}},{"value":"/ let pow = token('^').map(|_| |l: u32, r: u32| l.pow(r));","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":346807,"byte_end":346867,"line_start":1078,"line_end":1078,"column_start":1,"column_end":61}},{"value":"/ let mut parser = chainr1(number, pow);","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":346868,"byte_end":346910,"line_start":1079,"line_end":1079,"column_start":1,"column_end":43}},{"value":"/     assert_eq!(parser.parse(\"2^3^2\"), Ok((512, \"\")));","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":346911,"byte_end":346968,"line_start":1080,"line_end":1080,"column_start":1,"column_end":58}},{"value":"/ }","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":346969,"byte_end":346974,"line_start":1081,"line_end":1081,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":346975,"byte_end":346982,"line_start":1082,"line_end":1082,"column_start":1,"column_end":8}},{"value":"inline(always)","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":346983,"byte_end":347000,"line_start":1083,"line_end":1083,"column_start":1,"column_end":18}}]},{"kind":"Struct","id":{"krate":0,"index":7007},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":347237,"byte_end":347246,"line_start":1094,"line_end":1094,"column_start":12,"column_end":21},"name":"TakeUntil","qualname":"::parser::repeat::TakeUntil","value":"TakeUntil {  }","parent":null,"children":[{"krate":0,"index":7010},{"krate":0,"index":7011}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":2030},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":349881,"byte_end":349891,"line_start":1169,"line_end":1169,"column_start":8,"column_end":18},"name":"take_until","qualname":"::parser::repeat::take_until","value":"pub fn take_until<F, P>(P) -> TakeUntil<F, P> where\nF: Extend<<P::Input as StreamOnce>::Item> + Default, P: Parser","parent":null,"children":[],"decl_id":null,"docs":" Takes input until `end` is encountered or `end` indicates that it has consumed input before\n failing (`attempt` can be used to make it look like it has not consumed any input)","sig":null,"attributes":[{"value":"/ Takes input until `end` is encountered or `end` indicates that it has consumed input before","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":348792,"byte_end":348887,"line_start":1145,"line_end":1145,"column_start":1,"column_end":96}},{"value":"/ failing (`attempt` can be used to make it look like it has not consumed any input)","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":348888,"byte_end":348974,"line_start":1146,"line_end":1146,"column_start":1,"column_end":87}},{"value":"/","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":348975,"byte_end":348978,"line_start":1147,"line_end":1147,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":348979,"byte_end":348986,"line_start":1148,"line_end":1148,"column_start":1,"column_end":8}},{"value":"/ # extern crate combine;","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":348987,"byte_end":349014,"line_start":1149,"line_end":1149,"column_start":1,"column_end":28}},{"value":"/ # use combine::*;","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":349015,"byte_end":349036,"line_start":1150,"line_end":1150,"column_start":1,"column_end":22}},{"value":"/ # use combine::parser::char;","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":349037,"byte_end":349069,"line_start":1151,"line_end":1151,"column_start":1,"column_end":33}},{"value":"/ # use combine::parser::byte;","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":349070,"byte_end":349102,"line_start":1152,"line_end":1152,"column_start":1,"column_end":33}},{"value":"/ # use combine::parser::combinator::attempt;","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":349103,"byte_end":349150,"line_start":1153,"line_end":1153,"column_start":1,"column_end":48}},{"value":"/ # use combine::parser::repeat::take_until;","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":349151,"byte_end":349197,"line_start":1154,"line_end":1154,"column_start":1,"column_end":47}},{"value":"/ # fn main() {","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":349198,"byte_end":349215,"line_start":1155,"line_end":1155,"column_start":1,"column_end":18}},{"value":"/     let mut char_parser = take_until(char::digit());","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":349216,"byte_end":349272,"line_start":1156,"line_end":1156,"column_start":1,"column_end":57}},{"value":"/     assert_eq!(char_parser.parse(\"abc123\"), Ok((\"abc\".to_string(), \"123\")));","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":349273,"byte_end":349353,"line_start":1157,"line_end":1157,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":349354,"byte_end":349357,"line_start":1158,"line_end":1158,"column_start":1,"column_end":4}},{"value":"/     let mut byte_parser = take_until(byte::bytes(&b\"TAG\"[..]));","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":349358,"byte_end":349425,"line_start":1159,"line_end":1159,"column_start":1,"column_end":68}},{"value":"/     assert_eq!(byte_parser.parse(&b\"123TAG\"[..]), Ok((b\"123\".to_vec(), &b\"TAG\"[..])));","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":349426,"byte_end":349516,"line_start":1160,"line_end":1160,"column_start":1,"column_end":91}},{"value":"/     assert!(byte_parser.parse(&b\"123TATAG\"[..]).is_err());","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":349517,"byte_end":349579,"line_start":1161,"line_end":1161,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":349580,"byte_end":349583,"line_start":1162,"line_end":1162,"column_start":1,"column_end":4}},{"value":"/     // `attempt` must be used if the `end` should be consume input before failing","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":349584,"byte_end":349669,"line_start":1163,"line_end":1163,"column_start":1,"column_end":86}},{"value":"/     let mut byte_parser = take_until(attempt(byte::bytes(&b\"TAG\"[..])));","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":349670,"byte_end":349746,"line_start":1164,"line_end":1164,"column_start":1,"column_end":77}},{"value":"/     assert_eq!(byte_parser.parse(&b\"123TATAG\"[..]), Ok((b\"123TA\".to_vec(), &b\"TAG\"[..])));","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":349747,"byte_end":349841,"line_start":1165,"line_end":1165,"column_start":1,"column_end":95}},{"value":"/ }","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":349842,"byte_end":349847,"line_start":1166,"line_end":1166,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":349848,"byte_end":349855,"line_start":1167,"line_end":1167,"column_start":1,"column_end":8}},{"value":"inline(always)","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":349856,"byte_end":349873,"line_start":1168,"line_end":1168,"column_start":1,"column_end":18}}]},{"kind":"Struct","id":{"krate":0,"index":7032},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":350125,"byte_end":350134,"line_start":1182,"line_end":1182,"column_start":16,"column_end":25},"name":"SkipUntil","qualname":"::parser::repeat::SkipUntil","value":"SkipUntil { end }","parent":null,"children":[{"krate":0,"index":7034},{"krate":0,"index":7035}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/lib.rs","byte_start":20591,"byte_end":20621,"line_start":574,"line_end":574,"column_start":9,"column_end":39}}]},{"kind":"Field","id":{"krate":0,"index":7034},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":351371,"byte_end":351374,"line_start":1207,"line_end":1207,"column_start":26,"column_end":29},"name":"end","qualname":"::parser::repeat::SkipUntil::end","value":"P","parent":{"krate":0,"index":7032},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":7030},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":351357,"byte_end":351367,"line_start":1207,"line_end":1207,"column_start":12,"column_end":22},"name":"skip_until","qualname":"::parser::repeat::skip_until","value":"pub fn skip_until<P>(P) -> SkipUntil<P> where\n<P::Input as\ncrate::stream::StreamOnce>::Error: crate::error::ParseError<<P::Input as\n                                                            crate::stream::StreamOnce>::Item,\n                                                            <P::Input as\n                                                            crate::stream::StreamOnce>::Range,\n                                                            <P::Input as\n                                                            crate::stream::StreamOnce>::Position>,\nP: Parser","parent":null,"children":[],"decl_id":null,"docs":" Skips input until `end` is encountered or `end` indicates that it has consumed input before\n failing (`attempt` can be used to make it look like it has not consumed any input)","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/lib.rs","byte_start":23684,"byte_end":23701,"line_start":648,"line_end":648,"column_start":9,"column_end":26}}]},{"kind":"Struct","id":{"krate":0,"index":7043},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":351528,"byte_end":351540,"line_start":1217,"line_end":1217,"column_start":12,"column_end":24},"name":"EscapedState","qualname":"::parser::repeat::EscapedState","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2033},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":351581,"byte_end":351588,"line_start":1219,"line_end":1219,"column_start":12,"column_end":19},"name":"Escaped","qualname":"::parser::repeat::Escaped","value":"Escaped {  }","parent":null,"children":[{"krate":0,"index":2036},{"krate":0,"index":2037},{"krate":0,"index":2038}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":2048},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":355052,"byte_end":355059,"line_start":1311,"line_end":1311,"column_start":8,"column_end":15},"name":"escaped","qualname":"::parser::repeat::escaped","value":"pub fn escaped<P, Q>(P, <P::Input as StreamOnce>::Item, Q) -> Escaped<P, Q>\nwhere P: Parser, <P::Input as StreamOnce>::Item: PartialEq, Q: Parser<Input =\nP::Input>","parent":null,"children":[],"decl_id":null,"docs":" Parses an escaped string by first applying `parser` which accept the normal characters which do\n not need escaping. Once `parser` can not consume any more input it checks if the next item\n is `escape`. If it is then `escape_parser` is used to parse the escaped character and then\n resumes parsing using `parser`. If `escape` was not found then the parser finishes\n successfully.","sig":null,"attributes":[{"value":"/ Parses an escaped string by first applying `parser` which accept the normal characters which do","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":353925,"byte_end":354024,"line_start":1286,"line_end":1286,"column_start":1,"column_end":100}},{"value":"/ not need escaping. Once `parser` can not consume any more input it checks if the next item","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":354025,"byte_end":354119,"line_start":1287,"line_end":1287,"column_start":1,"column_end":95}},{"value":"/ is `escape`. If it is then `escape_parser` is used to parse the escaped character and then","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":354120,"byte_end":354214,"line_start":1288,"line_end":1288,"column_start":1,"column_end":95}},{"value":"/ resumes parsing using `parser`. If `escape` was not found then the parser finishes","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":354215,"byte_end":354301,"line_start":1289,"line_end":1289,"column_start":1,"column_end":87}},{"value":"/ successfully.","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":354302,"byte_end":354319,"line_start":1290,"line_end":1290,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":354320,"byte_end":354323,"line_start":1291,"line_end":1291,"column_start":1,"column_end":4}},{"value":"/ This returns `()` since there isn't a good way to collect the output of the parsers so it is","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":354324,"byte_end":354420,"line_start":1292,"line_end":1292,"column_start":1,"column_end":97}},{"value":"/ best paired with one of the `recognize` parsers.","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":354421,"byte_end":354473,"line_start":1293,"line_end":1293,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":354474,"byte_end":354477,"line_start":1294,"line_end":1294,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":354478,"byte_end":354485,"line_start":1295,"line_end":1295,"column_start":1,"column_end":8}},{"value":"/ # extern crate combine;","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":354486,"byte_end":354513,"line_start":1296,"line_end":1296,"column_start":1,"column_end":28}},{"value":"/ # use combine::*;","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":354514,"byte_end":354535,"line_start":1297,"line_end":1297,"column_start":1,"column_end":22}},{"value":"/ # use combine::parser::repeat::escaped;","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":354536,"byte_end":354579,"line_start":1298,"line_end":1298,"column_start":1,"column_end":44}},{"value":"/ # use combine::parser::char;","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":354580,"byte_end":354612,"line_start":1299,"line_end":1299,"column_start":1,"column_end":33}},{"value":"/ # use combine::parser::range::{recognize, take_while1};","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":354613,"byte_end":354672,"line_start":1300,"line_end":1300,"column_start":1,"column_end":60}},{"value":"/ # fn main() {","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":354673,"byte_end":354690,"line_start":1301,"line_end":1301,"column_start":1,"column_end":18}},{"value":"/     let mut parser = recognize(","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":354691,"byte_end":354726,"line_start":1302,"line_end":1302,"column_start":1,"column_end":36}},{"value":"/         escaped(take_while1(|c| c != '\"' && c != '\\\\'), '\\\\', one_of(r#\"nr\"\\\"#.chars()))","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":354727,"byte_end":354819,"line_start":1303,"line_end":1303,"column_start":1,"column_end":93}},{"value":"/     );","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":354820,"byte_end":354830,"line_start":1304,"line_end":1304,"column_start":1,"column_end":11}},{"value":"/     assert_eq!(parser.parse(r#\"ab\\\"12\\n\\rc\"\"#), Ok((r#\"ab\\\"12\\n\\rc\"#, r#\"\"\"#)));","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":354831,"byte_end":354915,"line_start":1305,"line_end":1305,"column_start":1,"column_end":85}},{"value":"/     assert!(parser.parse(r#\"\\\"#).is_err());","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":354916,"byte_end":354963,"line_start":1306,"line_end":1306,"column_start":1,"column_end":48}},{"value":"/     assert!(parser.parse(r#\"\\a\"#).is_err());","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":354964,"byte_end":355012,"line_start":1307,"line_end":1307,"column_start":1,"column_end":49}},{"value":"/ }","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":355013,"byte_end":355018,"line_start":1308,"line_end":1308,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":355019,"byte_end":355026,"line_start":1309,"line_end":1309,"column_start":1,"column_end":8}},{"value":"inline(always)","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":355027,"byte_end":355044,"line_start":1310,"line_end":1310,"column_start":1,"column_end":18}}]},{"kind":"Mod","id":{"krate":0,"index":2051},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/sequence.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"sequence","qualname":"::parser::sequence","value":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/sequence.rs","parent":null,"children":[{"krate":0,"index":2052},{"krate":0,"index":8472},{"krate":0,"index":2053},{"krate":0,"index":2054},{"krate":0,"index":2055},{"krate":0,"index":2056},{"krate":0,"index":2057},{"krate":0,"index":2058},{"krate":0,"index":2059},{"krate":0,"index":2060},{"krate":0,"index":2061},{"krate":0,"index":2062},{"krate":0,"index":2063},{"krate":0,"index":2064},{"krate":0,"index":2065},{"krate":0,"index":8490},{"krate":0,"index":2066},{"krate":0,"index":2067},{"krate":0,"index":2068},{"krate":0,"index":2071},{"krate":0,"index":2076},{"krate":0,"index":2078},{"krate":0,"index":2082},{"krate":0,"index":7069},{"krate":0,"index":7074},{"krate":0,"index":7052},{"krate":0,"index":7056},{"krate":0,"index":7099},{"krate":0,"index":7106},{"krate":0,"index":7080},{"krate":0,"index":7085},{"krate":0,"index":7135},{"krate":0,"index":7144},{"krate":0,"index":7114},{"krate":0,"index":7120},{"krate":0,"index":7177},{"krate":0,"index":7188},{"krate":0,"index":7154},{"krate":0,"index":7161},{"krate":0,"index":7225},{"krate":0,"index":7238},{"krate":0,"index":7200},{"krate":0,"index":7208},{"krate":0,"index":7279},{"krate":0,"index":7294},{"krate":0,"index":7252},{"krate":0,"index":7261},{"krate":0,"index":7339},{"krate":0,"index":7356},{"krate":0,"index":7310},{"krate":0,"index":7320},{"krate":0,"index":7405},{"krate":0,"index":7424},{"krate":0,"index":7374},{"krate":0,"index":7385},{"krate":0,"index":7477},{"krate":0,"index":7498},{"krate":0,"index":7444},{"krate":0,"index":7456},{"krate":0,"index":7555},{"krate":0,"index":7578},{"krate":0,"index":7520},{"krate":0,"index":7533},{"krate":0,"index":7639},{"krate":0,"index":7664},{"krate":0,"index":7602},{"krate":0,"index":7616},{"krate":0,"index":7729},{"krate":0,"index":7756},{"krate":0,"index":7690},{"krate":0,"index":7705},{"krate":0,"index":7784},{"krate":0,"index":7793},{"krate":0,"index":7789},{"krate":0,"index":2092},{"krate":0,"index":2104},{"krate":0,"index":7801},{"krate":0,"index":7810},{"krate":0,"index":7806},{"krate":0,"index":2107},{"krate":0,"index":2117},{"krate":0,"index":7825},{"krate":0,"index":7831},{"krate":0,"index":7818},{"krate":0,"index":2120},{"krate":0,"index":7842},{"krate":0,"index":7852},{"krate":0,"index":7848},{"krate":0,"index":2129},{"krate":0,"index":2139},{"krate":0,"index":7857},{"krate":0,"index":7867},{"krate":0,"index":7863},{"krate":0,"index":2143},{"krate":0,"index":2153}],"decl_id":null,"docs":" Combinators which take multiple parsers and applies them one after another.\n","sig":null,"attributes":[{"value":"/ Combinators which take multiple parsers and applies them one after another.","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/sequence.rs","byte_start":356674,"byte_end":356753,"line_start":1,"line_end":1,"column_start":1,"column_end":80}}]},{"kind":"Struct","id":{"krate":0,"index":2071},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/sequence.rs","byte_start":357388,"byte_end":357401,"line_start":28,"line_end":28,"column_start":12,"column_end":25},"name":"SequenceState","qualname":"::parser::sequence::SequenceState","value":"SequenceState { value, state }","parent":null,"children":[{"krate":0,"index":2074},{"krate":0,"index":2075}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2074},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/sequence.rs","byte_start":357418,"byte_end":357423,"line_start":29,"line_end":29,"column_start":9,"column_end":14},"name":"value","qualname":"::parser::sequence::SequenceState::value","value":"std::option::Option<T>","parent":{"krate":0,"index":2071},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2075},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/sequence.rs","byte_start":357444,"byte_end":357449,"line_start":30,"line_end":30,"column_start":9,"column_end":14},"name":"state","qualname":"::parser::sequence::SequenceState::state","value":"U","parent":{"krate":0,"index":2071},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":2076},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/sequence.rs","byte_start":357481,"byte_end":357500,"line_start":34,"line_end":34,"column_start":10,"column_end":29},"name":"ParserSequenceState","qualname":"::parser::sequence::ParserSequenceState","value":"SequenceState<<P as Parser>::Output, <P as Parser>::PartialState>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7069},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/sequence.rs","byte_start":366655,"byte_end":366668,"line_start":272,"line_end":272,"column_start":15,"column_end":28},"name":"PartialState1","qualname":"::parser::sequence::PartialState1","value":"PartialState1 { A }","parent":null,"children":[{"krate":0,"index":7071},{"krate":0,"index":7072},{"krate":0,"index":7073}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/sequence.rs","byte_start":358208,"byte_end":358232,"line_start":64,"line_end":64,"column_start":9,"column_end":33}}]},{"kind":"Field","id":{"krate":0,"index":7071},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/sequence.rs","byte_start":366670,"byte_end":366671,"line_start":272,"line_end":272,"column_start":30,"column_end":31},"name":"A","qualname":"::parser::sequence::PartialState1::A","value":"A","parent":{"krate":0,"index":7069},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7099},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/sequence.rs","byte_start":366688,"byte_end":366701,"line_start":273,"line_end":273,"column_start":15,"column_end":28},"name":"PartialState2","qualname":"::parser::sequence::PartialState2","value":"PartialState2 { A, B }","parent":null,"children":[{"krate":0,"index":7102},{"krate":0,"index":7103},{"krate":0,"index":7104},{"krate":0,"index":7105}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/sequence.rs","byte_start":358208,"byte_end":358232,"line_start":64,"line_end":64,"column_start":9,"column_end":33}}]},{"kind":"Field","id":{"krate":0,"index":7102},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/sequence.rs","byte_start":366703,"byte_end":366704,"line_start":273,"line_end":273,"column_start":30,"column_end":31},"name":"A","qualname":"::parser::sequence::PartialState2::A","value":"A","parent":{"krate":0,"index":7099},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7103},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/sequence.rs","byte_start":366706,"byte_end":366707,"line_start":273,"line_end":273,"column_start":33,"column_end":34},"name":"B","qualname":"::parser::sequence::PartialState2::B","value":"B","parent":{"krate":0,"index":7099},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7135},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/sequence.rs","byte_start":366724,"byte_end":366737,"line_start":274,"line_end":274,"column_start":15,"column_end":28},"name":"PartialState3","qualname":"::parser::sequence::PartialState3","value":"PartialState3 { A, B, C }","parent":null,"children":[{"krate":0,"index":7139},{"krate":0,"index":7140},{"krate":0,"index":7141},{"krate":0,"index":7142},{"krate":0,"index":7143}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/sequence.rs","byte_start":358208,"byte_end":358232,"line_start":64,"line_end":64,"column_start":9,"column_end":33}}]},{"kind":"Field","id":{"krate":0,"index":7139},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/sequence.rs","byte_start":366739,"byte_end":366740,"line_start":274,"line_end":274,"column_start":30,"column_end":31},"name":"A","qualname":"::parser::sequence::PartialState3::A","value":"A","parent":{"krate":0,"index":7135},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7140},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/sequence.rs","byte_start":366742,"byte_end":366743,"line_start":274,"line_end":274,"column_start":33,"column_end":34},"name":"B","qualname":"::parser::sequence::PartialState3::B","value":"B","parent":{"krate":0,"index":7135},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7141},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/sequence.rs","byte_start":366745,"byte_end":366746,"line_start":274,"line_end":274,"column_start":36,"column_end":37},"name":"C","qualname":"::parser::sequence::PartialState3::C","value":"C","parent":{"krate":0,"index":7135},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7177},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/sequence.rs","byte_start":366763,"byte_end":366776,"line_start":275,"line_end":275,"column_start":15,"column_end":28},"name":"PartialState4","qualname":"::parser::sequence::PartialState4","value":"PartialState4 { A, B, C, D }","parent":null,"children":[{"krate":0,"index":7182},{"krate":0,"index":7183},{"krate":0,"index":7184},{"krate":0,"index":7185},{"krate":0,"index":7186},{"krate":0,"index":7187}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/sequence.rs","byte_start":358208,"byte_end":358232,"line_start":64,"line_end":64,"column_start":9,"column_end":33}}]},{"kind":"Field","id":{"krate":0,"index":7182},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/sequence.rs","byte_start":366778,"byte_end":366779,"line_start":275,"line_end":275,"column_start":30,"column_end":31},"name":"A","qualname":"::parser::sequence::PartialState4::A","value":"A","parent":{"krate":0,"index":7177},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7183},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/sequence.rs","byte_start":366781,"byte_end":366782,"line_start":275,"line_end":275,"column_start":33,"column_end":34},"name":"B","qualname":"::parser::sequence::PartialState4::B","value":"B","parent":{"krate":0,"index":7177},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7184},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/sequence.rs","byte_start":366784,"byte_end":366785,"line_start":275,"line_end":275,"column_start":36,"column_end":37},"name":"C","qualname":"::parser::sequence::PartialState4::C","value":"C","parent":{"krate":0,"index":7177},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7185},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/sequence.rs","byte_start":366787,"byte_end":366788,"line_start":275,"line_end":275,"column_start":39,"column_end":40},"name":"D","qualname":"::parser::sequence::PartialState4::D","value":"D","parent":{"krate":0,"index":7177},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7225},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/sequence.rs","byte_start":366805,"byte_end":366818,"line_start":276,"line_end":276,"column_start":15,"column_end":28},"name":"PartialState5","qualname":"::parser::sequence::PartialState5","value":"PartialState5 { A, B, C, D, E }","parent":null,"children":[{"krate":0,"index":7231},{"krate":0,"index":7232},{"krate":0,"index":7233},{"krate":0,"index":7234},{"krate":0,"index":7235},{"krate":0,"index":7236},{"krate":0,"index":7237}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/sequence.rs","byte_start":358208,"byte_end":358232,"line_start":64,"line_end":64,"column_start":9,"column_end":33}}]},{"kind":"Field","id":{"krate":0,"index":7231},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/sequence.rs","byte_start":366820,"byte_end":366821,"line_start":276,"line_end":276,"column_start":30,"column_end":31},"name":"A","qualname":"::parser::sequence::PartialState5::A","value":"A","parent":{"krate":0,"index":7225},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7232},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/sequence.rs","byte_start":366823,"byte_end":366824,"line_start":276,"line_end":276,"column_start":33,"column_end":34},"name":"B","qualname":"::parser::sequence::PartialState5::B","value":"B","parent":{"krate":0,"index":7225},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7233},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/sequence.rs","byte_start":366826,"byte_end":366827,"line_start":276,"line_end":276,"column_start":36,"column_end":37},"name":"C","qualname":"::parser::sequence::PartialState5::C","value":"C","parent":{"krate":0,"index":7225},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7234},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/sequence.rs","byte_start":366829,"byte_end":366830,"line_start":276,"line_end":276,"column_start":39,"column_end":40},"name":"D","qualname":"::parser::sequence::PartialState5::D","value":"D","parent":{"krate":0,"index":7225},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7235},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/sequence.rs","byte_start":366832,"byte_end":366833,"line_start":276,"line_end":276,"column_start":42,"column_end":43},"name":"E","qualname":"::parser::sequence::PartialState5::E","value":"E","parent":{"krate":0,"index":7225},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7279},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/sequence.rs","byte_start":366850,"byte_end":366863,"line_start":277,"line_end":277,"column_start":15,"column_end":28},"name":"PartialState6","qualname":"::parser::sequence::PartialState6","value":"PartialState6 { A, B, C, D, E, F }","parent":null,"children":[{"krate":0,"index":7286},{"krate":0,"index":7287},{"krate":0,"index":7288},{"krate":0,"index":7289},{"krate":0,"index":7290},{"krate":0,"index":7291},{"krate":0,"index":7292},{"krate":0,"index":7293}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/sequence.rs","byte_start":358208,"byte_end":358232,"line_start":64,"line_end":64,"column_start":9,"column_end":33}}]},{"kind":"Field","id":{"krate":0,"index":7286},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/sequence.rs","byte_start":366865,"byte_end":366866,"line_start":277,"line_end":277,"column_start":30,"column_end":31},"name":"A","qualname":"::parser::sequence::PartialState6::A","value":"A","parent":{"krate":0,"index":7279},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7287},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/sequence.rs","byte_start":366868,"byte_end":366869,"line_start":277,"line_end":277,"column_start":33,"column_end":34},"name":"B","qualname":"::parser::sequence::PartialState6::B","value":"B","parent":{"krate":0,"index":7279},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7288},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/sequence.rs","byte_start":366871,"byte_end":366872,"line_start":277,"line_end":277,"column_start":36,"column_end":37},"name":"C","qualname":"::parser::sequence::PartialState6::C","value":"C","parent":{"krate":0,"index":7279},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7289},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/sequence.rs","byte_start":366874,"byte_end":366875,"line_start":277,"line_end":277,"column_start":39,"column_end":40},"name":"D","qualname":"::parser::sequence::PartialState6::D","value":"D","parent":{"krate":0,"index":7279},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7290},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/sequence.rs","byte_start":366877,"byte_end":366878,"line_start":277,"line_end":277,"column_start":42,"column_end":43},"name":"E","qualname":"::parser::sequence::PartialState6::E","value":"E","parent":{"krate":0,"index":7279},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7291},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/sequence.rs","byte_start":366880,"byte_end":366881,"line_start":277,"line_end":277,"column_start":45,"column_end":46},"name":"F","qualname":"::parser::sequence::PartialState6::F","value":"F","parent":{"krate":0,"index":7279},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7339},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/sequence.rs","byte_start":366898,"byte_end":366911,"line_start":278,"line_end":278,"column_start":15,"column_end":28},"name":"PartialState7","qualname":"::parser::sequence::PartialState7","value":"PartialState7 { A, B, C, D, E, F, G }","parent":null,"children":[{"krate":0,"index":7347},{"krate":0,"index":7348},{"krate":0,"index":7349},{"krate":0,"index":7350},{"krate":0,"index":7351},{"krate":0,"index":7352},{"krate":0,"index":7353},{"krate":0,"index":7354},{"krate":0,"index":7355}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/sequence.rs","byte_start":358208,"byte_end":358232,"line_start":64,"line_end":64,"column_start":9,"column_end":33}}]},{"kind":"Field","id":{"krate":0,"index":7347},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/sequence.rs","byte_start":366913,"byte_end":366914,"line_start":278,"line_end":278,"column_start":30,"column_end":31},"name":"A","qualname":"::parser::sequence::PartialState7::A","value":"A","parent":{"krate":0,"index":7339},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7348},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/sequence.rs","byte_start":366916,"byte_end":366917,"line_start":278,"line_end":278,"column_start":33,"column_end":34},"name":"B","qualname":"::parser::sequence::PartialState7::B","value":"B","parent":{"krate":0,"index":7339},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7349},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/sequence.rs","byte_start":366919,"byte_end":366920,"line_start":278,"line_end":278,"column_start":36,"column_end":37},"name":"C","qualname":"::parser::sequence::PartialState7::C","value":"C","parent":{"krate":0,"index":7339},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7350},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/sequence.rs","byte_start":366922,"byte_end":366923,"line_start":278,"line_end":278,"column_start":39,"column_end":40},"name":"D","qualname":"::parser::sequence::PartialState7::D","value":"D","parent":{"krate":0,"index":7339},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7351},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/sequence.rs","byte_start":366925,"byte_end":366926,"line_start":278,"line_end":278,"column_start":42,"column_end":43},"name":"E","qualname":"::parser::sequence::PartialState7::E","value":"E","parent":{"krate":0,"index":7339},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7352},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/sequence.rs","byte_start":366928,"byte_end":366929,"line_start":278,"line_end":278,"column_start":45,"column_end":46},"name":"F","qualname":"::parser::sequence::PartialState7::F","value":"F","parent":{"krate":0,"index":7339},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7353},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/sequence.rs","byte_start":366931,"byte_end":366932,"line_start":278,"line_end":278,"column_start":48,"column_end":49},"name":"G","qualname":"::parser::sequence::PartialState7::G","value":"G","parent":{"krate":0,"index":7339},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7405},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/sequence.rs","byte_start":366949,"byte_end":366962,"line_start":279,"line_end":279,"column_start":15,"column_end":28},"name":"PartialState8","qualname":"::parser::sequence::PartialState8","value":"PartialState8 { A, B, C, D, E, F, G, H }","parent":null,"children":[{"krate":0,"index":7414},{"krate":0,"index":7415},{"krate":0,"index":7416},{"krate":0,"index":7417},{"krate":0,"index":7418},{"krate":0,"index":7419},{"krate":0,"index":7420},{"krate":0,"index":7421},{"krate":0,"index":7422},{"krate":0,"index":7423}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/sequence.rs","byte_start":358208,"byte_end":358232,"line_start":64,"line_end":64,"column_start":9,"column_end":33}}]},{"kind":"Field","id":{"krate":0,"index":7414},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/sequence.rs","byte_start":366964,"byte_end":366965,"line_start":279,"line_end":279,"column_start":30,"column_end":31},"name":"A","qualname":"::parser::sequence::PartialState8::A","value":"A","parent":{"krate":0,"index":7405},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7415},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/sequence.rs","byte_start":366967,"byte_end":366968,"line_start":279,"line_end":279,"column_start":33,"column_end":34},"name":"B","qualname":"::parser::sequence::PartialState8::B","value":"B","parent":{"krate":0,"index":7405},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7416},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/sequence.rs","byte_start":366970,"byte_end":366971,"line_start":279,"line_end":279,"column_start":36,"column_end":37},"name":"C","qualname":"::parser::sequence::PartialState8::C","value":"C","parent":{"krate":0,"index":7405},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7417},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/sequence.rs","byte_start":366973,"byte_end":366974,"line_start":279,"line_end":279,"column_start":39,"column_end":40},"name":"D","qualname":"::parser::sequence::PartialState8::D","value":"D","parent":{"krate":0,"index":7405},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7418},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/sequence.rs","byte_start":366976,"byte_end":366977,"line_start":279,"line_end":279,"column_start":42,"column_end":43},"name":"E","qualname":"::parser::sequence::PartialState8::E","value":"E","parent":{"krate":0,"index":7405},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7419},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/sequence.rs","byte_start":366979,"byte_end":366980,"line_start":279,"line_end":279,"column_start":45,"column_end":46},"name":"F","qualname":"::parser::sequence::PartialState8::F","value":"F","parent":{"krate":0,"index":7405},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7420},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/sequence.rs","byte_start":366982,"byte_end":366983,"line_start":279,"line_end":279,"column_start":48,"column_end":49},"name":"G","qualname":"::parser::sequence::PartialState8::G","value":"G","parent":{"krate":0,"index":7405},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7421},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/sequence.rs","byte_start":366985,"byte_end":366986,"line_start":279,"line_end":279,"column_start":51,"column_end":52},"name":"H","qualname":"::parser::sequence::PartialState8::H","value":"H","parent":{"krate":0,"index":7405},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7477},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/sequence.rs","byte_start":367003,"byte_end":367016,"line_start":280,"line_end":280,"column_start":15,"column_end":28},"name":"PartialState9","qualname":"::parser::sequence::PartialState9","value":"PartialState9 { A, B, C, D, E, F, G, H, I }","parent":null,"children":[{"krate":0,"index":7487},{"krate":0,"index":7488},{"krate":0,"index":7489},{"krate":0,"index":7490},{"krate":0,"index":7491},{"krate":0,"index":7492},{"krate":0,"index":7493},{"krate":0,"index":7494},{"krate":0,"index":7495},{"krate":0,"index":7496},{"krate":0,"index":7497}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/sequence.rs","byte_start":358208,"byte_end":358232,"line_start":64,"line_end":64,"column_start":9,"column_end":33}}]},{"kind":"Field","id":{"krate":0,"index":7487},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/sequence.rs","byte_start":367018,"byte_end":367019,"line_start":280,"line_end":280,"column_start":30,"column_end":31},"name":"A","qualname":"::parser::sequence::PartialState9::A","value":"A","parent":{"krate":0,"index":7477},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7488},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/sequence.rs","byte_start":367021,"byte_end":367022,"line_start":280,"line_end":280,"column_start":33,"column_end":34},"name":"B","qualname":"::parser::sequence::PartialState9::B","value":"B","parent":{"krate":0,"index":7477},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7489},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/sequence.rs","byte_start":367024,"byte_end":367025,"line_start":280,"line_end":280,"column_start":36,"column_end":37},"name":"C","qualname":"::parser::sequence::PartialState9::C","value":"C","parent":{"krate":0,"index":7477},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7490},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/sequence.rs","byte_start":367027,"byte_end":367028,"line_start":280,"line_end":280,"column_start":39,"column_end":40},"name":"D","qualname":"::parser::sequence::PartialState9::D","value":"D","parent":{"krate":0,"index":7477},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7491},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/sequence.rs","byte_start":367030,"byte_end":367031,"line_start":280,"line_end":280,"column_start":42,"column_end":43},"name":"E","qualname":"::parser::sequence::PartialState9::E","value":"E","parent":{"krate":0,"index":7477},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7492},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/sequence.rs","byte_start":367033,"byte_end":367034,"line_start":280,"line_end":280,"column_start":45,"column_end":46},"name":"F","qualname":"::parser::sequence::PartialState9::F","value":"F","parent":{"krate":0,"index":7477},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7493},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/sequence.rs","byte_start":367036,"byte_end":367037,"line_start":280,"line_end":280,"column_start":48,"column_end":49},"name":"G","qualname":"::parser::sequence::PartialState9::G","value":"G","parent":{"krate":0,"index":7477},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7494},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/sequence.rs","byte_start":367039,"byte_end":367040,"line_start":280,"line_end":280,"column_start":51,"column_end":52},"name":"H","qualname":"::parser::sequence::PartialState9::H","value":"H","parent":{"krate":0,"index":7477},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7495},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/sequence.rs","byte_start":367042,"byte_end":367043,"line_start":280,"line_end":280,"column_start":54,"column_end":55},"name":"I","qualname":"::parser::sequence::PartialState9::I","value":"I","parent":{"krate":0,"index":7477},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7555},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/sequence.rs","byte_start":367060,"byte_end":367074,"line_start":281,"line_end":281,"column_start":15,"column_end":29},"name":"PartialState10","qualname":"::parser::sequence::PartialState10","value":"PartialState10 { A, B, C, D, E, F, G, H, I, J }","parent":null,"children":[{"krate":0,"index":7566},{"krate":0,"index":7567},{"krate":0,"index":7568},{"krate":0,"index":7569},{"krate":0,"index":7570},{"krate":0,"index":7571},{"krate":0,"index":7572},{"krate":0,"index":7573},{"krate":0,"index":7574},{"krate":0,"index":7575},{"krate":0,"index":7576},{"krate":0,"index":7577}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/sequence.rs","byte_start":358208,"byte_end":358232,"line_start":64,"line_end":64,"column_start":9,"column_end":33}}]},{"kind":"Field","id":{"krate":0,"index":7566},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/sequence.rs","byte_start":367076,"byte_end":367077,"line_start":281,"line_end":281,"column_start":31,"column_end":32},"name":"A","qualname":"::parser::sequence::PartialState10::A","value":"A","parent":{"krate":0,"index":7555},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7567},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/sequence.rs","byte_start":367079,"byte_end":367080,"line_start":281,"line_end":281,"column_start":34,"column_end":35},"name":"B","qualname":"::parser::sequence::PartialState10::B","value":"B","parent":{"krate":0,"index":7555},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7568},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/sequence.rs","byte_start":367082,"byte_end":367083,"line_start":281,"line_end":281,"column_start":37,"column_end":38},"name":"C","qualname":"::parser::sequence::PartialState10::C","value":"C","parent":{"krate":0,"index":7555},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7569},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/sequence.rs","byte_start":367085,"byte_end":367086,"line_start":281,"line_end":281,"column_start":40,"column_end":41},"name":"D","qualname":"::parser::sequence::PartialState10::D","value":"D","parent":{"krate":0,"index":7555},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7570},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/sequence.rs","byte_start":367088,"byte_end":367089,"line_start":281,"line_end":281,"column_start":43,"column_end":44},"name":"E","qualname":"::parser::sequence::PartialState10::E","value":"E","parent":{"krate":0,"index":7555},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7571},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/sequence.rs","byte_start":367091,"byte_end":367092,"line_start":281,"line_end":281,"column_start":46,"column_end":47},"name":"F","qualname":"::parser::sequence::PartialState10::F","value":"F","parent":{"krate":0,"index":7555},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7572},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/sequence.rs","byte_start":367094,"byte_end":367095,"line_start":281,"line_end":281,"column_start":49,"column_end":50},"name":"G","qualname":"::parser::sequence::PartialState10::G","value":"G","parent":{"krate":0,"index":7555},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7573},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/sequence.rs","byte_start":367097,"byte_end":367098,"line_start":281,"line_end":281,"column_start":52,"column_end":53},"name":"H","qualname":"::parser::sequence::PartialState10::H","value":"H","parent":{"krate":0,"index":7555},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7574},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/sequence.rs","byte_start":367100,"byte_end":367101,"line_start":281,"line_end":281,"column_start":55,"column_end":56},"name":"I","qualname":"::parser::sequence::PartialState10::I","value":"I","parent":{"krate":0,"index":7555},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7575},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/sequence.rs","byte_start":367103,"byte_end":367104,"line_start":281,"line_end":281,"column_start":58,"column_end":59},"name":"J","qualname":"::parser::sequence::PartialState10::J","value":"J","parent":{"krate":0,"index":7555},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7639},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/sequence.rs","byte_start":367121,"byte_end":367135,"line_start":282,"line_end":282,"column_start":15,"column_end":29},"name":"PartialState11","qualname":"::parser::sequence::PartialState11","value":"PartialState11 { A, B, C, D, E, F, G, H, I, J, K }","parent":null,"children":[{"krate":0,"index":7651},{"krate":0,"index":7652},{"krate":0,"index":7653},{"krate":0,"index":7654},{"krate":0,"index":7655},{"krate":0,"index":7656},{"krate":0,"index":7657},{"krate":0,"index":7658},{"krate":0,"index":7659},{"krate":0,"index":7660},{"krate":0,"index":7661},{"krate":0,"index":7662},{"krate":0,"index":7663}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/sequence.rs","byte_start":358208,"byte_end":358232,"line_start":64,"line_end":64,"column_start":9,"column_end":33}}]},{"kind":"Field","id":{"krate":0,"index":7651},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/sequence.rs","byte_start":367137,"byte_end":367138,"line_start":282,"line_end":282,"column_start":31,"column_end":32},"name":"A","qualname":"::parser::sequence::PartialState11::A","value":"A","parent":{"krate":0,"index":7639},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7652},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/sequence.rs","byte_start":367140,"byte_end":367141,"line_start":282,"line_end":282,"column_start":34,"column_end":35},"name":"B","qualname":"::parser::sequence::PartialState11::B","value":"B","parent":{"krate":0,"index":7639},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7653},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/sequence.rs","byte_start":367143,"byte_end":367144,"line_start":282,"line_end":282,"column_start":37,"column_end":38},"name":"C","qualname":"::parser::sequence::PartialState11::C","value":"C","parent":{"krate":0,"index":7639},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7654},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/sequence.rs","byte_start":367146,"byte_end":367147,"line_start":282,"line_end":282,"column_start":40,"column_end":41},"name":"D","qualname":"::parser::sequence::PartialState11::D","value":"D","parent":{"krate":0,"index":7639},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7655},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/sequence.rs","byte_start":367149,"byte_end":367150,"line_start":282,"line_end":282,"column_start":43,"column_end":44},"name":"E","qualname":"::parser::sequence::PartialState11::E","value":"E","parent":{"krate":0,"index":7639},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7656},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/sequence.rs","byte_start":367152,"byte_end":367153,"line_start":282,"line_end":282,"column_start":46,"column_end":47},"name":"F","qualname":"::parser::sequence::PartialState11::F","value":"F","parent":{"krate":0,"index":7639},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7657},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/sequence.rs","byte_start":367155,"byte_end":367156,"line_start":282,"line_end":282,"column_start":49,"column_end":50},"name":"G","qualname":"::parser::sequence::PartialState11::G","value":"G","parent":{"krate":0,"index":7639},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7658},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/sequence.rs","byte_start":367158,"byte_end":367159,"line_start":282,"line_end":282,"column_start":52,"column_end":53},"name":"H","qualname":"::parser::sequence::PartialState11::H","value":"H","parent":{"krate":0,"index":7639},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7659},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/sequence.rs","byte_start":367161,"byte_end":367162,"line_start":282,"line_end":282,"column_start":55,"column_end":56},"name":"I","qualname":"::parser::sequence::PartialState11::I","value":"I","parent":{"krate":0,"index":7639},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7660},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/sequence.rs","byte_start":367164,"byte_end":367165,"line_start":282,"line_end":282,"column_start":58,"column_end":59},"name":"J","qualname":"::parser::sequence::PartialState11::J","value":"J","parent":{"krate":0,"index":7639},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7661},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/sequence.rs","byte_start":367167,"byte_end":367168,"line_start":282,"line_end":282,"column_start":61,"column_end":62},"name":"K","qualname":"::parser::sequence::PartialState11::K","value":"K","parent":{"krate":0,"index":7639},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7729},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/sequence.rs","byte_start":367185,"byte_end":367199,"line_start":283,"line_end":283,"column_start":15,"column_end":29},"name":"PartialState12","qualname":"::parser::sequence::PartialState12","value":"PartialState12 { A, B, C, D, E, F, G, H, I, J, K, L }","parent":null,"children":[{"krate":0,"index":7742},{"krate":0,"index":7743},{"krate":0,"index":7744},{"krate":0,"index":7745},{"krate":0,"index":7746},{"krate":0,"index":7747},{"krate":0,"index":7748},{"krate":0,"index":7749},{"krate":0,"index":7750},{"krate":0,"index":7751},{"krate":0,"index":7752},{"krate":0,"index":7753},{"krate":0,"index":7754},{"krate":0,"index":7755}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/sequence.rs","byte_start":358208,"byte_end":358232,"line_start":64,"line_end":64,"column_start":9,"column_end":33}}]},{"kind":"Field","id":{"krate":0,"index":7742},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/sequence.rs","byte_start":367201,"byte_end":367202,"line_start":283,"line_end":283,"column_start":31,"column_end":32},"name":"A","qualname":"::parser::sequence::PartialState12::A","value":"A","parent":{"krate":0,"index":7729},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7743},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/sequence.rs","byte_start":367204,"byte_end":367205,"line_start":283,"line_end":283,"column_start":34,"column_end":35},"name":"B","qualname":"::parser::sequence::PartialState12::B","value":"B","parent":{"krate":0,"index":7729},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7744},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/sequence.rs","byte_start":367207,"byte_end":367208,"line_start":283,"line_end":283,"column_start":37,"column_end":38},"name":"C","qualname":"::parser::sequence::PartialState12::C","value":"C","parent":{"krate":0,"index":7729},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7745},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/sequence.rs","byte_start":367210,"byte_end":367211,"line_start":283,"line_end":283,"column_start":40,"column_end":41},"name":"D","qualname":"::parser::sequence::PartialState12::D","value":"D","parent":{"krate":0,"index":7729},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7746},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/sequence.rs","byte_start":367213,"byte_end":367214,"line_start":283,"line_end":283,"column_start":43,"column_end":44},"name":"E","qualname":"::parser::sequence::PartialState12::E","value":"E","parent":{"krate":0,"index":7729},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7747},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/sequence.rs","byte_start":367216,"byte_end":367217,"line_start":283,"line_end":283,"column_start":46,"column_end":47},"name":"F","qualname":"::parser::sequence::PartialState12::F","value":"F","parent":{"krate":0,"index":7729},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7748},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/sequence.rs","byte_start":367219,"byte_end":367220,"line_start":283,"line_end":283,"column_start":49,"column_end":50},"name":"G","qualname":"::parser::sequence::PartialState12::G","value":"G","parent":{"krate":0,"index":7729},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7749},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/sequence.rs","byte_start":367222,"byte_end":367223,"line_start":283,"line_end":283,"column_start":52,"column_end":53},"name":"H","qualname":"::parser::sequence::PartialState12::H","value":"H","parent":{"krate":0,"index":7729},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7750},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/sequence.rs","byte_start":367225,"byte_end":367226,"line_start":283,"line_end":283,"column_start":55,"column_end":56},"name":"I","qualname":"::parser::sequence::PartialState12::I","value":"I","parent":{"krate":0,"index":7729},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7751},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/sequence.rs","byte_start":367228,"byte_end":367229,"line_start":283,"line_end":283,"column_start":58,"column_end":59},"name":"J","qualname":"::parser::sequence::PartialState12::J","value":"J","parent":{"krate":0,"index":7729},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7752},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/sequence.rs","byte_start":367231,"byte_end":367232,"line_start":283,"line_end":283,"column_start":61,"column_end":62},"name":"K","qualname":"::parser::sequence::PartialState12::K","value":"K","parent":{"krate":0,"index":7729},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7753},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/sequence.rs","byte_start":367234,"byte_end":367235,"line_start":283,"line_end":283,"column_start":64,"column_end":65},"name":"L","qualname":"::parser::sequence::PartialState12::L","value":"L","parent":{"krate":0,"index":7729},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7784},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/sequence.rs","byte_start":371205,"byte_end":371209,"line_start":406,"line_end":406,"column_start":12,"column_end":16},"name":"With","qualname":"::parser::sequence::With","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":2104},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/sequence.rs","byte_start":372212,"byte_end":372216,"line_start":446,"line_end":446,"column_start":8,"column_end":12},"name":"with","qualname":"::parser::sequence::with","value":"pub fn with<P1, P2>(P1, P2) -> With<P1, P2> where P1: Parser, P2: Parser<Input\n= P1::Input>","parent":null,"children":[],"decl_id":null,"docs":" Equivalent to [`p1.with(p2)`].","sig":null,"attributes":[{"value":"/ Equivalent to [`p1.with(p2)`].","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/sequence.rs","byte_start":372087,"byte_end":372121,"line_start":442,"line_end":442,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/sequence.rs","byte_start":372122,"byte_end":372125,"line_start":443,"line_end":443,"column_start":1,"column_end":4}},{"value":"/ [`p1.with(p2)`]: ../parser/trait.Parser.html#method.with","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/sequence.rs","byte_start":372126,"byte_end":372186,"line_start":444,"line_end":444,"column_start":1,"column_end":61}},{"value":"inline(always)","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/sequence.rs","byte_start":372187,"byte_end":372204,"line_start":445,"line_end":445,"column_start":1,"column_end":18}}]},{"kind":"Struct","id":{"krate":0,"index":7801},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/sequence.rs","byte_start":372380,"byte_end":372384,"line_start":455,"line_end":455,"column_start":12,"column_end":16},"name":"Skip","qualname":"::parser::sequence::Skip","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":2117},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/sequence.rs","byte_start":373116,"byte_end":373120,"line_start":487,"line_end":487,"column_start":8,"column_end":12},"name":"skip","qualname":"::parser::sequence::skip","value":"pub fn skip<P1, P2>(P1, P2) -> Skip<P1, P2> where P1: Parser, P2: Parser<Input\n= P1::Input>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/sequence.rs","byte_start":373091,"byte_end":373108,"line_start":486,"line_end":486,"column_start":1,"column_end":18}}]},{"kind":"Struct","id":{"krate":0,"index":7825},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/sequence.rs","byte_start":373269,"byte_end":373276,"line_start":496,"line_end":496,"column_start":5,"column_end":12},"name":"Between","qualname":"::parser::sequence::Between","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":2120},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/sequence.rs","byte_start":373768,"byte_end":373775,"line_start":515,"line_end":515,"column_start":8,"column_end":15},"name":"between","qualname":"::parser::sequence::between","value":"pub fn between<I, L, R, P>(L, R, P) -> Between<L, R, P> where I: Stream,\nL: Parser<Input = I>, R: Parser<Input = I>, P: Parser<Input = I>","parent":null,"children":[],"decl_id":null,"docs":" Parses `open` followed by `parser` followed by `close`.\n Returns the value of `parser`.","sig":null,"attributes":[{"value":"/ Parses `open` followed by `parser` followed by `close`.","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/sequence.rs","byte_start":373362,"byte_end":373421,"line_start":500,"line_end":500,"column_start":1,"column_end":60}},{"value":"/ Returns the value of `parser`.","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/sequence.rs","byte_start":373422,"byte_end":373456,"line_start":501,"line_end":501,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/sequence.rs","byte_start":373457,"byte_end":373460,"line_start":502,"line_end":502,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/sequence.rs","byte_start":373461,"byte_end":373468,"line_start":503,"line_end":503,"column_start":1,"column_end":8}},{"value":"/ # extern crate combine;","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/sequence.rs","byte_start":373469,"byte_end":373496,"line_start":504,"line_end":504,"column_start":1,"column_end":28}},{"value":"/ # use combine::*;","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/sequence.rs","byte_start":373497,"byte_end":373518,"line_start":505,"line_end":505,"column_start":1,"column_end":22}},{"value":"/ # use combine::parser::char::string;","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/sequence.rs","byte_start":373519,"byte_end":373559,"line_start":506,"line_end":506,"column_start":1,"column_end":41}},{"value":"/ # fn main() {","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/sequence.rs","byte_start":373560,"byte_end":373577,"line_start":507,"line_end":507,"column_start":1,"column_end":18}},{"value":"/ let result = between(token('['), token(']'), string(\"rust\"))","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/sequence.rs","byte_start":373578,"byte_end":373642,"line_start":508,"line_end":508,"column_start":1,"column_end":65}},{"value":"/     .parse(\"[rust]\")","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/sequence.rs","byte_start":373643,"byte_end":373667,"line_start":509,"line_end":509,"column_start":1,"column_end":25}},{"value":"/     .map(|x| x.0);","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/sequence.rs","byte_start":373668,"byte_end":373690,"line_start":510,"line_end":510,"column_start":1,"column_end":23}},{"value":"/ assert_eq!(result, Ok(\"rust\"));","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/sequence.rs","byte_start":373691,"byte_end":373726,"line_start":511,"line_end":511,"column_start":1,"column_end":36}},{"value":"/ # }","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/sequence.rs","byte_start":373727,"byte_end":373734,"line_start":512,"line_end":512,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/sequence.rs","byte_start":373735,"byte_end":373742,"line_start":513,"line_end":513,"column_start":1,"column_end":8}},{"value":"inline(always)","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/sequence.rs","byte_start":373743,"byte_end":373760,"line_start":514,"line_end":514,"column_start":1,"column_end":18}}]},{"kind":"Struct","id":{"krate":0,"index":7842},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/sequence.rs","byte_start":374091,"byte_end":374095,"line_start":529,"line_end":529,"column_start":12,"column_end":16},"name":"Then","qualname":"::parser::sequence::Then","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":2139},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/sequence.rs","byte_start":376498,"byte_end":376502,"line_start":610,"line_end":610,"column_start":8,"column_end":12},"name":"then","qualname":"::parser::sequence::then","value":"pub fn then<P, F, N>(P, F) -> Then<P, F> where F: FnMut(P::Output) -> N,\nP: Parser, N: Parser<Input = P::Input>","parent":null,"children":[],"decl_id":null,"docs":" Equivalent to [`p.then(f)`].","sig":null,"attributes":[{"value":"/ Equivalent to [`p.then(f)`].","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/sequence.rs","byte_start":376377,"byte_end":376409,"line_start":606,"line_end":606,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/sequence.rs","byte_start":376410,"byte_end":376413,"line_start":607,"line_end":607,"column_start":1,"column_end":4}},{"value":"/ [`p.then(f)`]: ../parser/trait.Parser.html#method.then","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/sequence.rs","byte_start":376414,"byte_end":376472,"line_start":608,"line_end":608,"column_start":1,"column_end":59}},{"value":"inline(always)","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/sequence.rs","byte_start":376473,"byte_end":376490,"line_start":609,"line_end":609,"column_start":1,"column_end":18}}]},{"kind":"Struct","id":{"krate":0,"index":7857},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/sequence.rs","byte_start":376676,"byte_end":376687,"line_start":620,"line_end":620,"column_start":12,"column_end":23},"name":"ThenPartial","qualname":"::parser::sequence::ThenPartial","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":2153},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/sequence.rs","byte_start":379090,"byte_end":379102,"line_start":698,"line_end":698,"column_start":8,"column_end":20},"name":"then_partial","qualname":"::parser::sequence::then_partial","value":"pub fn then_partial<P, F, N>(P, F) -> ThenPartial<P, F> where\nF: FnMut(&mut P::Output) -> N, P: Parser, N: Parser<Input = P::Input>","parent":null,"children":[],"decl_id":null,"docs":" Equivalent to [`p.then_partial(f)`].","sig":null,"attributes":[{"value":"/ Equivalent to [`p.then_partial(f)`].","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/sequence.rs","byte_start":378945,"byte_end":378985,"line_start":694,"line_end":694,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/sequence.rs","byte_start":378986,"byte_end":378989,"line_start":695,"line_end":695,"column_start":1,"column_end":4}},{"value":"/ [`p.then_partial(f)`]: ../parser/trait.Parser.html#method.then_partial","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/sequence.rs","byte_start":378990,"byte_end":379064,"line_start":696,"line_end":696,"column_start":1,"column_end":75}},{"value":"inline(always)","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/sequence.rs","byte_start":379065,"byte_end":379082,"line_start":697,"line_end":697,"column_start":1,"column_end":18}}]},{"kind":"Trait","id":{"krate":0,"index":2157},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":136647,"byte_end":136653,"line_start":88,"line_end":88,"column_start":11,"column_end":17},"name":"Parser","qualname":"::parser::Parser","value":"Parser","parent":null,"children":[{"krate":0,"index":2158},{"krate":0,"index":2159},{"krate":0,"index":2160},{"krate":0,"index":2161},{"krate":0,"index":2164},{"krate":0,"index":2165},{"krate":0,"index":2166},{"krate":0,"index":2167},{"krate":0,"index":2168},{"krate":0,"index":2169},{"krate":0,"index":2170},{"krate":0,"index":2171},{"krate":0,"index":2172},{"krate":0,"index":2174},{"krate":0,"index":2176},{"krate":0,"index":2178},{"krate":0,"index":2179},{"krate":0,"index":2180},{"krate":0,"index":2181},{"krate":0,"index":2182},{"krate":0,"index":2184},{"krate":0,"index":2186},{"krate":0,"index":2188},{"krate":0,"index":2190},{"krate":0,"index":2193},{"krate":0,"index":2196},{"krate":0,"index":2199},{"krate":0,"index":2202},{"krate":0,"index":2204},{"krate":0,"index":2206},{"krate":0,"index":2207},{"krate":0,"index":2212},{"krate":0,"index":2213},{"krate":0,"index":2217},{"krate":0,"index":2219},{"krate":0,"index":2221}],"decl_id":null,"docs":" By implementing the `Parser` trait a type says that it can be used to parse an input stream\n into the type `Output`.","sig":null,"attributes":[{"value":"/ By implementing the `Parser` trait a type says that it can be used to parse an input stream","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":135944,"byte_end":136039,"line_start":76,"line_end":76,"column_start":1,"column_end":96}},{"value":"/ into the type `Output`.","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":136040,"byte_end":136067,"line_start":77,"line_end":77,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":136068,"byte_end":136071,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ All methods have a default implementation but there needs to be at least an implementation of","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":136072,"byte_end":136169,"line_start":79,"line_end":79,"column_start":1,"column_end":98}},{"value":"/ [`parse_stream`], [`parse_stream_consumed`], or [`parse_lazy`]. If the last is implemented, an","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":136170,"byte_end":136268,"line_start":80,"line_end":80,"column_start":1,"column_end":99}},{"value":"/ implementation of [`add_error`] may also be required. See the documentation for","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":136269,"byte_end":136352,"line_start":81,"line_end":81,"column_start":1,"column_end":84}},{"value":"/ [`parse_lazy`] for details.","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":136353,"byte_end":136384,"line_start":82,"line_end":82,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":136385,"byte_end":136388,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/ [`parse_stream`]: trait.Parser.html#method.parse_stream","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":136389,"byte_end":136448,"line_start":84,"line_end":84,"column_start":1,"column_end":60}},{"value":"/ [`parse_stream_consumed`]: trait.Parser.html#method.parse_stream_consumed","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":136449,"byte_end":136526,"line_start":85,"line_end":85,"column_start":1,"column_end":78}},{"value":"/ [`parse_lazy`]: trait.Parser.html#method.parse_lazy","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":136527,"byte_end":136582,"line_start":86,"line_end":86,"column_start":1,"column_end":56}},{"value":"/ [`add_error`]: trait.Parser.html#method.add_error","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":136583,"byte_end":136636,"line_start":87,"line_end":87,"column_start":1,"column_end":54}}]},{"kind":"Type","id":{"krate":0,"index":2158},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":136826,"byte_end":136831,"line_start":91,"line_end":91,"column_start":10,"column_end":15},"name":"Input","qualname":"::parser::Parser::Input","value":"type Input: Stream;","parent":{"krate":0,"index":2157},"children":[],"decl_id":null,"docs":" The type which is taken as input for the parser. The type must implement the `Stream` trait\n which allows the parser to read items from the type.\n","sig":null,"attributes":[{"value":"/ The type which is taken as input for the parser. The type must implement the `Stream` trait","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":136660,"byte_end":136755,"line_start":89,"line_end":89,"column_start":5,"column_end":100}},{"value":"/ which allows the parser to read items from the type.","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":136760,"byte_end":136816,"line_start":90,"line_end":90,"column_start":5,"column_end":61}}]},{"kind":"Type","id":{"krate":0,"index":2159},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":136914,"byte_end":136920,"line_start":93,"line_end":93,"column_start":10,"column_end":16},"name":"Output","qualname":"::parser::Parser::Output","value":"type Output;","parent":{"krate":0,"index":2157},"children":[],"decl_id":null,"docs":" The type which is returned if the parser is successful.\n","sig":null,"attributes":[{"value":"/ The type which is returned if the parser is successful.","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":136845,"byte_end":136904,"line_start":92,"line_end":92,"column_start":5,"column_end":64}}]},{"kind":"Type","id":{"krate":0,"index":2160},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":137096,"byte_end":137108,"line_start":98,"line_end":98,"column_start":10,"column_end":22},"name":"PartialState","qualname":"::parser::Parser::PartialState","value":"type PartialState: Default;","parent":{"krate":0,"index":2157},"children":[],"decl_id":null,"docs":" Determines the state necessary to resume parsing after more input is supplied.","sig":null,"attributes":[{"value":"/ Determines the state necessary to resume parsing after more input is supplied.","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":136927,"byte_end":137009,"line_start":95,"line_end":95,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":137014,"byte_end":137017,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ If partial parsing is not supported this can be set to `()`.","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":137022,"byte_end":137086,"line_start":97,"line_end":97,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":2161},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":138526,"byte_end":138536,"line_start":142,"line_end":142,"column_start":8,"column_end":18},"name":"easy_parse","qualname":"::parser::Parser::easy_parse","value":"pub fn easy_parse<I>(&mut Self, I)\n-> Result<(Self::Output, I), ::easy::ParseError<I>> where I: Stream,\n::easy::Stream<I>: StreamOnce<Item = I::Item, Range = I::Item, Error =\nI::Item, Position = I::Item>, I::Position: Default, Self: Sized + Parser<Input\n= ::easy::Stream<I>>","parent":{"krate":0,"index":2157},"children":[],"decl_id":null,"docs":" Entry point of the parser. Takes some input and tries to parse it, returning an easy to use\n and format error if parsing did not succeed.","sig":null,"attributes":[{"value":"/ Entry point of the parser. Takes some input and tries to parse it, returning an easy to use","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":137124,"byte_end":137219,"line_start":100,"line_end":100,"column_start":5,"column_end":100}},{"value":"/ and format error if parsing did not succeed.","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":137224,"byte_end":137272,"line_start":101,"line_end":101,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":137277,"byte_end":137280,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ Returns the parsed result and the remaining input if the parser succeeds, or a","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":137285,"byte_end":137367,"line_start":103,"line_end":103,"column_start":5,"column_end":87}},{"value":"/ This function wraps requires `Self::Input == easy::Stream<I>` which makes it return","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":137372,"byte_end":137459,"line_start":104,"line_end":104,"column_start":5,"column_end":92}},{"value":"/ return `easy::Errors` if an error occurs. Due to this wrapping it is recommended that the","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":137464,"byte_end":137557,"line_start":105,"line_end":105,"column_start":5,"column_end":98}},{"value":"/ parser `Self` is written with a generic input type.","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":137562,"byte_end":137617,"line_start":106,"line_end":106,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":137622,"byte_end":137625,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":137630,"byte_end":137637,"line_start":108,"line_end":108,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use]","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":137642,"byte_end":137660,"line_start":109,"line_end":109,"column_start":5,"column_end":23}},{"value":"/ # extern crate combine;","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":137665,"byte_end":137692,"line_start":110,"line_end":110,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":137697,"byte_end":137700,"line_start":111,"line_end":111,"column_start":5,"column_end":8}},{"value":"/ use combine::{Parser, Stream};","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":137705,"byte_end":137739,"line_start":112,"line_end":112,"column_start":5,"column_end":39}},{"value":"/ use combine::parser::repeat::many1;","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":137744,"byte_end":137783,"line_start":113,"line_end":113,"column_start":5,"column_end":44}},{"value":"/ use combine::parser::char::letter;","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":137788,"byte_end":137826,"line_start":114,"line_end":114,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":137831,"byte_end":137834,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ // Good!","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":137839,"byte_end":137851,"line_start":116,"line_end":116,"column_start":5,"column_end":17}},{"value":"/ parser!{","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":137856,"byte_end":137868,"line_start":117,"line_end":117,"column_start":5,"column_end":17}},{"value":"/ fn my_parser[I]()(I) -> String","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":137873,"byte_end":137907,"line_start":118,"line_end":118,"column_start":5,"column_end":39}},{"value":"/     where [I: Stream<Item=char>]","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":137912,"byte_end":137948,"line_start":119,"line_end":119,"column_start":5,"column_end":41}},{"value":"/ {","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":137953,"byte_end":137958,"line_start":120,"line_end":120,"column_start":5,"column_end":10}},{"value":"/     many1(letter())","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":137963,"byte_end":137986,"line_start":121,"line_end":121,"column_start":5,"column_end":28}},{"value":"/ }","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":137991,"byte_end":137996,"line_start":122,"line_end":122,"column_start":5,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":138001,"byte_end":138006,"line_start":123,"line_end":123,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":138011,"byte_end":138014,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ // Won't compile with `easy_parse` since it is specialized on `&str`","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":138019,"byte_end":138091,"line_start":125,"line_end":125,"column_start":5,"column_end":77}},{"value":"/ parser!{","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":138096,"byte_end":138108,"line_start":126,"line_end":126,"column_start":5,"column_end":17}},{"value":"/ fn my_parser2['a]()(&'a str) -> String","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":138113,"byte_end":138155,"line_start":127,"line_end":127,"column_start":5,"column_end":47}},{"value":"/ {","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":138160,"byte_end":138165,"line_start":128,"line_end":128,"column_start":5,"column_end":10}},{"value":"/     many1(letter())","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":138170,"byte_end":138193,"line_start":129,"line_end":129,"column_start":5,"column_end":28}},{"value":"/ }","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":138198,"byte_end":138203,"line_start":130,"line_end":130,"column_start":5,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":138208,"byte_end":138213,"line_start":131,"line_end":131,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":138218,"byte_end":138221,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ fn main() {","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":138226,"byte_end":138241,"line_start":133,"line_end":133,"column_start":5,"column_end":20}},{"value":"/     assert_eq!(my_parser().parse(\"abc\"), Ok((\"abc\".to_string(), \"\")));","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":138246,"byte_end":138320,"line_start":134,"line_end":134,"column_start":5,"column_end":79}},{"value":"/     // Would fail to compile if uncommented","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":138325,"byte_end":138372,"line_start":135,"line_end":135,"column_start":5,"column_end":52}},{"value":"/     // my_parser2().parse(\"abc\")","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":138377,"byte_end":138413,"line_start":136,"line_end":136,"column_start":5,"column_end":41}},{"value":"/ }","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":138418,"byte_end":138423,"line_start":137,"line_end":137,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":138428,"byte_end":138435,"line_start":138,"line_end":138,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":138440,"byte_end":138443,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ [`ParseError`]: struct.ParseError.html","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":138448,"byte_end":138490,"line_start":140,"line_end":140,"column_start":5,"column_end":47}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":138495,"byte_end":138518,"line_start":141,"line_end":141,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":2164},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":139683,"byte_end":139688,"line_start":170,"line_end":170,"column_start":8,"column_end":13},"name":"parse","qualname":"::parser::Parser::parse","value":"pub fn parse(&mut Self, Self::Input)\n-> Result<(Self::Output, Self::Input), <Self::Input as StreamOnce>::Error>","parent":{"krate":0,"index":2157},"children":[],"decl_id":null,"docs":" Entry point of the parser. Takes some input and tries to parse it.","sig":null,"attributes":[{"value":"/ Entry point of the parser. Takes some input and tries to parse it.","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":139049,"byte_end":139119,"line_start":158,"line_end":158,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":139124,"byte_end":139127,"line_start":159,"line_end":159,"column_start":5,"column_end":8}},{"value":"/ Returns the parsed result and the remaining input if the parser succeeds, or a","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":139132,"byte_end":139214,"line_start":160,"line_end":160,"column_start":5,"column_end":87}},{"value":"/ error otherwise.","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":139219,"byte_end":139239,"line_start":161,"line_end":161,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":139244,"byte_end":139247,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ This is the most straightforward entry point to a parser. Since it does not decorate the","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":139252,"byte_end":139344,"line_start":163,"line_end":163,"column_start":5,"column_end":97}},{"value":"/ input in any way you may find the error messages a hard to read. If that is the case you","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":139349,"byte_end":139441,"line_start":164,"line_end":164,"column_start":5,"column_end":97}},{"value":"/ may want to try wrapping your input with an [`easy::Stream`][] or call [`easy_parse`][]","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":139446,"byte_end":139537,"line_start":165,"line_end":165,"column_start":5,"column_end":96}},{"value":"/ instead.","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":139542,"byte_end":139554,"line_start":166,"line_end":166,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":139559,"byte_end":139562,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ [`easy::Stream`]: ../easy/struct.Stream.html","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":139567,"byte_end":139615,"line_start":168,"line_end":168,"column_start":5,"column_end":53}},{"value":"/ [`easy_parse`]: trait.Parser.html#method.easy_parse","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":139620,"byte_end":139675,"line_start":169,"line_end":169,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":2165},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":140223,"byte_end":140239,"line_start":185,"line_end":185,"column_start":8,"column_end":24},"name":"parse_with_state","qualname":"::parser::Parser::parse_with_state","value":"pub fn parse_with_state(&mut Self, &mut Self::Input, &mut Self::PartialState)\n-> Result<Self::Output, <Self::Input as StreamOnce>::Error>","parent":{"krate":0,"index":2157},"children":[],"decl_id":null,"docs":" Entry point of the parser when using partial parsing.\n Takes some input and tries to parse it.","sig":null,"attributes":[{"value":"/ Entry point of the parser when using partial parsing.","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":139990,"byte_end":140047,"line_start":180,"line_end":180,"column_start":5,"column_end":62}},{"value":"/ Takes some input and tries to parse it.","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":140052,"byte_end":140095,"line_start":181,"line_end":181,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":140100,"byte_end":140103,"line_start":182,"line_end":182,"column_start":5,"column_end":8}},{"value":"/ Returns the parsed result and the remaining input if the parser succeeds, or a","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":140108,"byte_end":140190,"line_start":183,"line_end":183,"column_start":5,"column_end":87}},{"value":"/ error otherwise.","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":140195,"byte_end":140215,"line_start":184,"line_end":184,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":2166},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":141069,"byte_end":141081,"line_start":205,"line_end":205,"column_start":8,"column_end":20},"name":"parse_stream","qualname":"::parser::Parser::parse_stream","value":"pub fn parse_stream(&mut Self, &mut Self::Input)\n-> ParseResult<Self::Output, Self::Input>","parent":{"krate":0,"index":2157},"children":[],"decl_id":null,"docs":" Parses using the stream `input` by calling [`Stream::uncons`] one or more times.","sig":null,"attributes":[{"value":"/ Parses using the stream `input` by calling [`Stream::uncons`] one or more times.","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":140584,"byte_end":140668,"line_start":196,"line_end":196,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":140673,"byte_end":140676,"line_start":197,"line_end":197,"column_start":5,"column_end":8}},{"value":"/ On success returns `Ok((value, new_state))`, and on failure returns `Err(error)`.","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":140681,"byte_end":140766,"line_start":198,"line_end":198,"column_start":5,"column_end":90}},{"value":"/ Furthermore `new_state` and `error` are wrapped in [`Consumed`], providing information on","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":140771,"byte_end":140864,"line_start":199,"line_end":199,"column_start":5,"column_end":98}},{"value":"/ whether this parser consumed any input data or not.","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":140869,"byte_end":140924,"line_start":200,"line_end":200,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":140929,"byte_end":140932,"line_start":201,"line_end":201,"column_start":5,"column_end":8}},{"value":"/ [`Stream::uncons`]: trait.StreamOnce.html#tymethod.uncons","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":140937,"byte_end":140998,"line_start":202,"line_end":202,"column_start":5,"column_end":66}},{"value":"/ [`Consumed`]: enum.Consumed.html","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":141003,"byte_end":141039,"line_start":203,"line_end":203,"column_start":5,"column_end":41}},{"value":"inline(always)","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":141044,"byte_end":141061,"line_start":204,"line_end":204,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2167},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":141739,"byte_end":141760,"line_start":219,"line_end":219,"column_start":8,"column_end":29},"name":"parse_stream_consumed","qualname":"::parser::Parser::parse_stream_consumed","value":"pub fn parse_stream_consumed(&mut Self, &mut Self::Input)\n-> ConsumedResult<Self::Output, Self::Input>","parent":{"krate":0,"index":2157},"children":[],"decl_id":null,"docs":" Parses using the stream `input` by calling [`Stream::uncons`] one or more times.","sig":null,"attributes":[{"value":"/ Parses using the stream `input` by calling [`Stream::uncons`] one or more times.","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":141222,"byte_end":141306,"line_start":209,"line_end":209,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":141311,"byte_end":141314,"line_start":210,"line_end":210,"column_start":5,"column_end":8}},{"value":"/ Semantically equivalent to [`parse_stream`], except this method returns a flattened result","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":141319,"byte_end":141413,"line_start":211,"line_end":211,"column_start":5,"column_end":99}},{"value":"/ type, combining `Result` and [`Consumed`] into a single [`FastResult`].","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":141418,"byte_end":141493,"line_start":212,"line_end":212,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":141498,"byte_end":141501,"line_start":213,"line_end":213,"column_start":5,"column_end":8}},{"value":"/ [`Stream::uncons`]: trait.StreamOnce.html#tymethod.uncons","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":141506,"byte_end":141567,"line_start":214,"line_end":214,"column_start":5,"column_end":66}},{"value":"/ [`parse_stream`]: trait.Parser.html#method.parse_stream","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":141572,"byte_end":141631,"line_start":215,"line_end":215,"column_start":5,"column_end":64}},{"value":"/ [`Consumed`]: enum.Consumed.html","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":141636,"byte_end":141672,"line_start":216,"line_end":216,"column_start":5,"column_end":41}},{"value":"/ [`FastResult`]: enum.FastResult.html","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":141677,"byte_end":141717,"line_start":217,"line_end":217,"column_start":5,"column_end":45}},{"value":"inline","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":141722,"byte_end":141731,"line_start":218,"line_end":218,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2168},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":142360,"byte_end":142389,"line_start":238,"line_end":238,"column_start":8,"column_end":37},"name":"parse_stream_consumed_partial","qualname":"::parser::Parser::parse_stream_consumed_partial","value":"pub fn parse_stream_consumed_partial(&mut Self, &mut Self::Input,\n                                     &mut Self::PartialState)\n-> ConsumedResult<Self::Output, Self::Input>","parent":{"krate":0,"index":2157},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":142343,"byte_end":142352,"line_start":237,"line_end":237,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2169},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":144183,"byte_end":144193,"line_start":277,"line_end":277,"column_start":8,"column_end":18},"name":"parse_lazy","qualname":"::parser::Parser::parse_lazy","value":"pub fn parse_lazy(&mut Self, &mut Self::Input)\n-> ConsumedResult<Self::Output, Self::Input>","parent":{"krate":0,"index":2157},"children":[],"decl_id":null,"docs":" Parses using the stream `input` by calling [`Stream::uncons`] one or more times.","sig":null,"attributes":[{"value":"/ Parses using the stream `input` by calling [`Stream::uncons`] one or more times.","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":142965,"byte_end":143049,"line_start":256,"line_end":256,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":143054,"byte_end":143057,"line_start":257,"line_end":257,"column_start":5,"column_end":8}},{"value":"/ Specialized version of [`parse_stream_consumed`] which permits error value creation to be","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":143062,"byte_end":143155,"line_start":258,"line_end":258,"column_start":5,"column_end":98}},{"value":"/ skipped in the common case.","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":143160,"byte_end":143191,"line_start":259,"line_end":259,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":143196,"byte_end":143199,"line_start":260,"line_end":260,"column_start":5,"column_end":8}},{"value":"/ When this parser returns `EmptyErr`, this method is allowed to return an empty","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":143204,"byte_end":143286,"line_start":261,"line_end":261,"column_start":5,"column_end":87}},{"value":"/ [`Error`]. The error value that would have been returned can instead be obtained by","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":143291,"byte_end":143378,"line_start":262,"line_end":262,"column_start":5,"column_end":92}},{"value":"/ calling [`add_error`]. This allows a parent parser such as `choice` to skip the creation of","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":143383,"byte_end":143478,"line_start":263,"line_end":263,"column_start":5,"column_end":100}},{"value":"/ an unnecessary error value, if an alternative parser succeeds.","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":143483,"byte_end":143549,"line_start":264,"line_end":264,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":143554,"byte_end":143557,"line_start":265,"line_end":265,"column_start":5,"column_end":8}},{"value":"/ External callers should never have to call this function directly.","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":143562,"byte_end":143632,"line_start":266,"line_end":266,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":143637,"byte_end":143640,"line_start":267,"line_end":267,"column_start":5,"column_end":8}},{"value":"/ Parsers should seek to implement this function instead of the above two if errors can be","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":143645,"byte_end":143737,"line_start":268,"line_end":268,"column_start":5,"column_end":97}},{"value":"/ encountered before consuming input. The default implementation always returns all errors,","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":143742,"byte_end":143835,"line_start":269,"line_end":269,"column_start":5,"column_end":98}},{"value":"/ with [`add_error`] being a no-op.","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":143840,"byte_end":143877,"line_start":270,"line_end":270,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":143882,"byte_end":143885,"line_start":271,"line_end":271,"column_start":5,"column_end":8}},{"value":"/ [`Stream::uncons`]: trait.StreamOnce.html#tymethod.uncons","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":143890,"byte_end":143951,"line_start":272,"line_end":272,"column_start":5,"column_end":66}},{"value":"/ [`parse_stream_consumed`]: trait.Parser.html#method.parse_stream_consumed","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":143956,"byte_end":144033,"line_start":273,"line_end":273,"column_start":5,"column_end":82}},{"value":"/ [`Error`]: trait.StreamOnce.html#associatedtype.Error","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":144038,"byte_end":144095,"line_start":274,"line_end":274,"column_start":5,"column_end":62}},{"value":"/ [`add_error`]: trait.Parser.html#method.add_error","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":144100,"byte_end":144153,"line_start":275,"line_end":275,"column_start":5,"column_end":58}},{"value":"inline(always)","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":144158,"byte_end":144175,"line_start":276,"line_end":276,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2170},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":145286,"byte_end":145297,"line_start":300,"line_end":300,"column_start":8,"column_end":19},"name":"parse_first","qualname":"::parser::Parser::parse_first","value":"pub fn parse_first(&mut Self, &mut Self::Input, &mut Self::PartialState)\n-> ConsumedResult<Self::Output, Self::Input>","parent":{"krate":0,"index":2157},"children":[],"decl_id":null,"docs":" Parses using the stream `input` and allows itself to be resumed at a later point using\n `parse_partial` by storing the necessary intermediate state in `state`.","sig":null,"attributes":[{"value":"/ Parses using the stream `input` and allows itself to be resumed at a later point using","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":144962,"byte_end":145052,"line_start":294,"line_end":294,"column_start":5,"column_end":95}},{"value":"/ `parse_partial` by storing the necessary intermediate state in `state`.","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":145057,"byte_end":145132,"line_start":295,"line_end":295,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":145137,"byte_end":145140,"line_start":296,"line_end":296,"column_start":5,"column_end":8}},{"value":"/ Unlike `parse_partial` function this is allowed to assume that there is no partial state to","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":145145,"byte_end":145240,"line_start":297,"line_end":297,"column_start":5,"column_end":100}},{"value":"/ resume.","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":145245,"byte_end":145256,"line_start":298,"line_end":298,"column_start":5,"column_end":16}},{"value":"inline(always)","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":145261,"byte_end":145278,"line_start":299,"line_end":299,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2171},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":145695,"byte_end":145708,"line_start":311,"line_end":311,"column_start":8,"column_end":21},"name":"parse_partial","qualname":"::parser::Parser::parse_partial","value":"pub fn parse_partial(&mut Self, &mut Self::Input, &mut Self::PartialState)\n-> ConsumedResult<Self::Output, Self::Input>","parent":{"krate":0,"index":2157},"children":[],"decl_id":null,"docs":" Parses using the stream `input` and allows itself to be resumed at a later point using\n `parse_partial` by storing the necessary intermediate state in `state`\n","sig":null,"attributes":[{"value":"/ Parses using the stream `input` and allows itself to be resumed at a later point using","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":145496,"byte_end":145586,"line_start":308,"line_end":308,"column_start":5,"column_end":95}},{"value":"/ `parse_partial` by storing the necessary intermediate state in `state`","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":145591,"byte_end":145665,"line_start":309,"line_end":309,"column_start":5,"column_end":79}},{"value":"inline(always)","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":145670,"byte_end":145687,"line_start":310,"line_end":310,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2172},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":146018,"byte_end":146028,"line_start":323,"line_end":323,"column_start":8,"column_end":18},"name":"parse_mode","qualname":"::parser::Parser::parse_mode","value":"pub fn parse_mode<M>(&mut Self, M, &mut Self::Input, &mut Self::PartialState)\n-> ConsumedResult<Self::Output, Self::Input> where M: ParseMode, Self: Sized","parent":{"krate":0,"index":2157},"children":[],"decl_id":null,"docs":" Internal API. May break without a semver bump\n","sig":null,"attributes":[{"value":"/ Internal API. May break without a semver bump","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":145920,"byte_end":145969,"line_start":320,"line_end":320,"column_start":5,"column_end":54}},{"value":"inline(always)","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":145993,"byte_end":146010,"line_start":322,"line_end":322,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2174},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":146546,"byte_end":146561,"line_start":343,"line_end":343,"column_start":8,"column_end":23},"name":"parse_mode_impl","qualname":"::parser::Parser::parse_mode_impl","value":"pub fn parse_mode_impl<M>(&mut Self, M, &mut Self::Input,\n                          &mut Self::PartialState)\n-> ConsumedResult<Self::Output, Self::Input> where M: ParseMode, Self: Sized","parent":{"krate":0,"index":2157},"children":[],"decl_id":null,"docs":" Internal API. May break without a semver bump\n","sig":null,"attributes":[{"value":"/ Internal API. May break without a semver bump","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":146448,"byte_end":146497,"line_start":340,"line_end":340,"column_start":5,"column_end":54}},{"value":"inline(always)","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":146521,"byte_end":146538,"line_start":342,"line_end":342,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2176},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":147038,"byte_end":147057,"line_start":363,"line_end":363,"column_start":8,"column_end":27},"name":"parse_consumed_mode","qualname":"::parser::Parser::parse_consumed_mode","value":"pub fn parse_consumed_mode<M>(&mut Self, M, &mut Self::Input,\n                              &mut Self::PartialState)\n-> ConsumedResult<Self::Output, Self::Input> where M: ParseMode, Self: Sized","parent":{"krate":0,"index":2157},"children":[],"decl_id":null,"docs":" Internal API. May break without a semver bump\n","sig":null,"attributes":[{"value":"/ Internal API. May break without a semver bump","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":146940,"byte_end":146989,"line_start":360,"line_end":360,"column_start":5,"column_end":54}},{"value":"inline(always)","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":147013,"byte_end":147030,"line_start":362,"line_end":362,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2178},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":147718,"byte_end":147727,"line_start":386,"line_end":386,"column_start":8,"column_end":17},"name":"add_error","qualname":"::parser::Parser::add_error","value":"pub fn add_error(&mut Self, &mut Tracked<<Self::Input as StreamOnce>::Error>)","parent":{"krate":0,"index":2157},"children":[],"decl_id":null,"docs":" Adds the first error that would normally be returned by this parser if it failed with an\n `EmptyErr` result.","sig":null,"attributes":[{"value":"/ Adds the first error that would normally be returned by this parser if it failed with an","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":147475,"byte_end":147567,"line_start":380,"line_end":380,"column_start":5,"column_end":97}},{"value":"/ `EmptyErr` result.","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":147572,"byte_end":147594,"line_start":381,"line_end":381,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":147599,"byte_end":147602,"line_start":382,"line_end":382,"column_start":5,"column_end":8}},{"value":"/ See [`parse_lazy`] for details.","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":147607,"byte_end":147642,"line_start":383,"line_end":383,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":147647,"byte_end":147650,"line_start":384,"line_end":384,"column_start":5,"column_end":8}},{"value":"/ [`parse_lazy`]: trait.Parser.html#method.parse_lazy","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":147655,"byte_end":147710,"line_start":385,"line_end":385,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":2179},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":147973,"byte_end":147985,"line_start":392,"line_end":392,"column_start":8,"column_end":20},"name":"parser_count","qualname":"::parser::Parser::parser_count","value":"pub fn parser_count(&Self) -> ErrorOffset","parent":{"krate":0,"index":2157},"children":[],"decl_id":null,"docs":" Returns how many parsers this parser contains","sig":null,"attributes":[{"value":"/ Returns how many parsers this parser contains","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":147805,"byte_end":147854,"line_start":388,"line_end":388,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":147859,"byte_end":147862,"line_start":389,"line_end":389,"column_start":5,"column_end":8}},{"value":"/ Internal API: This should not be implemented explicitly outside of combine.","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":147867,"byte_end":147946,"line_start":390,"line_end":390,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":2180},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":148150,"byte_end":148177,"line_start":398,"line_end":398,"column_start":8,"column_end":35},"name":"add_consumed_expected_error","qualname":"::parser::Parser::add_consumed_expected_error","value":"pub fn add_consumed_expected_error(&mut Self,\n                                   &mut Tracked<<Self::Input as\n                                                StreamOnce>::Error>)","parent":{"krate":0,"index":2157},"children":[],"decl_id":null,"docs":" Internal API: This should not be implemented explicitly outside of combine.\n","sig":null,"attributes":[{"value":"/ Internal API: This should not be implemented explicitly outside of combine.","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":148044,"byte_end":148123,"line_start":396,"line_end":396,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":2181},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":149183,"byte_end":149189,"line_start":428,"line_end":428,"column_start":8,"column_end":14},"name":"by_ref","qualname":"::parser::Parser::by_ref","value":"pub fn by_ref(&mut Self) -> &mut Self where Self: Sized","parent":{"krate":0,"index":2157},"children":[],"decl_id":null,"docs":" Borrows a parser instead of consuming it.","sig":null,"attributes":[{"value":"/ Borrows a parser instead of consuming it.","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":148283,"byte_end":148328,"line_start":404,"line_end":404,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":148333,"byte_end":148336,"line_start":405,"line_end":405,"column_start":5,"column_end":8}},{"value":"/ Used to apply parser combinators on `self` without losing ownership.","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":148341,"byte_end":148413,"line_start":406,"line_end":406,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":148418,"byte_end":148421,"line_start":407,"line_end":407,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":148426,"byte_end":148433,"line_start":408,"line_end":408,"column_start":5,"column_end":12}},{"value":"/ # extern crate combine;","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":148438,"byte_end":148465,"line_start":409,"line_end":409,"column_start":5,"column_end":32}},{"value":"/ # use combine::*;","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":148470,"byte_end":148491,"line_start":410,"line_end":410,"column_start":5,"column_end":26}},{"value":"/ # use combine::error::Consumed;","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":148496,"byte_end":148531,"line_start":411,"line_end":411,"column_start":5,"column_end":40}},{"value":"/ # use combine::parser::char::{digit, letter};","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":148536,"byte_end":148585,"line_start":412,"line_end":412,"column_start":5,"column_end":54}},{"value":"/ fn test(input: &mut &'static str) -> ParseResult<(char, char), &'static str> {","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":148590,"byte_end":148672,"line_start":413,"line_end":413,"column_start":5,"column_end":87}},{"value":"/     let mut p = digit();","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":148677,"byte_end":148705,"line_start":414,"line_end":414,"column_start":5,"column_end":33}},{"value":"/     let ((d, _), consumed) = try!((p.by_ref(), letter()).parse_stream(input));","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":148710,"byte_end":148792,"line_start":415,"line_end":415,"column_start":5,"column_end":87}},{"value":"/     let (d2, consumed) = try!(consumed.combine(|_| p.parse_stream(input)));","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":148797,"byte_end":148876,"line_start":416,"line_end":416,"column_start":5,"column_end":84}},{"value":"/     Ok(((d, d2), consumed))","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":148881,"byte_end":148912,"line_start":417,"line_end":417,"column_start":5,"column_end":36}},{"value":"/ }","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":148917,"byte_end":148922,"line_start":418,"line_end":418,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":148927,"byte_end":148930,"line_start":419,"line_end":419,"column_start":5,"column_end":8}},{"value":"/ fn main() {","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":148935,"byte_end":148950,"line_start":420,"line_end":420,"column_start":5,"column_end":20}},{"value":"/     let mut input = \"1a23\";","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":148955,"byte_end":148986,"line_start":421,"line_end":421,"column_start":5,"column_end":36}},{"value":"/     assert_eq!(","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":148991,"byte_end":149010,"line_start":422,"line_end":422,"column_start":5,"column_end":24}},{"value":"/         test(&mut input).map(|(t, c)| (t, c.map(|_| input))),","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":149015,"byte_end":149080,"line_start":423,"line_end":423,"column_start":5,"column_end":70}},{"value":"/         Ok((('1', '2'), Consumed::Consumed(\"3\")))","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":149085,"byte_end":149138,"line_start":424,"line_end":424,"column_start":5,"column_end":58}},{"value":"/     );","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":149143,"byte_end":149153,"line_start":425,"line_end":425,"column_start":5,"column_end":15}},{"value":"/ }","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":149158,"byte_end":149163,"line_start":426,"line_end":426,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":149168,"byte_end":149175,"line_start":427,"line_end":427,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2182},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":149715,"byte_end":149719,"line_start":450,"line_end":450,"column_start":8,"column_end":12},"name":"with","qualname":"::parser::Parser::with","value":"pub fn with<P2>(Self, P2) -> With<Self, P2> where Self: Sized,\nP2: Parser<Input = Self::Input>","parent":{"krate":0,"index":2157},"children":[],"decl_id":null,"docs":" Discards the value of the `self` parser and returns the value of `p`.\n Fails if any of the parsers fails.","sig":null,"attributes":[{"value":"/ Discards the value of the `self` parser and returns the value of `p`.","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":149275,"byte_end":149348,"line_start":435,"line_end":435,"column_start":5,"column_end":78}},{"value":"/ Fails if any of the parsers fails.","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":149353,"byte_end":149391,"line_start":436,"line_end":436,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":149396,"byte_end":149399,"line_start":437,"line_end":437,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":149404,"byte_end":149411,"line_start":438,"line_end":438,"column_start":5,"column_end":12}},{"value":"/ # extern crate combine;","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":149416,"byte_end":149443,"line_start":439,"line_end":439,"column_start":5,"column_end":32}},{"value":"/ # use combine::*;","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":149448,"byte_end":149469,"line_start":440,"line_end":440,"column_start":5,"column_end":26}},{"value":"/ # use combine::parser::char::digit;","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":149474,"byte_end":149513,"line_start":441,"line_end":441,"column_start":5,"column_end":44}},{"value":"/ # fn main() {","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":149518,"byte_end":149535,"line_start":442,"line_end":442,"column_start":5,"column_end":22}},{"value":"/ let result = digit()","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":149540,"byte_end":149564,"line_start":443,"line_end":443,"column_start":5,"column_end":29}},{"value":"/     .with(token('i'))","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":149569,"byte_end":149594,"line_start":444,"line_end":444,"column_start":5,"column_end":30}},{"value":"/     .parse(\"9i\")","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":149599,"byte_end":149619,"line_start":445,"line_end":445,"column_start":5,"column_end":25}},{"value":"/     .map(|x| x.0);","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":149624,"byte_end":149646,"line_start":446,"line_end":446,"column_start":5,"column_end":27}},{"value":"/ assert_eq!(result, Ok('i'));","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":149651,"byte_end":149683,"line_start":447,"line_end":447,"column_start":5,"column_end":37}},{"value":"/ # }","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":149688,"byte_end":149695,"line_start":448,"line_end":448,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":149700,"byte_end":149707,"line_start":449,"line_end":449,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2184},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":150306,"byte_end":150310,"line_start":473,"line_end":473,"column_start":8,"column_end":12},"name":"skip","qualname":"::parser::Parser::skip","value":"pub fn skip<P2>(Self, P2) -> Skip<Self, P2> where Self: Sized,\nP2: Parser<Input = Self::Input>","parent":{"krate":0,"index":2157},"children":[],"decl_id":null,"docs":" Discards the value of the `p` parser and returns the value of `self`.\n Fails if any of the parsers fails.","sig":null,"attributes":[{"value":"/ Discards the value of the `p` parser and returns the value of `self`.","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":149866,"byte_end":149939,"line_start":458,"line_end":458,"column_start":5,"column_end":78}},{"value":"/ Fails if any of the parsers fails.","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":149944,"byte_end":149982,"line_start":459,"line_end":459,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":149987,"byte_end":149990,"line_start":460,"line_end":460,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":149995,"byte_end":150002,"line_start":461,"line_end":461,"column_start":5,"column_end":12}},{"value":"/ # extern crate combine;","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":150007,"byte_end":150034,"line_start":462,"line_end":462,"column_start":5,"column_end":32}},{"value":"/ # use combine::*;","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":150039,"byte_end":150060,"line_start":463,"line_end":463,"column_start":5,"column_end":26}},{"value":"/ # use combine::parser::char::digit;","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":150065,"byte_end":150104,"line_start":464,"line_end":464,"column_start":5,"column_end":44}},{"value":"/ # fn main() {","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":150109,"byte_end":150126,"line_start":465,"line_end":465,"column_start":5,"column_end":22}},{"value":"/ let result = digit()","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":150131,"byte_end":150155,"line_start":466,"line_end":466,"column_start":5,"column_end":29}},{"value":"/     .skip(token('i'))","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":150160,"byte_end":150185,"line_start":467,"line_end":467,"column_start":5,"column_end":30}},{"value":"/     .parse(\"9i\")","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":150190,"byte_end":150210,"line_start":468,"line_end":468,"column_start":5,"column_end":25}},{"value":"/     .map(|x| x.0);","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":150215,"byte_end":150237,"line_start":469,"line_end":469,"column_start":5,"column_end":27}},{"value":"/ assert_eq!(result, Ok('9'));","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":150242,"byte_end":150274,"line_start":470,"line_end":470,"column_start":5,"column_end":37}},{"value":"/ # }","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":150279,"byte_end":150286,"line_start":471,"line_end":471,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":150291,"byte_end":150298,"line_start":472,"line_end":472,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2186},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":150938,"byte_end":150941,"line_start":497,"line_end":497,"column_start":8,"column_end":11},"name":"and","qualname":"::parser::Parser::and","value":"pub fn and<P2>(Self, P2) -> (Self, P2) where Self: Sized, P2: Parser<Input =\nSelf::Input>","parent":{"krate":0,"index":2157},"children":[],"decl_id":null,"docs":" Parses with `self` followed by `p`.\n Succeeds if both parsers succeed, otherwise fails.\n Returns a tuple with both values on success.","sig":null,"attributes":[{"value":"/ Parses with `self` followed by `p`.","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":150457,"byte_end":150496,"line_start":481,"line_end":481,"column_start":5,"column_end":44}},{"value":"/ Succeeds if both parsers succeed, otherwise fails.","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":150501,"byte_end":150555,"line_start":482,"line_end":482,"column_start":5,"column_end":59}},{"value":"/ Returns a tuple with both values on success.","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":150560,"byte_end":150608,"line_start":483,"line_end":483,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":150613,"byte_end":150616,"line_start":484,"line_end":484,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":150621,"byte_end":150628,"line_start":485,"line_end":485,"column_start":5,"column_end":12}},{"value":"/ # extern crate combine;","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":150633,"byte_end":150660,"line_start":486,"line_end":486,"column_start":5,"column_end":32}},{"value":"/ # use combine::*;","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":150665,"byte_end":150686,"line_start":487,"line_end":487,"column_start":5,"column_end":26}},{"value":"/ # use combine::parser::char::digit;","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":150691,"byte_end":150730,"line_start":488,"line_end":488,"column_start":5,"column_end":44}},{"value":"/ # fn main() {","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":150735,"byte_end":150752,"line_start":489,"line_end":489,"column_start":5,"column_end":22}},{"value":"/ let result = digit()","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":150757,"byte_end":150781,"line_start":490,"line_end":490,"column_start":5,"column_end":29}},{"value":"/     .and(token('i'))","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":150786,"byte_end":150810,"line_start":491,"line_end":491,"column_start":5,"column_end":29}},{"value":"/     .parse(\"9i\")","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":150815,"byte_end":150835,"line_start":492,"line_end":492,"column_start":5,"column_end":25}},{"value":"/     .map(|x| x.0);","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":150840,"byte_end":150862,"line_start":493,"line_end":493,"column_start":5,"column_end":27}},{"value":"/ assert_eq!(result, Ok(('9', 'i')));","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":150867,"byte_end":150906,"line_start":494,"line_end":494,"column_start":5,"column_end":44}},{"value":"/ # }","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":150911,"byte_end":150918,"line_start":495,"line_end":495,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":150923,"byte_end":150930,"line_start":496,"line_end":496,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2188},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":152386,"byte_end":152388,"line_start":534,"line_end":534,"column_start":8,"column_end":10},"name":"or","qualname":"::parser::Parser::or","value":"pub fn or<P2>(Self, P2) -> Or<Self, P2> where Self: Sized, P2: Parser<Input =\nSelf::Input, Output = Self::Input>","parent":{"krate":0,"index":2157},"children":[],"decl_id":null,"docs":" Returns a parser which attempts to parse using `self`. If `self` fails without consuming\n any input it tries to consume the same input using `p`.","sig":null,"attributes":[{"value":"/ Returns a parser which attempts to parse using `self`. If `self` fails without consuming","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":151080,"byte_end":151172,"line_start":505,"line_end":505,"column_start":5,"column_end":97}},{"value":"/ any input it tries to consume the same input using `p`.","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":151177,"byte_end":151236,"line_start":506,"line_end":506,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":151241,"byte_end":151244,"line_start":507,"line_end":507,"column_start":5,"column_end":8}},{"value":"/ If you are looking to chain 3 or more parsers using `or` you may consider using the","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":151249,"byte_end":151336,"line_start":508,"line_end":508,"column_start":5,"column_end":92}},{"value":"/ [`choice!`] macro instead, which can be clearer and may result in a faster parser.","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":151341,"byte_end":151427,"line_start":509,"line_end":509,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":151432,"byte_end":151435,"line_start":510,"line_end":510,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":151440,"byte_end":151447,"line_start":511,"line_end":511,"column_start":5,"column_end":12}},{"value":"/ # extern crate combine;","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":151452,"byte_end":151479,"line_start":512,"line_end":512,"column_start":5,"column_end":32}},{"value":"/ # use combine::*;","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":151484,"byte_end":151505,"line_start":513,"line_end":513,"column_start":5,"column_end":26}},{"value":"/ # use combine::parser::char::{digit, string};","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":151510,"byte_end":151559,"line_start":514,"line_end":514,"column_start":5,"column_end":54}},{"value":"/ # fn main() {","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":151564,"byte_end":151581,"line_start":515,"line_end":515,"column_start":5,"column_end":22}},{"value":"/ let mut parser = string(\"let\")","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":151586,"byte_end":151620,"line_start":516,"line_end":516,"column_start":5,"column_end":39}},{"value":"/     .or(digit().map(|_| \"digit\"))","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":151625,"byte_end":151662,"line_start":517,"line_end":517,"column_start":5,"column_end":42}},{"value":"/     .or(string(\"led\"));","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":151667,"byte_end":151694,"line_start":518,"line_end":518,"column_start":5,"column_end":32}},{"value":"/ assert_eq!(parser.parse(\"let\"), Ok((\"let\", \"\")));","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":151699,"byte_end":151752,"line_start":519,"line_end":519,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(parser.parse(\"1\"), Ok((\"digit\", \"\")));","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":151757,"byte_end":151810,"line_start":520,"line_end":520,"column_start":5,"column_end":58}},{"value":"/ assert!(parser.parse(\"led\").is_err());","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":151815,"byte_end":151857,"line_start":521,"line_end":521,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":151862,"byte_end":151865,"line_start":522,"line_end":522,"column_start":5,"column_end":8}},{"value":"/ let mut parser2 = string(\"two\").or(string(\"three\"));","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":151870,"byte_end":151926,"line_start":523,"line_end":523,"column_start":5,"column_end":61}},{"value":"/ // Fails as the parser for \"two\" consumes the first 't' before failing","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":151931,"byte_end":152005,"line_start":524,"line_end":524,"column_start":5,"column_end":79}},{"value":"/ assert!(parser2.parse(\"three\").is_err());","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":152010,"byte_end":152055,"line_start":525,"line_end":525,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":152060,"byte_end":152063,"line_start":526,"line_end":526,"column_start":5,"column_end":8}},{"value":"/ // Use 'attempt' to make failing parsers always act as if they have not consumed any input","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":152068,"byte_end":152162,"line_start":527,"line_end":527,"column_start":5,"column_end":99}},{"value":"/ let mut parser3 = attempt(string(\"two\")).or(attempt(string(\"three\")));","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":152167,"byte_end":152241,"line_start":528,"line_end":528,"column_start":5,"column_end":79}},{"value":"/ assert_eq!(parser3.parse(\"three\"), Ok((\"three\", \"\")));","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":152246,"byte_end":152304,"line_start":529,"line_end":529,"column_start":5,"column_end":63}},{"value":"/ # }","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":152309,"byte_end":152316,"line_start":530,"line_end":530,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":152321,"byte_end":152328,"line_start":531,"line_end":531,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":152333,"byte_end":152336,"line_start":532,"line_end":532,"column_start":5,"column_end":8}},{"value":"/ [`choice!`]: ../macro.choice.html","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":152341,"byte_end":152378,"line_start":533,"line_end":533,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":2190},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":153575,"byte_end":153579,"line_start":571,"line_end":571,"column_start":8,"column_end":12},"name":"then","qualname":"::parser::Parser::then","value":"pub fn then<N, F>(Self, F) -> Then<Self, F> where Self: Sized,\nF: FnMut(Self::Output) -> N, N: Parser<Input = Self::Input>","parent":{"krate":0,"index":2157},"children":[],"decl_id":null,"docs":" Parses using `self` and then passes the value to `f` which returns a parser used to parse\n the rest of the input.","sig":null,"attributes":[{"value":"/ Parses using `self` and then passes the value to `f` which returns a parser used to parse","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":152554,"byte_end":152647,"line_start":542,"line_end":542,"column_start":5,"column_end":98}},{"value":"/ the rest of the input.","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":152652,"byte_end":152678,"line_start":543,"line_end":543,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":152683,"byte_end":152686,"line_start":544,"line_end":544,"column_start":5,"column_end":8}},{"value":"/ Since the parser returned from `f` must have a single type it can be useful to use the","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":152691,"byte_end":152781,"line_start":545,"line_end":545,"column_start":5,"column_end":95}},{"value":"/ `left` and `right` methods to merge parsers of differing types into one.","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":152786,"byte_end":152862,"line_start":546,"line_end":546,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":152867,"byte_end":152870,"line_start":547,"line_end":547,"column_start":5,"column_end":8}},{"value":"/ If you are using partial parsing you may want to use `partial_then` instead.","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":152875,"byte_end":152955,"line_start":548,"line_end":548,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":152960,"byte_end":152963,"line_start":549,"line_end":549,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":152968,"byte_end":152975,"line_start":550,"line_end":550,"column_start":5,"column_end":12}},{"value":"/ # #![cfg(feature = \"std\")]","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":152980,"byte_end":153010,"line_start":551,"line_end":551,"column_start":5,"column_end":35}},{"value":"/ # extern crate combine;","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":153015,"byte_end":153042,"line_start":552,"line_end":552,"column_start":5,"column_end":32}},{"value":"/ # use combine::*;","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":153047,"byte_end":153068,"line_start":553,"line_end":553,"column_start":5,"column_end":26}},{"value":"/ # use combine::parser::char::digit;","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":153073,"byte_end":153112,"line_start":554,"line_end":554,"column_start":5,"column_end":44}},{"value":"/ # use combine::error::Consumed;","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":153117,"byte_end":153152,"line_start":555,"line_end":555,"column_start":5,"column_end":40}},{"value":"/ # use combine::stream::easy;","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":153157,"byte_end":153189,"line_start":556,"line_end":556,"column_start":5,"column_end":37}},{"value":"/ # fn main() {","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":153194,"byte_end":153211,"line_start":557,"line_end":557,"column_start":5,"column_end":22}},{"value":"/ let result = digit()","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":153216,"byte_end":153240,"line_start":558,"line_end":558,"column_start":5,"column_end":29}},{"value":"/     .then(|d| {","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":153245,"byte_end":153264,"line_start":559,"line_end":559,"column_start":5,"column_end":24}},{"value":"/         if d == '9' {","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":153269,"byte_end":153294,"line_start":560,"line_end":560,"column_start":5,"column_end":30}},{"value":"/             value(9).left()","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":153299,"byte_end":153330,"line_start":561,"line_end":561,"column_start":5,"column_end":36}},{"value":"/         }","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":153335,"byte_end":153348,"line_start":562,"line_end":562,"column_start":5,"column_end":18}},{"value":"/         else {","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":153353,"byte_end":153371,"line_start":563,"line_end":563,"column_start":5,"column_end":23}},{"value":"/             unexpected_any(d).message(\"Not a nine\").right()","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":153376,"byte_end":153439,"line_start":564,"line_end":564,"column_start":5,"column_end":68}},{"value":"/         }","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":153444,"byte_end":153457,"line_start":565,"line_end":565,"column_start":5,"column_end":18}},{"value":"/     })","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":153462,"byte_end":153472,"line_start":566,"line_end":566,"column_start":5,"column_end":15}},{"value":"/     .easy_parse(\"9\");","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":153477,"byte_end":153502,"line_start":567,"line_end":567,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(result, Ok((9, \"\")));","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":153507,"byte_end":153543,"line_start":568,"line_end":568,"column_start":5,"column_end":41}},{"value":"/ # }","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":153548,"byte_end":153555,"line_start":569,"line_end":569,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":153560,"byte_end":153567,"line_start":570,"line_end":570,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2193},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":154933,"byte_end":154945,"line_start":610,"line_end":610,"column_start":8,"column_end":20},"name":"then_partial","qualname":"::parser::Parser::then_partial","value":"pub fn then_partial<N, F>(Self, F) -> ThenPartial<Self, F> where Self: Sized,\nF: FnMut(&mut Self::Output) -> N, N: Parser<Input = Self::Input>","parent":{"krate":0,"index":2157},"children":[],"decl_id":null,"docs":" Variant of `then` which parses using `self` and then passes the value to `f` as a `&mut` reference.","sig":null,"attributes":[{"value":"/ Variant of `then` which parses using `self` and then passes the value to `f` as a `&mut` reference.","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":153762,"byte_end":153865,"line_start":580,"line_end":580,"column_start":5,"column_end":108}},{"value":"/","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":153870,"byte_end":153873,"line_start":581,"line_end":581,"column_start":5,"column_end":8}},{"value":"/ Useful when doing partial parsing since it does not need to store the parser returned by","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":153878,"byte_end":153970,"line_start":582,"line_end":582,"column_start":5,"column_end":97}},{"value":"/ `f` in the partial state. Instead it will call `f` each to request a new parser each time","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":153975,"byte_end":154068,"line_start":583,"line_end":583,"column_start":5,"column_end":98}},{"value":"/ parsing resumes and that parser is needed.","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":154073,"byte_end":154119,"line_start":584,"line_end":584,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":154124,"byte_end":154127,"line_start":585,"line_end":585,"column_start":5,"column_end":8}},{"value":"/ Since the parser returned from `f` must have a single type it can be useful to use the","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":154132,"byte_end":154222,"line_start":586,"line_end":586,"column_start":5,"column_end":95}},{"value":"/ `left` and `right` methods to merge parsers of differing types into one.","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":154227,"byte_end":154303,"line_start":587,"line_end":587,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":154308,"byte_end":154311,"line_start":588,"line_end":588,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":154316,"byte_end":154323,"line_start":589,"line_end":589,"column_start":5,"column_end":12}},{"value":"/ # #![cfg(feature = \"std\")]","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":154328,"byte_end":154358,"line_start":590,"line_end":590,"column_start":5,"column_end":35}},{"value":"/ # extern crate combine;","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":154363,"byte_end":154390,"line_start":591,"line_end":591,"column_start":5,"column_end":32}},{"value":"/ # use combine::*;","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":154395,"byte_end":154416,"line_start":592,"line_end":592,"column_start":5,"column_end":26}},{"value":"/ # use combine::parser::char::digit;","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":154421,"byte_end":154460,"line_start":593,"line_end":593,"column_start":5,"column_end":44}},{"value":"/ # use combine::error::Consumed;","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":154465,"byte_end":154500,"line_start":594,"line_end":594,"column_start":5,"column_end":40}},{"value":"/ # use combine::stream::easy;","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":154505,"byte_end":154537,"line_start":595,"line_end":595,"column_start":5,"column_end":37}},{"value":"/ # fn main() {","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":154542,"byte_end":154559,"line_start":596,"line_end":596,"column_start":5,"column_end":22}},{"value":"/ let result = digit()","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":154564,"byte_end":154588,"line_start":597,"line_end":597,"column_start":5,"column_end":29}},{"value":"/     .then_partial(|d| {","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":154593,"byte_end":154620,"line_start":598,"line_end":598,"column_start":5,"column_end":32}},{"value":"/         if *d == '9' {","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":154625,"byte_end":154651,"line_start":599,"line_end":599,"column_start":5,"column_end":31}},{"value":"/             value(9).left()","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":154656,"byte_end":154687,"line_start":600,"line_end":600,"column_start":5,"column_end":36}},{"value":"/         }","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":154692,"byte_end":154705,"line_start":601,"line_end":601,"column_start":5,"column_end":18}},{"value":"/         else {","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":154710,"byte_end":154728,"line_start":602,"line_end":602,"column_start":5,"column_end":23}},{"value":"/             unexpected_any(*d).message(\"Not a nine\").right()","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":154733,"byte_end":154797,"line_start":603,"line_end":603,"column_start":5,"column_end":69}},{"value":"/         }","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":154802,"byte_end":154815,"line_start":604,"line_end":604,"column_start":5,"column_end":18}},{"value":"/     })","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":154820,"byte_end":154830,"line_start":605,"line_end":605,"column_start":5,"column_end":15}},{"value":"/     .easy_parse(\"9\");","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":154835,"byte_end":154860,"line_start":606,"line_end":606,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(result, Ok((9, \"\")));","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":154865,"byte_end":154901,"line_start":607,"line_end":607,"column_start":5,"column_end":41}},{"value":"/ # }","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":154906,"byte_end":154913,"line_start":608,"line_end":608,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":154918,"byte_end":154925,"line_start":609,"line_end":609,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2196},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":155515,"byte_end":155518,"line_start":633,"line_end":633,"column_start":8,"column_end":11},"name":"map","qualname":"::parser::Parser::map","value":"pub fn map<F, B>(Self, F) -> Map<Self, F> where Self: Sized,\nF: FnMut(Self::Output) -> B","parent":{"krate":0,"index":2157},"children":[],"decl_id":null,"docs":" Uses `f` to map over the parsed value.","sig":null,"attributes":[{"value":"/ Uses `f` to map over the parsed value.","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":155148,"byte_end":155190,"line_start":619,"line_end":619,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":155195,"byte_end":155198,"line_start":620,"line_end":620,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":155203,"byte_end":155210,"line_start":621,"line_end":621,"column_start":5,"column_end":12}},{"value":"/ # extern crate combine;","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":155215,"byte_end":155242,"line_start":622,"line_end":622,"column_start":5,"column_end":32}},{"value":"/ # use combine::*;","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":155247,"byte_end":155268,"line_start":623,"line_end":623,"column_start":5,"column_end":26}},{"value":"/ # use combine::parser::char::digit;","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":155273,"byte_end":155312,"line_start":624,"line_end":624,"column_start":5,"column_end":44}},{"value":"/ # fn main() {","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":155317,"byte_end":155334,"line_start":625,"line_end":625,"column_start":5,"column_end":22}},{"value":"/ let result = digit()","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":155339,"byte_end":155363,"line_start":626,"line_end":626,"column_start":5,"column_end":29}},{"value":"/     .map(|c| c == '9')","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":155368,"byte_end":155394,"line_start":627,"line_end":627,"column_start":5,"column_end":31}},{"value":"/     .parse(\"9\")","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":155399,"byte_end":155418,"line_start":628,"line_end":628,"column_start":5,"column_end":24}},{"value":"/     .map(|x| x.0);","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":155423,"byte_end":155445,"line_start":629,"line_end":629,"column_start":5,"column_end":27}},{"value":"/ assert_eq!(result, Ok(true));","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":155450,"byte_end":155483,"line_start":630,"line_end":630,"column_start":5,"column_end":38}},{"value":"/ # }","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":155488,"byte_end":155495,"line_start":631,"line_end":631,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":155500,"byte_end":155507,"line_start":632,"line_end":632,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2199},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":156151,"byte_end":156159,"line_start":655,"line_end":655,"column_start":8,"column_end":16},"name":"flat_map","qualname":"::parser::Parser::flat_map","value":"pub fn flat_map<F, B>(Self, F) -> FlatMap<Self, F> where Self: Sized,\nF: FnMut(Self::Output) -> Result<B, <Self::Input as StreamOnce>::Error>","parent":{"krate":0,"index":2157},"children":[],"decl_id":null,"docs":" Uses `f` to map over the output of `self`. If `f` returns an error the parser fails.","sig":null,"attributes":[{"value":"/ Uses `f` to map over the output of `self`. If `f` returns an error the parser fails.","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":155659,"byte_end":155747,"line_start":641,"line_end":641,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":155752,"byte_end":155755,"line_start":642,"line_end":642,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":155760,"byte_end":155767,"line_start":643,"line_end":643,"column_start":5,"column_end":12}},{"value":"/ # extern crate combine;","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":155772,"byte_end":155799,"line_start":644,"line_end":644,"column_start":5,"column_end":32}},{"value":"/ # use combine::*;","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":155804,"byte_end":155825,"line_start":645,"line_end":645,"column_start":5,"column_end":26}},{"value":"/ # use combine::parser::char::digit;","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":155830,"byte_end":155869,"line_start":646,"line_end":646,"column_start":5,"column_end":44}},{"value":"/ # use combine::parser::range::take;","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":155874,"byte_end":155913,"line_start":647,"line_end":647,"column_start":5,"column_end":44}},{"value":"/ # fn main() {","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":155918,"byte_end":155935,"line_start":648,"line_end":648,"column_start":5,"column_end":22}},{"value":"/ let result = take(4)","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":155940,"byte_end":155964,"line_start":649,"line_end":649,"column_start":5,"column_end":29}},{"value":"/     .flat_map(|bs| many(digit()).parse(bs).map(|t| t.0))","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":155969,"byte_end":156029,"line_start":650,"line_end":650,"column_start":5,"column_end":65}},{"value":"/     .parse(\"12abcd\");","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":156034,"byte_end":156059,"line_start":651,"line_end":651,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(result, Ok((String::from(\"12\"), \"cd\")));","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":156064,"byte_end":156119,"line_start":652,"line_end":652,"column_start":5,"column_end":60}},{"value":"/ # }","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":156124,"byte_end":156131,"line_start":653,"line_end":653,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":156136,"byte_end":156143,"line_start":654,"line_end":654,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2202},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":157115,"byte_end":157122,"line_start":685,"line_end":685,"column_start":8,"column_end":15},"name":"message","qualname":"::parser::Parser::message","value":"pub fn message<S>(Self, S) -> Message<Self> where Self: Sized,\nS: Into<Info<<Self::Input as StreamOnce>::Item,\n             <Self::Input as StreamOnce>::Range>>","parent":{"krate":0,"index":2157},"children":[],"decl_id":null,"docs":" Parses with `self` and if it fails, adds the message `msg` to the error.","sig":null,"attributes":[{"value":"/ Parses with `self` and if it fails, adds the message `msg` to the error.","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":156353,"byte_end":156429,"line_start":663,"line_end":663,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":156434,"byte_end":156437,"line_start":664,"line_end":664,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":156442,"byte_end":156449,"line_start":665,"line_end":665,"column_start":5,"column_end":12}},{"value":"/ # #![cfg(feature = \"std\")]","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":156454,"byte_end":156484,"line_start":666,"line_end":666,"column_start":5,"column_end":35}},{"value":"/ # extern crate combine;","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":156489,"byte_end":156516,"line_start":667,"line_end":667,"column_start":5,"column_end":32}},{"value":"/ # use combine::*;","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":156521,"byte_end":156542,"line_start":668,"line_end":668,"column_start":5,"column_end":26}},{"value":"/ # use combine::stream::easy;","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":156547,"byte_end":156579,"line_start":669,"line_end":669,"column_start":5,"column_end":37}},{"value":"/ # use combine::stream::state::{State, SourcePosition};","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":156584,"byte_end":156642,"line_start":670,"line_end":670,"column_start":5,"column_end":63}},{"value":"/ # fn main() {","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":156647,"byte_end":156664,"line_start":671,"line_end":671,"column_start":5,"column_end":22}},{"value":"/ let result = token('9')","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":156669,"byte_end":156696,"line_start":672,"line_end":672,"column_start":5,"column_end":32}},{"value":"/     .message(\"Not a nine\")","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":156701,"byte_end":156731,"line_start":673,"line_end":673,"column_start":5,"column_end":35}},{"value":"/     .easy_parse(State::new(\"8\"));","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":156736,"byte_end":156773,"line_start":674,"line_end":674,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(result, Err(easy::Errors {","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":156778,"byte_end":156819,"line_start":675,"line_end":675,"column_start":5,"column_end":46}},{"value":"/     position: SourcePosition::default(),","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":156824,"byte_end":156868,"line_start":676,"line_end":676,"column_start":5,"column_end":49}},{"value":"/     errors: vec![","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":156873,"byte_end":156894,"line_start":677,"line_end":677,"column_start":5,"column_end":26}},{"value":"/         easy::Error::Unexpected('8'.into()),","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":156899,"byte_end":156947,"line_start":678,"line_end":678,"column_start":5,"column_end":53}},{"value":"/         easy::Error::Expected('9'.into()),","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":156952,"byte_end":156998,"line_start":679,"line_end":679,"column_start":5,"column_end":51}},{"value":"/         easy::Error::Message(\"Not a nine\".into())","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":157003,"byte_end":157056,"line_start":680,"line_end":680,"column_start":5,"column_end":58}},{"value":"/     ]","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":157061,"byte_end":157070,"line_start":681,"line_end":681,"column_start":5,"column_end":14}},{"value":"/ }));","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":157075,"byte_end":157083,"line_start":682,"line_end":682,"column_start":5,"column_end":13}},{"value":"/ # }","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":157088,"byte_end":157095,"line_start":683,"line_end":683,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":157100,"byte_end":157107,"line_start":684,"line_end":684,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2204},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":158133,"byte_end":158141,"line_start":715,"line_end":715,"column_start":8,"column_end":16},"name":"expected","qualname":"::parser::Parser::expected","value":"pub fn expected<S>(Self, S) -> Expected<Self> where Self: Sized,\nS: Into<Info<<Self::Input as StreamOnce>::Item,\n             <Self::Input as StreamOnce>::Range>>","parent":{"krate":0,"index":2157},"children":[],"decl_id":null,"docs":" Parses with `self` and if it fails without consuming any input any expected errors are\n replaced by `msg`. `msg` is then used in error messages as \"Expected `msg`\".","sig":null,"attributes":[{"value":"/ Parses with `self` and if it fails without consuming any input any expected errors are","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":157333,"byte_end":157423,"line_start":693,"line_end":693,"column_start":5,"column_end":95}},{"value":"/ replaced by `msg`. `msg` is then used in error messages as \"Expected `msg`\".","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":157428,"byte_end":157508,"line_start":694,"line_end":694,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":157513,"byte_end":157516,"line_start":695,"line_end":695,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":157521,"byte_end":157528,"line_start":696,"line_end":696,"column_start":5,"column_end":12}},{"value":"/ # #![cfg(feature = \"std\")]","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":157533,"byte_end":157563,"line_start":697,"line_end":697,"column_start":5,"column_end":35}},{"value":"/ # extern crate combine;","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":157568,"byte_end":157595,"line_start":698,"line_end":698,"column_start":5,"column_end":32}},{"value":"/ # use combine::*;","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":157600,"byte_end":157621,"line_start":699,"line_end":699,"column_start":5,"column_end":26}},{"value":"/ # use combine::stream::easy;","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":157626,"byte_end":157658,"line_start":700,"line_end":700,"column_start":5,"column_end":37}},{"value":"/ # use combine::stream::state::{State, SourcePosition};","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":157663,"byte_end":157721,"line_start":701,"line_end":701,"column_start":5,"column_end":63}},{"value":"/ # fn main() {","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":157726,"byte_end":157743,"line_start":702,"line_end":702,"column_start":5,"column_end":22}},{"value":"/ let result = token('9')","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":157748,"byte_end":157775,"line_start":703,"line_end":703,"column_start":5,"column_end":32}},{"value":"/     .expected(\"nine\")","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":157780,"byte_end":157805,"line_start":704,"line_end":704,"column_start":5,"column_end":30}},{"value":"/     .easy_parse(State::new(\"8\"));","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":157810,"byte_end":157847,"line_start":705,"line_end":705,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(result, Err(easy::Errors {","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":157852,"byte_end":157893,"line_start":706,"line_end":706,"column_start":5,"column_end":46}},{"value":"/     position: SourcePosition::default(),","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":157898,"byte_end":157942,"line_start":707,"line_end":707,"column_start":5,"column_end":49}},{"value":"/     errors: vec![","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":157947,"byte_end":157968,"line_start":708,"line_end":708,"column_start":5,"column_end":26}},{"value":"/         easy::Error::Unexpected('8'.into()),","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":157973,"byte_end":158021,"line_start":709,"line_end":709,"column_start":5,"column_end":53}},{"value":"/         easy::Error::Expected(\"nine\".into())","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":158026,"byte_end":158074,"line_start":710,"line_end":710,"column_start":5,"column_end":53}},{"value":"/     ]","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":158079,"byte_end":158088,"line_start":711,"line_end":711,"column_start":5,"column_end":14}},{"value":"/ }));","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":158093,"byte_end":158101,"line_start":712,"line_end":712,"column_start":5,"column_end":13}},{"value":"/ # }","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":158106,"byte_end":158113,"line_start":713,"line_end":713,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":158118,"byte_end":158125,"line_start":714,"line_end":714,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2206},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":159097,"byte_end":159103,"line_start":745,"line_end":745,"column_start":8,"column_end":14},"name":"silent","qualname":"::parser::Parser::silent","value":"pub fn silent(Self) -> Silent<Self> where Self: Sized","parent":{"krate":0,"index":2157},"children":[],"decl_id":null,"docs":" Parses with `self`, if it fails without consuming any input any expected errors that would\n otherwise be emitted by `self` are suppressed.","sig":null,"attributes":[{"value":"/ Parses with `self`, if it fails without consuming any input any expected errors that would","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":158354,"byte_end":158448,"line_start":723,"line_end":723,"column_start":5,"column_end":99}},{"value":"/ otherwise be emitted by `self` are suppressed.","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":158453,"byte_end":158503,"line_start":724,"line_end":724,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":158508,"byte_end":158511,"line_start":725,"line_end":725,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":158516,"byte_end":158523,"line_start":726,"line_end":726,"column_start":5,"column_end":12}},{"value":"/ # #![cfg(feature = \"std\")]","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":158528,"byte_end":158558,"line_start":727,"line_end":727,"column_start":5,"column_end":35}},{"value":"/ # extern crate combine;","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":158563,"byte_end":158590,"line_start":728,"line_end":728,"column_start":5,"column_end":32}},{"value":"/ # use combine::*;","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":158595,"byte_end":158616,"line_start":729,"line_end":729,"column_start":5,"column_end":26}},{"value":"/ # use combine::stream::easy;","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":158621,"byte_end":158653,"line_start":730,"line_end":730,"column_start":5,"column_end":37}},{"value":"/ # use combine::stream::state::{State, SourcePosition};","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":158658,"byte_end":158716,"line_start":731,"line_end":731,"column_start":5,"column_end":63}},{"value":"/ # fn main() {","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":158721,"byte_end":158738,"line_start":732,"line_end":732,"column_start":5,"column_end":22}},{"value":"/ let result = token('9')","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":158743,"byte_end":158770,"line_start":733,"line_end":733,"column_start":5,"column_end":32}},{"value":"/     .expected(\"nine\")","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":158775,"byte_end":158800,"line_start":734,"line_end":734,"column_start":5,"column_end":30}},{"value":"/     .silent()","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":158805,"byte_end":158822,"line_start":735,"line_end":735,"column_start":5,"column_end":22}},{"value":"/     .easy_parse(State::new(\"8\"));","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":158827,"byte_end":158864,"line_start":736,"line_end":736,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(result, Err(easy::Errors {","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":158869,"byte_end":158910,"line_start":737,"line_end":737,"column_start":5,"column_end":46}},{"value":"/     position: SourcePosition::default(),","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":158915,"byte_end":158959,"line_start":738,"line_end":738,"column_start":5,"column_end":49}},{"value":"/     errors: vec![","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":158964,"byte_end":158985,"line_start":739,"line_end":739,"column_start":5,"column_end":26}},{"value":"/         easy::Error::Unexpected('8'.into()),","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":158990,"byte_end":159038,"line_start":740,"line_end":740,"column_start":5,"column_end":53}},{"value":"/     ]","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":159043,"byte_end":159052,"line_start":741,"line_end":741,"column_start":5,"column_end":14}},{"value":"/ }));","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":159057,"byte_end":159065,"line_start":742,"line_end":742,"column_start":5,"column_end":13}},{"value":"/ # }","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":159070,"byte_end":159077,"line_start":743,"line_end":743,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":159082,"byte_end":159089,"line_start":744,"line_end":744,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2207},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":160125,"byte_end":160133,"line_start":771,"line_end":771,"column_start":8,"column_end":16},"name":"and_then","qualname":"::parser::Parser::and_then","value":"pub fn and_then<F, O, E, I>(Self, F) -> AndThen<Self, F> where\nSelf: Parser<Input = I> + Sized, F: FnMut(Self::Output) -> Result<O, E>,\nI: Stream,\nE: Into<<I::Error as ParseError<I::Item, I::Range, I::Position>>::StreamError>","parent":{"krate":0,"index":2157},"children":[],"decl_id":null,"docs":" Parses with `self` and applies `f` on the result if `self` parses successfully.\n `f` may optionally fail with an error which is automatically converted to a `ParseError`.","sig":null,"attributes":[{"value":"/ Parses with `self` and applies `f` on the result if `self` parses successfully.","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":159195,"byte_end":159278,"line_start":752,"line_end":752,"column_start":5,"column_end":88}},{"value":"/ `f` may optionally fail with an error which is automatically converted to a `ParseError`.","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":159283,"byte_end":159376,"line_start":753,"line_end":753,"column_start":5,"column_end":98}},{"value":"/","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":159381,"byte_end":159384,"line_start":754,"line_end":754,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":159389,"byte_end":159396,"line_start":755,"line_end":755,"column_start":5,"column_end":12}},{"value":"/ # extern crate combine;","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":159401,"byte_end":159428,"line_start":756,"line_end":756,"column_start":5,"column_end":32}},{"value":"/ # use combine::*;","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":159433,"byte_end":159454,"line_start":757,"line_end":757,"column_start":5,"column_end":26}},{"value":"/ # use combine::stream::state::{State, SourcePosition};","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":159459,"byte_end":159517,"line_start":758,"line_end":758,"column_start":5,"column_end":63}},{"value":"/ # use combine::parser::char::digit;","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":159522,"byte_end":159561,"line_start":759,"line_end":759,"column_start":5,"column_end":44}},{"value":"/ # fn main() {","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":159566,"byte_end":159583,"line_start":760,"line_end":760,"column_start":5,"column_end":22}},{"value":"/ let mut parser = many1(digit())","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":159588,"byte_end":159623,"line_start":761,"line_end":761,"column_start":5,"column_end":40}},{"value":"/     .and_then(|s: String| s.parse::<i32>());","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":159628,"byte_end":159676,"line_start":762,"line_end":762,"column_start":5,"column_end":53}},{"value":"/ let result = parser.easy_parse(State::new(\"1234\")).map(|(x, state)| (x, state.input));","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":159681,"byte_end":159771,"line_start":763,"line_end":763,"column_start":5,"column_end":95}},{"value":"/ assert_eq!(result, Ok((1234, \"\")));","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":159776,"byte_end":159815,"line_start":764,"line_end":764,"column_start":5,"column_end":44}},{"value":"/ let result = parser.easy_parse(State::new(\"999999999999999999999999\"));","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":159820,"byte_end":159895,"line_start":765,"line_end":765,"column_start":5,"column_end":80}},{"value":"/ assert!(result.is_err());","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":159900,"byte_end":159929,"line_start":766,"line_end":766,"column_start":5,"column_end":34}},{"value":"/ // Errors are report as if they occurred at the start of the parse","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":159934,"byte_end":160004,"line_start":767,"line_end":767,"column_start":5,"column_end":75}},{"value":"/ assert_eq!(result.unwrap_err().position, SourcePosition { line: 1, column: 1 });","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":160009,"byte_end":160093,"line_start":768,"line_end":768,"column_start":5,"column_end":89}},{"value":"/ # }","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":160098,"byte_end":160105,"line_start":769,"line_end":769,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":160110,"byte_end":160117,"line_start":770,"line_end":770,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2212},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":161251,"byte_end":161255,"line_start":804,"line_end":804,"column_start":8,"column_end":12},"name":"iter","qualname":"::parser::Parser::iter","value":"pub fn iter(Self, &mut <Self as Parser>::Input)\n-> Iter<, Self, Self::PartialState, FirstMode> where Self: Parser + Sized","parent":{"krate":0,"index":2157},"children":[],"decl_id":null,"docs":" Creates an iterator from a parser and a state. Can be used as an alternative to [`many`]\n when collecting directly into a `Extend` type is not desirable.","sig":null,"attributes":[{"value":"/ Creates an iterator from a parser and a state. Can be used as an alternative to [`many`]","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":160427,"byte_end":160519,"line_start":781,"line_end":781,"column_start":5,"column_end":97}},{"value":"/ when collecting directly into a `Extend` type is not desirable.","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":160524,"byte_end":160591,"line_start":782,"line_end":782,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":160596,"byte_end":160599,"line_start":783,"line_end":783,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":160604,"byte_end":160611,"line_start":784,"line_end":784,"column_start":5,"column_end":12}},{"value":"/ # extern crate combine;","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":160616,"byte_end":160643,"line_start":785,"line_end":785,"column_start":5,"column_end":32}},{"value":"/ # use combine::*;","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":160648,"byte_end":160669,"line_start":786,"line_end":786,"column_start":5,"column_end":26}},{"value":"/ # use combine::parser::char::{char, digit};","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":160674,"byte_end":160721,"line_start":787,"line_end":787,"column_start":5,"column_end":52}},{"value":"/ # fn main() {","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":160726,"byte_end":160743,"line_start":788,"line_end":788,"column_start":5,"column_end":22}},{"value":"/ let mut buffer = String::new();","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":160748,"byte_end":160783,"line_start":789,"line_end":789,"column_start":5,"column_end":40}},{"value":"/ let number = parser(|input| {","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":160788,"byte_end":160821,"line_start":790,"line_end":790,"column_start":5,"column_end":38}},{"value":"/     buffer.clear();","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":160826,"byte_end":160849,"line_start":791,"line_end":791,"column_start":5,"column_end":28}},{"value":"/     let mut iter = digit().iter(input);","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":160854,"byte_end":160897,"line_start":792,"line_end":792,"column_start":5,"column_end":48}},{"value":"/     buffer.extend(&mut iter);","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":160902,"byte_end":160935,"line_start":793,"line_end":793,"column_start":5,"column_end":38}},{"value":"/     let i = buffer.parse::<i32>().unwrap();","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":160940,"byte_end":160987,"line_start":794,"line_end":794,"column_start":5,"column_end":52}},{"value":"/     iter.into_result(i)","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":160992,"byte_end":161019,"line_start":795,"line_end":795,"column_start":5,"column_end":32}},{"value":"/ });","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":161024,"byte_end":161031,"line_start":796,"line_end":796,"column_start":5,"column_end":12}},{"value":"/ let result = sep_by(number, char(','))","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":161036,"byte_end":161078,"line_start":797,"line_end":797,"column_start":5,"column_end":47}},{"value":"/     .parse(\"123,45,6\");","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":161083,"byte_end":161110,"line_start":798,"line_end":798,"column_start":5,"column_end":32}},{"value":"/ assert_eq!(result, Ok((vec![123, 45, 6], \"\")));","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":161115,"byte_end":161166,"line_start":799,"line_end":799,"column_start":5,"column_end":56}},{"value":"/ # }","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":161171,"byte_end":161178,"line_start":800,"line_end":800,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":161183,"byte_end":161190,"line_start":801,"line_end":801,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":161195,"byte_end":161198,"line_start":802,"line_end":802,"column_start":5,"column_end":8}},{"value":"/ [`many`]: ../combinator/fn.many.html","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":161203,"byte_end":161243,"line_start":803,"line_end":803,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":2213},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":162287,"byte_end":162299,"line_start":834,"line_end":834,"column_start":8,"column_end":20},"name":"partial_iter","qualname":"::parser::Parser::partial_iter","value":"pub fn partial_iter<'a, 's,\n                    M>(Self, M, &'a mut <Self as Parser>::Input,\n                       &'s mut Self::PartialState) -> Iter where\nSelf: Parser + Sized, M: ParseMode","parent":{"krate":0,"index":2157},"children":[],"decl_id":null,"docs":" Creates an iterator from a parser and a state. Can be used as an alternative to [`many`]\n when collecting directly into a `Extend` type is not desirable.","sig":null,"attributes":[{"value":"/ Creates an iterator from a parser and a state. Can be used as an alternative to [`many`]","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":161463,"byte_end":161555,"line_start":811,"line_end":811,"column_start":5,"column_end":97}},{"value":"/ when collecting directly into a `Extend` type is not desirable.","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":161560,"byte_end":161627,"line_start":812,"line_end":812,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":161632,"byte_end":161635,"line_start":813,"line_end":813,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":161640,"byte_end":161647,"line_start":814,"line_end":814,"column_start":5,"column_end":12}},{"value":"/ # extern crate combine;","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":161652,"byte_end":161679,"line_start":815,"line_end":815,"column_start":5,"column_end":32}},{"value":"/ # use combine::*;","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":161684,"byte_end":161705,"line_start":816,"line_end":816,"column_start":5,"column_end":26}},{"value":"/ # use combine::parser::char::{char, digit};","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":161710,"byte_end":161757,"line_start":817,"line_end":817,"column_start":5,"column_end":52}},{"value":"/ # fn main() {","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":161762,"byte_end":161779,"line_start":818,"line_end":818,"column_start":5,"column_end":22}},{"value":"/ let mut buffer = String::new();","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":161784,"byte_end":161819,"line_start":819,"line_end":819,"column_start":5,"column_end":40}},{"value":"/ let number = parser(|input| {","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":161824,"byte_end":161857,"line_start":820,"line_end":820,"column_start":5,"column_end":38}},{"value":"/     buffer.clear();","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":161862,"byte_end":161885,"line_start":821,"line_end":821,"column_start":5,"column_end":28}},{"value":"/     let mut iter = digit().iter(input);","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":161890,"byte_end":161933,"line_start":822,"line_end":822,"column_start":5,"column_end":48}},{"value":"/     buffer.extend(&mut iter);","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":161938,"byte_end":161971,"line_start":823,"line_end":823,"column_start":5,"column_end":38}},{"value":"/     let i = buffer.parse::<i32>().unwrap();","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":161976,"byte_end":162023,"line_start":824,"line_end":824,"column_start":5,"column_end":52}},{"value":"/     iter.into_result(i)","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":162028,"byte_end":162055,"line_start":825,"line_end":825,"column_start":5,"column_end":32}},{"value":"/ });","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":162060,"byte_end":162067,"line_start":826,"line_end":826,"column_start":5,"column_end":12}},{"value":"/ let result = sep_by(number, char(','))","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":162072,"byte_end":162114,"line_start":827,"line_end":827,"column_start":5,"column_end":47}},{"value":"/     .parse(\"123,45,6\");","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":162119,"byte_end":162146,"line_start":828,"line_end":828,"column_start":5,"column_end":32}},{"value":"/ assert_eq!(result, Ok((vec![123, 45, 6], \"\")));","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":162151,"byte_end":162202,"line_start":829,"line_end":829,"column_start":5,"column_end":56}},{"value":"/ # }","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":162207,"byte_end":162214,"line_start":830,"line_end":830,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":162219,"byte_end":162226,"line_start":831,"line_end":831,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":162231,"byte_end":162234,"line_start":832,"line_end":832,"column_start":5,"column_end":8}},{"value":"/ [`many`]: ../combinator/fn.many.html","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":162239,"byte_end":162279,"line_start":833,"line_end":833,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":2217},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":163378,"byte_end":163383,"line_start":868,"line_end":868,"column_start":8,"column_end":13},"name":"boxed","qualname":"::parser::Parser::boxed","value":"pub fn boxed<'a>(Self)\n->\n    Box<Parser<Input = Self::Input, Output = Self::Input, PartialState =\n        Self::Input> + 'a> where Self: Sized + 'a","parent":{"krate":0,"index":2157},"children":[],"decl_id":null,"docs":" Turns the parser into a trait object by putting it in a `Box`. Can be used to easily\n return parsers from functions without naming the type.","sig":null,"attributes":[{"value":"/ Turns the parser into a trait object by putting it in a `Box`. Can be used to easily","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":162628,"byte_end":162716,"line_start":847,"line_end":847,"column_start":5,"column_end":93}},{"value":"/ return parsers from functions without naming the type.","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":162721,"byte_end":162779,"line_start":848,"line_end":848,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":162784,"byte_end":162787,"line_start":849,"line_end":849,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":162792,"byte_end":162799,"line_start":850,"line_end":850,"column_start":5,"column_end":12}},{"value":"/ # extern crate combine;","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":162804,"byte_end":162831,"line_start":851,"line_end":851,"column_start":5,"column_end":32}},{"value":"/ # use combine::*;","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":162836,"byte_end":162857,"line_start":852,"line_end":852,"column_start":5,"column_end":26}},{"value":"/ # fn main() {","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":162862,"byte_end":162879,"line_start":853,"line_end":853,"column_start":5,"column_end":22}},{"value":"/ fn test<'input, F>(","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":162884,"byte_end":162907,"line_start":854,"line_end":854,"column_start":5,"column_end":28}},{"value":"/     c: char,","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":162912,"byte_end":162928,"line_start":855,"line_end":855,"column_start":5,"column_end":21}},{"value":"/     f: F)","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":162933,"byte_end":162946,"line_start":856,"line_end":856,"column_start":5,"column_end":18}},{"value":"/     -> Box<Parser<Input = &'input str, Output = (char, char), PartialState = ()>>","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":162951,"byte_end":163036,"line_start":857,"line_end":857,"column_start":5,"column_end":90}},{"value":"/     where F: FnMut(char) -> bool + 'static","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":163041,"byte_end":163087,"line_start":858,"line_end":858,"column_start":5,"column_end":51}},{"value":"/ {","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":163092,"byte_end":163097,"line_start":859,"line_end":859,"column_start":5,"column_end":10}},{"value":"/     ::combine::combinator::no_partial((token(c), satisfy(f))).boxed()","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":163102,"byte_end":163175,"line_start":860,"line_end":860,"column_start":5,"column_end":78}},{"value":"/ }","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":163180,"byte_end":163185,"line_start":861,"line_end":861,"column_start":5,"column_end":10}},{"value":"/ let result = test('a', |c| c >= 'a' && c <= 'f')","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":163190,"byte_end":163242,"line_start":862,"line_end":862,"column_start":5,"column_end":57}},{"value":"/     .parse(\"ac\");","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":163247,"byte_end":163268,"line_start":863,"line_end":863,"column_start":5,"column_end":26}},{"value":"/ assert_eq!(result, Ok((('a', 'c'), \"\")));","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":163273,"byte_end":163318,"line_start":864,"line_end":864,"column_start":5,"column_end":50}},{"value":"/ # }","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":163323,"byte_end":163330,"line_start":865,"line_end":865,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":163335,"byte_end":163342,"line_start":866,"line_end":866,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":163347,"byte_end":163370,"line_start":867,"line_end":867,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":2219},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":164513,"byte_end":164517,"line_start":905,"line_end":905,"column_start":8,"column_end":12},"name":"left","qualname":"::parser::Parser::left","value":"pub fn left<R>(Self) -> Either<Self, R> where Self: Sized, R: Parser<Input =\nSelf::Input, Output = Self::Input>","parent":{"krate":0,"index":2157},"children":[],"decl_id":null,"docs":" Wraps the parser into the `Either` enum which allows combinators such as `then` to return\n multiple different parser types (merging them to one)","sig":null,"attributes":[{"value":"/ Wraps the parser into the `Either` enum which allows combinators such as `then` to return","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":163599,"byte_end":163692,"line_start":879,"line_end":879,"column_start":5,"column_end":98}},{"value":"/ multiple different parser types (merging them to one)","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":163697,"byte_end":163754,"line_start":880,"line_end":880,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":163759,"byte_end":163762,"line_start":881,"line_end":881,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":163767,"byte_end":163774,"line_start":882,"line_end":882,"column_start":5,"column_end":12}},{"value":"/ # extern crate combine;","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":163779,"byte_end":163806,"line_start":883,"line_end":883,"column_start":5,"column_end":32}},{"value":"/ # use combine::*;","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":163811,"byte_end":163832,"line_start":884,"line_end":884,"column_start":5,"column_end":26}},{"value":"/ # use combine::parser::char::{digit, letter};","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":163837,"byte_end":163886,"line_start":885,"line_end":885,"column_start":5,"column_end":54}},{"value":"/ # fn main() {","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":163891,"byte_end":163908,"line_start":886,"line_end":886,"column_start":5,"column_end":22}},{"value":"/ let mut parser = any().then(|c|","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":163913,"byte_end":163948,"line_start":887,"line_end":887,"column_start":5,"column_end":40}},{"value":"/     if c == '#' {","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":163953,"byte_end":163974,"line_start":888,"line_end":888,"column_start":5,"column_end":26}},{"value":"/         skip_many(satisfy(|c| c != '\\n'))","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":163979,"byte_end":164024,"line_start":889,"line_end":889,"column_start":5,"column_end":50}},{"value":"/             .with(value(\"\".to_string()))","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":164029,"byte_end":164073,"line_start":890,"line_end":890,"column_start":5,"column_end":49}},{"value":"/             .left()","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":164078,"byte_end":164101,"line_start":891,"line_end":891,"column_start":5,"column_end":28}},{"value":"/     } else {","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":164106,"byte_end":164122,"line_start":892,"line_end":892,"column_start":5,"column_end":21}},{"value":"/         many1(letter())","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":164127,"byte_end":164154,"line_start":893,"line_end":893,"column_start":5,"column_end":32}},{"value":"/             .map(move |mut s: String| { s.insert(0, c); s })","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":164159,"byte_end":164223,"line_start":894,"line_end":894,"column_start":5,"column_end":69}},{"value":"/             .right()","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":164228,"byte_end":164252,"line_start":895,"line_end":895,"column_start":5,"column_end":29}},{"value":"/     });","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":164257,"byte_end":164268,"line_start":896,"line_end":896,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":164273,"byte_end":164276,"line_start":897,"line_end":897,"column_start":5,"column_end":8}},{"value":"/ let result = parser.parse(\"ac2\");","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":164281,"byte_end":164318,"line_start":898,"line_end":898,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(result, Ok((\"ac\".to_string(), \"2\")));","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":164323,"byte_end":164375,"line_start":899,"line_end":899,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":164380,"byte_end":164383,"line_start":900,"line_end":900,"column_start":5,"column_end":8}},{"value":"/ let result = parser.parse(\"# ac2\");","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":164388,"byte_end":164427,"line_start":901,"line_end":901,"column_start":5,"column_end":44}},{"value":"/ assert_eq!(result, Ok((\"\".to_string(), \"\")));","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":164432,"byte_end":164481,"line_start":902,"line_end":902,"column_start":5,"column_end":54}},{"value":"/ # }","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":164486,"byte_end":164493,"line_start":903,"line_end":903,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":164498,"byte_end":164505,"line_start":904,"line_end":904,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2221},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":165598,"byte_end":165603,"line_start":939,"line_end":939,"column_start":8,"column_end":13},"name":"right","qualname":"::parser::Parser::right","value":"pub fn right<L>(Self) -> Either<L, Self> where Self: Sized, L: Parser<Input =\nSelf::Input, Output = Self::Input>","parent":{"krate":0,"index":2157},"children":[],"decl_id":null,"docs":" Wraps the parser into the `Either` enum which allows combinators such as `then` to return\n multiple different parser types (merging them to one)","sig":null,"attributes":[{"value":"/ Wraps the parser into the `Either` enum which allows combinators such as `then` to return","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":164684,"byte_end":164777,"line_start":913,"line_end":913,"column_start":5,"column_end":98}},{"value":"/ multiple different parser types (merging them to one)","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":164782,"byte_end":164839,"line_start":914,"line_end":914,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":164844,"byte_end":164847,"line_start":915,"line_end":915,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":164852,"byte_end":164859,"line_start":916,"line_end":916,"column_start":5,"column_end":12}},{"value":"/ # extern crate combine;","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":164864,"byte_end":164891,"line_start":917,"line_end":917,"column_start":5,"column_end":32}},{"value":"/ # use combine::*;","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":164896,"byte_end":164917,"line_start":918,"line_end":918,"column_start":5,"column_end":26}},{"value":"/ # use combine::parser::char::{digit, letter};","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":164922,"byte_end":164971,"line_start":919,"line_end":919,"column_start":5,"column_end":54}},{"value":"/ # fn main() {","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":164976,"byte_end":164993,"line_start":920,"line_end":920,"column_start":5,"column_end":22}},{"value":"/ let mut parser = any().then(|c|","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":164998,"byte_end":165033,"line_start":921,"line_end":921,"column_start":5,"column_end":40}},{"value":"/     if c == '#' {","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":165038,"byte_end":165059,"line_start":922,"line_end":922,"column_start":5,"column_end":26}},{"value":"/         skip_many(satisfy(|c| c != '\\n'))","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":165064,"byte_end":165109,"line_start":923,"line_end":923,"column_start":5,"column_end":50}},{"value":"/             .with(value(\"\".to_string()))","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":165114,"byte_end":165158,"line_start":924,"line_end":924,"column_start":5,"column_end":49}},{"value":"/             .left()","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":165163,"byte_end":165186,"line_start":925,"line_end":925,"column_start":5,"column_end":28}},{"value":"/     } else {","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":165191,"byte_end":165207,"line_start":926,"line_end":926,"column_start":5,"column_end":21}},{"value":"/         many1(letter())","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":165212,"byte_end":165239,"line_start":927,"line_end":927,"column_start":5,"column_end":32}},{"value":"/             .map(move |mut s: String| { s.insert(0, c); s })","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":165244,"byte_end":165308,"line_start":928,"line_end":928,"column_start":5,"column_end":69}},{"value":"/             .right()","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":165313,"byte_end":165337,"line_start":929,"line_end":929,"column_start":5,"column_end":29}},{"value":"/     });","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":165342,"byte_end":165353,"line_start":930,"line_end":930,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":165358,"byte_end":165361,"line_start":931,"line_end":931,"column_start":5,"column_end":8}},{"value":"/ let result = parser.parse(\"ac2\");","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":165366,"byte_end":165403,"line_start":932,"line_end":932,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(result, Ok((\"ac\".to_string(), \"2\")));","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":165408,"byte_end":165460,"line_start":933,"line_end":933,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":165465,"byte_end":165468,"line_start":934,"line_end":934,"column_start":5,"column_end":8}},{"value":"/ let result = parser.parse(\"# ac2\");","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":165473,"byte_end":165512,"line_start":935,"line_end":935,"column_start":5,"column_end":44}},{"value":"/ assert_eq!(result, Ok((\"\".to_string(), \"\")));","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":165517,"byte_end":165566,"line_start":936,"line_end":936,"column_start":5,"column_end":54}},{"value":"/ # }","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":165571,"byte_end":165578,"line_start":937,"line_end":937,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":165583,"byte_end":165590,"line_start":938,"line_end":938,"column_start":5,"column_end":12}}]},{"kind":"Trait","id":{"krate":0,"index":2229},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":167314,"byte_end":167323,"line_start":1007,"line_end":1007,"column_start":11,"column_end":20},"name":"ParseMode","qualname":"::parser::ParseMode","value":"ParseMode: Copy","parent":null,"children":[{"krate":0,"index":2230},{"krate":0,"index":2231},{"krate":0,"index":2232}],"decl_id":null,"docs":" Internal API. May break without a semver bump\n Specifies whether the parser must check for partial state that must be resumed\n","sig":null,"attributes":[{"value":"/ Internal API. May break without a semver bump","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":167156,"byte_end":167205,"line_start":1004,"line_end":1004,"column_start":1,"column_end":50}},{"value":"/ Specifies whether the parser must check for partial state that must be resumed","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":167221,"byte_end":167303,"line_start":1006,"line_end":1006,"column_start":1,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":2230},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":167484,"byte_end":167492,"line_start":1010,"line_end":1010,"column_start":8,"column_end":16},"name":"is_first","qualname":"::parser::ParseMode::is_first","value":"pub fn is_first(Self) -> bool","parent":{"krate":0,"index":2229},"children":[],"decl_id":null,"docs":" If `true` then the parser has no previous state to resume otherwise the parser *might* have\n state to resume which it must check.\n","sig":null,"attributes":[{"value":"/ If `true` then the parser has no previous state to resume otherwise the parser *might* have","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":167336,"byte_end":167431,"line_start":1008,"line_end":1008,"column_start":5,"column_end":100}},{"value":"/ state to resume which it must check.","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":167436,"byte_end":167476,"line_start":1009,"line_end":1009,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":2231},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":167559,"byte_end":167568,"line_start":1012,"line_end":1012,"column_start":8,"column_end":17},"name":"set_first","qualname":"::parser::ParseMode::set_first","value":"pub fn set_first(&mut Self)","parent":{"krate":0,"index":2229},"children":[],"decl_id":null,"docs":" Puts the mode into `first` parsing.\n","sig":null,"attributes":[{"value":"/ Puts the mode into `first` parsing.","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":167512,"byte_end":167551,"line_start":1011,"line_end":1011,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":2232},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":167603,"byte_end":167617,"line_start":1015,"line_end":1015,"column_start":8,"column_end":22},"name":"parse_consumed","qualname":"::parser::ParseMode::parse_consumed","value":"pub fn parse_consumed<P>(Self, &mut P, &mut P::Input, &mut P::PartialState)\n-> ConsumedResult<P::Output, P::Input> where P: Parser","parent":{"krate":0,"index":2229},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":167586,"byte_end":167595,"line_start":1014,"line_end":1014,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":7888},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":168345,"byte_end":168354,"line_start":1041,"line_end":1041,"column_start":12,"column_end":21},"name":"FirstMode","qualname":"::parser::FirstMode","value":"","parent":null,"children":[],"decl_id":null,"docs":" Internal API. May break without a semver bump\n","sig":null,"attributes":[{"value":"/ Internal API. May break without a semver bump","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":168246,"byte_end":168295,"line_start":1038,"line_end":1038,"column_start":1,"column_end":50}}]},{"kind":"Struct","id":{"krate":0,"index":7893},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":168624,"byte_end":168635,"line_start":1054,"line_end":1054,"column_start":12,"column_end":23},"name":"PartialMode","qualname":"::parser::PartialMode","value":"PartialMode { first }","parent":null,"children":[{"krate":0,"index":7894}],"decl_id":null,"docs":" Internal API. May break without a semver bump\n","sig":null,"attributes":[{"value":"/ Internal API. May break without a semver bump","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":168516,"byte_end":168565,"line_start":1051,"line_end":1051,"column_start":1,"column_end":50}}]},{"kind":"Field","id":{"krate":0,"index":7894},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":168646,"byte_end":168651,"line_start":1055,"line_end":1055,"column_start":9,"column_end":14},"name":"first","qualname":"::parser::PartialMode::first","value":"bool","parent":{"krate":0,"index":7893},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":2240},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/lib.rs","byte_start":27478,"byte_end":27488,"line_start":773,"line_end":773,"column_start":9,"column_end":19},"name":"combinator","qualname":"::combinator","value":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/lib.rs","parent":null,"children":[{"krate":0,"index":2241},{"krate":0,"index":2242},{"krate":0,"index":2243},{"krate":0,"index":2244},{"krate":0,"index":2245},{"krate":0,"index":2246},{"krate":0,"index":2247}],"decl_id":null,"docs":" Re-exported parsers for compatibility with older versions\n","sig":null,"attributes":[{"value":"/ Re-exported parsers for compatibility with older versions","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/lib.rs","byte_start":27268,"byte_end":27329,"line_start":767,"line_end":767,"column_start":1,"column_end":62}},{"value":"deprecated(since = \"3.0.0\", note =\n             \"Please import parsers from the `parser` module and its submodules instead\")","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/lib.rs","byte_start":27345,"byte_end":27469,"line_start":769,"line_end":772,"column_start":1,"column_end":3}}]},{"kind":"Struct","id":{"krate":0,"index":7900},"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/lib.rs","byte_start":28500,"byte_end":28511,"line_start":815,"line_end":815,"column_start":12,"column_end":23},"name":"ErrorOffset","qualname":"::ErrorOffset","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/error.rs","byte_start":43233,"byte_end":43237,"line_start":36,"line_end":36,"column_start":24,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":74}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/error.rs","byte_start":43355,"byte_end":43359,"line_start":42,"line_end":42,"column_start":35,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":78}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/error.rs","byte_start":43469,"byte_end":43473,"line_start":48,"line_end":48,"column_start":22,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":81}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/error.rs","byte_start":44149,"byte_end":44157,"line_start":67,"line_end":67,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":84}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/error.rs","byte_start":44339,"byte_end":44347,"line_start":75,"line_end":75,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":87}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Inherent","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/error.rs","byte_start":44500,"byte_end":44508,"line_start":83,"line_end":83,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":90},{"krate":0,"index":91},{"krate":0,"index":92},{"krate":0,"index":93},{"krate":0,"index":94},{"krate":0,"index":97},{"krate":0,"index":98},{"krate":0,"index":102}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/error.rs","byte_start":53425,"byte_end":53440,"line_start":345,"line_end":345,"column_start":23,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":159}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/error.rs","byte_start":53795,"byte_end":53810,"line_start":359,"line_end":359,"column_start":48,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":164},{"krate":0,"index":165},{"krate":0,"index":166},{"krate":0,"index":168},{"krate":0,"index":169},{"krate":0,"index":170},{"krate":0,"index":172},{"krate":0,"index":174},{"krate":0,"index":175},{"krate":0,"index":176},{"krate":0,"index":177}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/error.rs","byte_start":55241,"byte_end":55256,"line_start":424,"line_end":424,"column_start":67,"column_end":82},"value":"","parent":null,"children":[{"krate":0,"index":183},{"krate":0,"index":184},{"krate":0,"index":185},{"krate":0,"index":186},{"krate":0,"index":187},{"krate":0,"index":188},{"krate":0,"index":190},{"krate":0,"index":191}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/error.rs","byte_start":56529,"byte_end":56546,"line_start":481,"line_end":481,"column_start":23,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":195}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/error.rs","byte_start":56974,"byte_end":56991,"line_start":496,"line_end":496,"column_start":48,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":200},{"krate":0,"index":201},{"krate":0,"index":202},{"krate":0,"index":204},{"krate":0,"index":205},{"krate":0,"index":206},{"krate":0,"index":208},{"krate":0,"index":210},{"krate":0,"index":211},{"krate":0,"index":212},{"krate":0,"index":213},{"krate":0,"index":214}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/error.rs","byte_start":58843,"byte_end":58860,"line_start":567,"line_end":567,"column_start":67,"column_end":84},"value":"","parent":null,"children":[{"krate":0,"index":220},{"krate":0,"index":221},{"krate":0,"index":222},{"krate":0,"index":223},{"krate":0,"index":224},{"krate":0,"index":225},{"krate":0,"index":227},{"krate":0,"index":228}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/error.rs","byte_start":60299,"byte_end":60306,"line_start":625,"line_end":625,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":232}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Inherent","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/error.rs","byte_start":60607,"byte_end":60617,"line_start":642,"line_end":642,"column_start":12,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":236},{"krate":0,"index":237},{"krate":0,"index":238},{"krate":0,"index":241}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Inherent","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/error.rs","byte_start":62086,"byte_end":62096,"line_start":694,"line_end":694,"column_start":12,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":247}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/error.rs","byte_start":62751,"byte_end":62761,"line_start":713,"line_end":713,"column_start":64,"column_end":74},"value":"","parent":null,"children":[{"krate":0,"index":256}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/error.rs","byte_start":63160,"byte_end":63170,"line_start":725,"line_end":725,"column_start":41,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":260}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/error.rs","byte_start":63591,"byte_end":63601,"line_start":738,"line_end":738,"column_start":41,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":265}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/buffered.rs","byte_start":95650,"byte_end":95664,"line_start":36,"line_end":36,"column_start":23,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":295},{"krate":0,"index":296},{"krate":0,"index":297}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Inherent","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/buffered.rs","byte_start":95904,"byte_end":95918,"line_start":49,"line_end":49,"column_start":9,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":300}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/buffered.rs","byte_start":96422,"byte_end":96436,"line_start":67,"line_end":67,"column_start":24,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":303}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/buffered.rs","byte_start":97034,"byte_end":97048,"line_start":89,"line_end":89,"column_start":24,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":306},{"krate":0,"index":307},{"krate":0,"index":308},{"krate":0,"index":309},{"krate":0,"index":310},{"krate":0,"index":311}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/easy.rs","byte_start":102247,"byte_end":102251,"line_start":105,"line_end":105,"column_start":42,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":331}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Inherent","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/easy.rs","byte_start":102531,"byte_end":102535,"line_start":115,"line_end":115,"column_start":12,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":335},{"krate":0,"index":339}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/easy.rs","byte_start":103205,"byte_end":103209,"line_start":143,"line_end":143,"column_start":48,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":346}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/easy.rs","byte_start":103785,"byte_end":103789,"line_start":156,"line_end":156,"column_start":57,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":350}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/easy.rs","byte_start":104136,"byte_end":104140,"line_start":167,"line_end":167,"column_start":24,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":353}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/easy.rs","byte_start":104251,"byte_end":104255,"line_start":172,"line_end":172,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":357}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/easy.rs","byte_start":104369,"byte_end":104373,"line_start":178,"line_end":178,"column_start":35,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":361}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/easy.rs","byte_start":104483,"byte_end":104487,"line_start":184,"line_end":184,"column_start":22,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":364}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/easy.rs","byte_start":105080,"byte_end":105085,"line_start":203,"line_end":203,"column_start":48,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":368},{"krate":0,"index":369},{"krate":0,"index":370},{"krate":0,"index":372},{"krate":0,"index":373},{"krate":0,"index":374},{"krate":0,"index":375},{"krate":0,"index":377},{"krate":0,"index":378},{"krate":0,"index":380},{"krate":0,"index":381},{"krate":0,"index":382},{"krate":0,"index":383},{"krate":0,"index":385}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/easy.rs","byte_start":107990,"byte_end":107995,"line_start":305,"line_end":305,"column_start":76,"column_end":81},"value":"","parent":null,"children":[{"krate":0,"index":391},{"krate":0,"index":392},{"krate":0,"index":393},{"krate":0,"index":394},{"krate":0,"index":395},{"krate":0,"index":396},{"krate":0,"index":398},{"krate":0,"index":399}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/easy.rs","byte_start":109045,"byte_end":109051,"line_start":352,"line_end":352,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":405},{"krate":0,"index":406},{"krate":0,"index":407},{"krate":0,"index":408},{"krate":0,"index":409},{"krate":0,"index":410},{"krate":0,"index":411},{"krate":0,"index":414},{"krate":0,"index":416},{"krate":0,"index":418}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Inherent","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/easy.rs","byte_start":110994,"byte_end":110999,"line_start":430,"line_end":430,"column_start":12,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":423},{"krate":0,"index":427}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/easy.rs","byte_start":111773,"byte_end":111778,"line_start":458,"line_end":458,"column_start":48,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":434}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/easy.rs","byte_start":112140,"byte_end":112145,"line_start":469,"line_end":469,"column_start":27,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":439}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Inherent","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/easy.rs","byte_start":112290,"byte_end":112295,"line_start":478,"line_end":478,"column_start":12,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":443},{"krate":0,"index":444}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Inherent","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/easy.rs","byte_start":115819,"byte_end":115825,"line_start":574,"line_end":574,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":455},{"krate":0,"index":456},{"krate":0,"index":457},{"krate":0,"index":458},{"krate":0,"index":459},{"krate":0,"index":461},{"krate":0,"index":463},{"krate":0,"index":465},{"krate":0,"index":468},{"krate":0,"index":472}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/easy.rs","byte_start":119617,"byte_end":119623,"line_start":698,"line_end":698,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":480}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/easy.rs","byte_start":119841,"byte_end":119847,"line_start":709,"line_end":709,"column_start":32,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":485}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/easy.rs","byte_start":120158,"byte_end":120163,"line_start":721,"line_end":721,"column_start":57,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":489}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/easy.rs","byte_start":120596,"byte_end":120602,"line_start":735,"line_end":735,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":492},{"krate":0,"index":493},{"krate":0,"index":494}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/easy.rs","byte_start":120873,"byte_end":120879,"line_start":749,"line_end":749,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":497},{"krate":0,"index":498},{"krate":0,"index":499},{"krate":0,"index":500},{"krate":0,"index":501},{"krate":0,"index":502}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/easy.rs","byte_start":121290,"byte_end":121296,"line_start":768,"line_end":768,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":505},{"krate":0,"index":506},{"krate":0,"index":508},{"krate":0,"index":510}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/easy.rs","byte_start":122094,"byte_end":122100,"line_start":799,"line_end":799,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":513}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/easy.rs","byte_start":122247,"byte_end":122253,"line_start":808,"line_end":808,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":516}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/state.rs","byte_start":124386,"byte_end":124397,"line_start":41,"line_end":41,"column_start":35,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":554}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/state.rs","byte_start":124479,"byte_end":124493,"line_start":45,"line_end":45,"column_start":31,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":557}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/state.rs","byte_start":124595,"byte_end":124605,"line_start":50,"line_end":50,"column_start":31,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":560}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Inherent","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/state.rs","byte_start":125632,"byte_end":125637,"line_start":85,"line_end":85,"column_start":12,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":564}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Inherent","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/state.rs","byte_start":125896,"byte_end":125901,"line_start":96,"line_end":96,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":567}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/state.rs","byte_start":126248,"byte_end":126253,"line_start":107,"line_end":107,"column_start":30,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":572}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/state.rs","byte_start":126642,"byte_end":126647,"line_start":121,"line_end":121,"column_start":30,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":577},{"krate":0,"index":578},{"krate":0,"index":579},{"krate":0,"index":580},{"krate":0,"index":581},{"krate":0,"index":583}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/state.rs","byte_start":127679,"byte_end":127694,"line_start":155,"line_end":155,"column_start":33,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":586},{"krate":0,"index":587},{"krate":0,"index":588}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Inherent","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/state.rs","byte_start":127927,"byte_end":127942,"line_start":172,"line_end":172,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":590},{"krate":0,"index":591}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/state.rs","byte_start":128197,"byte_end":128212,"line_start":182,"line_end":182,"column_start":52,"column_end":67},"value":"","parent":null,"children":[{"krate":0,"index":595}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/state.rs","byte_start":128702,"byte_end":128716,"line_start":203,"line_end":203,"column_start":18,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":597}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/state.rs","byte_start":128823,"byte_end":128837,"line_start":209,"line_end":209,"column_start":23,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":599}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Inherent","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/state.rs","byte_start":128979,"byte_end":128993,"line_start":215,"line_end":215,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":601}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/state.rs","byte_start":129092,"byte_end":129106,"line_start":221,"line_end":221,"column_start":27,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":603},{"krate":0,"index":604},{"krate":0,"index":605}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/state.rs","byte_start":129466,"byte_end":129480,"line_start":239,"line_end":239,"column_start":45,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":608}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/state.rs","byte_start":129648,"byte_end":129653,"line_start":247,"line_end":247,"column_start":35,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":613},{"krate":0,"index":615},{"krate":0,"index":618},{"krate":0,"index":621}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/state.rs","byte_start":131221,"byte_end":131226,"line_start":305,"line_end":305,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":625},{"krate":0,"index":626},{"krate":0,"index":627}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/state.rs","byte_start":131710,"byte_end":131715,"line_start":323,"line_end":323,"column_start":35,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":632}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/mod.rs","byte_start":69871,"byte_end":69872,"line_start":138,"line_end":138,"column_start":20,"column_end":21},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/mod.rs","byte_start":72158,"byte_end":72159,"line_start":210,"line_end":210,"column_start":25,"column_end":26},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/mod.rs","byte_start":82798,"byte_end":82811,"line_start":621,"line_end":621,"column_start":24,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":747}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/mod.rs","byte_start":82964,"byte_end":82977,"line_start":631,"line_end":631,"column_start":23,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":750},{"krate":0,"index":751},{"krate":0,"index":752}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/mod.rs","byte_start":83293,"byte_end":83306,"line_start":648,"line_end":648,"column_start":24,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":755},{"krate":0,"index":756},{"krate":0,"index":757},{"krate":0,"index":758},{"krate":0,"index":759},{"krate":0,"index":760}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/mod.rs","byte_start":83656,"byte_end":83669,"line_start":667,"line_end":667,"column_start":29,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":763},{"krate":0,"index":764},{"krate":0,"index":766},{"krate":0,"index":768}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/mod.rs","byte_start":84387,"byte_end":84400,"line_start":697,"line_end":697,"column_start":29,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":771}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/mod.rs","byte_start":84751,"byte_end":84762,"line_start":711,"line_end":711,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":775}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/mod.rs","byte_start":84880,"byte_end":84891,"line_start":717,"line_end":717,"column_start":28,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":779}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/mod.rs","byte_start":85079,"byte_end":85090,"line_start":727,"line_end":727,"column_start":28,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":783},{"krate":0,"index":784},{"krate":0,"index":785},{"krate":0,"index":786},{"krate":0,"index":787}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/mod.rs","byte_start":86388,"byte_end":86399,"line_start":790,"line_end":790,"column_start":33,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":796},{"krate":0,"index":797},{"krate":0,"index":799},{"krate":0,"index":801}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/mod.rs","byte_start":87483,"byte_end":87494,"line_start":831,"line_end":831,"column_start":33,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":805}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Inherent","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/mod.rs","byte_start":87812,"byte_end":87826,"line_start":847,"line_end":847,"column_start":9,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":808}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/mod.rs","byte_start":88289,"byte_end":88303,"line_start":863,"line_end":863,"column_start":22,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":812},{"krate":0,"index":813}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/mod.rs","byte_start":88465,"byte_end":88479,"line_start":873,"line_end":873,"column_start":34,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":816},{"krate":0,"index":817},{"krate":0,"index":818},{"krate":0,"index":819},{"krate":0,"index":820}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/mod.rs","byte_start":88967,"byte_end":88977,"line_start":897,"line_end":897,"column_start":30,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":826},{"krate":0,"index":827},{"krate":0,"index":828},{"krate":0,"index":829},{"krate":0,"index":830}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Inherent","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/mod.rs","byte_start":89424,"byte_end":89434,"line_start":914,"line_end":914,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":833}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/mod.rs","byte_start":90717,"byte_end":90730,"line_start":953,"line_end":953,"column_start":23,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":835}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Inherent","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/mod.rs","byte_start":90853,"byte_end":90866,"line_start":959,"line_end":959,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":837}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/byte.rs","byte_start":178245,"byte_end":178250,"line_start":292,"line_end":292,"column_start":24,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":944},{"krate":0,"index":945},{"krate":0,"index":946},{"krate":0,"index":947},{"krate":0,"index":950}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/byte.rs","byte_start":179842,"byte_end":179850,"line_start":346,"line_end":346,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":959},{"krate":0,"index":960},{"krate":0,"index":961},{"krate":0,"index":962},{"krate":0,"index":964}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/char.rs","byte_start":204049,"byte_end":204052,"line_start":316,"line_end":316,"column_start":20,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1028},{"krate":0,"index":1029},{"krate":0,"index":1030},{"krate":0,"index":1031},{"krate":0,"index":1033}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/char.rs","byte_start":205302,"byte_end":205308,"line_start":363,"line_end":363,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1039},{"krate":0,"index":1040},{"krate":0,"index":1041},{"krate":0,"index":1042},{"krate":0,"index":1044}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":219036,"byte_end":219042,"line_start":349,"line_end":349,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1089},{"krate":0,"index":1090},{"krate":0,"index":1091},{"krate":0,"index":6242},{"krate":0,"index":6243},{"krate":0,"index":1092},{"krate":0,"index":1094}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Direct","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":225812,"byte_end":225814,"line_start":559,"line_end":559,"column_start":31,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1119},{"krate":0,"index":1120},{"krate":0,"index":1121},{"krate":0,"index":6256},{"krate":0,"index":6257},{"krate":0,"index":1122},{"krate":0,"index":1124}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Direct","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":227972,"byte_end":227980,"line_start":633,"line_end":633,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1130},{"krate":0,"index":1131},{"krate":0,"index":1132},{"krate":0,"index":6267},{"krate":0,"index":6268},{"krate":0,"index":1133},{"krate":0,"index":6269},{"krate":0,"index":6270}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Direct","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/combinator.rs","byte_start":230755,"byte_end":230768,"line_start":19,"line_end":19,"column_start":26,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1163},{"krate":0,"index":1164},{"krate":0,"index":1165},{"krate":0,"index":6280},{"krate":0,"index":6281},{"krate":0,"index":1166},{"krate":0,"index":1168},{"krate":0,"index":1169},{"krate":0,"index":6282}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Direct","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/combinator.rs","byte_start":232585,"byte_end":232588,"line_start":91,"line_end":91,"column_start":26,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1176},{"krate":0,"index":1177},{"krate":0,"index":1178},{"krate":0,"index":1179},{"krate":0,"index":6292},{"krate":0,"index":6293},{"krate":0,"index":1180},{"krate":0,"index":1182},{"krate":0,"index":6294},{"krate":0,"index":6295},{"krate":0,"index":6296}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Direct","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/combinator.rs","byte_start":235517,"byte_end":235526,"line_start":203,"line_end":203,"column_start":26,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1192},{"krate":0,"index":1193},{"krate":0,"index":1194},{"krate":0,"index":1195},{"krate":0,"index":6306},{"krate":0,"index":6307},{"krate":0,"index":6308}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Direct","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/combinator.rs","byte_start":236634,"byte_end":236637,"line_start":252,"line_end":252,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1204},{"krate":0,"index":1205},{"krate":0,"index":1206},{"krate":0,"index":6322},{"krate":0,"index":6323},{"krate":0,"index":1207},{"krate":0,"index":6324},{"krate":0,"index":6325},{"krate":0,"index":6326}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Direct","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/combinator.rs","byte_start":237726,"byte_end":237733,"line_start":298,"line_end":298,"column_start":32,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1219},{"krate":0,"index":1220},{"krate":0,"index":1221},{"krate":0,"index":6340},{"krate":0,"index":6341},{"krate":0,"index":1222},{"krate":0,"index":6342},{"krate":0,"index":6343},{"krate":0,"index":6344}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Direct","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/combinator.rs","byte_start":239112,"byte_end":239119,"line_start":350,"line_end":350,"column_start":32,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1234},{"krate":0,"index":1235},{"krate":0,"index":1236},{"krate":0,"index":6358},{"krate":0,"index":6359},{"krate":0,"index":1237},{"krate":0,"index":6360},{"krate":0,"index":6361},{"krate":0,"index":6362}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Inherent","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/combinator.rs","byte_start":241439,"byte_end":241448,"line_start":424,"line_end":424,"column_start":12,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1248}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Direct","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/combinator.rs","byte_start":243936,"byte_end":243945,"line_start":493,"line_end":493,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1252},{"krate":0,"index":1253},{"krate":0,"index":1254},{"krate":0,"index":6376},{"krate":0,"index":6377},{"krate":0,"index":1255},{"krate":0,"index":1257}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Direct","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/combinator.rs","byte_start":245486,"byte_end":245492,"line_start":546,"line_end":546,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1264},{"krate":0,"index":1265},{"krate":0,"index":1266},{"krate":0,"index":1267},{"krate":0,"index":6378},{"krate":0,"index":6379},{"krate":0,"index":1268},{"krate":0,"index":1270}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Direct","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/combinator.rs","byte_start":247552,"byte_end":247561,"line_start":615,"line_end":615,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1277},{"krate":0,"index":1278},{"krate":0,"index":1279},{"krate":0,"index":1280},{"krate":0,"index":6380},{"krate":0,"index":6381},{"krate":0,"index":1281},{"krate":0,"index":6382},{"krate":0,"index":6383},{"krate":0,"index":6384}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Direct","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/combinator.rs","byte_start":248418,"byte_end":248424,"line_start":655,"line_end":655,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1287},{"krate":0,"index":1288},{"krate":0,"index":1289},{"krate":0,"index":1290},{"krate":0,"index":6394},{"krate":0,"index":6395},{"krate":0,"index":1292},{"krate":0,"index":6396},{"krate":0,"index":6397},{"krate":0,"index":6398}],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Direct","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/combinator.rs","byte_start":249428,"byte_end":249449,"line_start":701,"line_end":701,"column_start":20,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1303},{"krate":0,"index":1304},{"krate":0,"index":1305},{"krate":0,"index":1306},{"krate":0,"index":6404},{"krate":0,"index":6405},{"krate":0,"index":1307},{"krate":0,"index":6406},{"krate":0,"index":6407},{"krate":0,"index":6408}],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Direct","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/combinator.rs","byte_start":251874,"byte_end":251899,"line_start":797,"line_end":797,"column_start":20,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1317},{"krate":0,"index":1318},{"krate":0,"index":1319},{"krate":0,"index":1320},{"krate":0,"index":6414},{"krate":0,"index":6415},{"krate":0,"index":1321},{"krate":0,"index":6416},{"krate":0,"index":6417},{"krate":0,"index":6418}],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Direct","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/combinator.rs","byte_start":254223,"byte_end":254227,"line_start":887,"line_end":887,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1330},{"krate":0,"index":1331},{"krate":0,"index":1332},{"krate":0,"index":1333},{"krate":0,"index":1334},{"krate":0,"index":6428},{"krate":0,"index":6429},{"krate":0,"index":1335},{"krate":0,"index":1337},{"krate":0,"index":1339},{"krate":0,"index":1340}],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Inherent","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/combinator.rs","byte_start":256204,"byte_end":256211,"line_start":963,"line_end":963,"column_start":12,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":1347}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Direct","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/combinator.rs","byte_start":256463,"byte_end":256470,"line_start":976,"line_end":976,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1353},{"krate":0,"index":1354},{"krate":0,"index":1355},{"krate":0,"index":6443},{"krate":0,"index":6444},{"krate":0,"index":1356},{"krate":0,"index":1358},{"krate":0,"index":1359}],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Direct","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/combinator.rs","byte_start":258504,"byte_end":258510,"line_start":1053,"line_end":1053,"column_start":17,"column_end":23},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Direct","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/combinator.rs","byte_start":258555,"byte_end":258561,"line_start":1055,"line_end":1055,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1370}],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Direct","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/combinator.rs","byte_start":258929,"byte_end":258932,"line_start":1076,"line_end":1076,"column_start":17,"column_end":20},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Direct","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/combinator.rs","byte_start":258981,"byte_end":258984,"line_start":1078,"line_end":1078,"column_start":18,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1381}],"docs":"","sig":null,"attributes":[]},{"id":116,"kind":"Direct","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/combinator.rs","byte_start":261132,"byte_end":261138,"line_start":1152,"line_end":1152,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1396},{"krate":0,"index":1397},{"krate":0,"index":1398},{"krate":0,"index":1399},{"krate":0,"index":1401},{"krate":0,"index":6493},{"krate":0,"index":6494},{"krate":0,"index":1403},{"krate":0,"index":1406},{"krate":0,"index":1408}],"docs":"","sig":null,"attributes":[]},{"id":117,"kind":"Direct","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/error.rs","byte_start":266921,"byte_end":266931,"line_start":15,"line_end":15,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1437},{"krate":0,"index":1438},{"krate":0,"index":1439},{"krate":0,"index":1440},{"krate":0,"index":1441}],"docs":"","sig":null,"attributes":[]},{"id":118,"kind":"Direct","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/error.rs","byte_start":269150,"byte_end":269157,"line_start":101,"line_end":101,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1452},{"krate":0,"index":1453},{"krate":0,"index":1454},{"krate":0,"index":6513},{"krate":0,"index":6514},{"krate":0,"index":1455},{"krate":0,"index":1457},{"krate":0,"index":6515},{"krate":0,"index":6516}],"docs":"","sig":null,"attributes":[]},{"id":119,"kind":"Direct","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/error.rs","byte_start":270758,"byte_end":270766,"line_start":165,"line_end":165,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1462},{"krate":0,"index":1463},{"krate":0,"index":1464},{"krate":0,"index":6525},{"krate":0,"index":6526},{"krate":0,"index":1465},{"krate":0,"index":1467},{"krate":0,"index":6527},{"krate":0,"index":6528}],"docs":"","sig":null,"attributes":[]},{"id":120,"kind":"Direct","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/error.rs","byte_start":271903,"byte_end":271909,"line_start":214,"line_end":214,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1473},{"krate":0,"index":1474},{"krate":0,"index":1475},{"krate":0,"index":6536},{"krate":0,"index":6537},{"krate":0,"index":1476},{"krate":0,"index":1479},{"krate":0,"index":1480},{"krate":0,"index":6538}],"docs":"","sig":null,"attributes":[]},{"id":121,"kind":"Direct","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/function.rs","byte_start":275033,"byte_end":275041,"line_start":68,"line_end":68,"column_start":26,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1506},{"krate":0,"index":1507},{"krate":0,"index":1508},{"krate":0,"index":1509}],"docs":"","sig":null,"attributes":[]},{"id":122,"kind":"Direct","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/function.rs","byte_start":275751,"byte_end":275760,"line_start":106,"line_end":106,"column_start":25,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1521}],"docs":"","sig":null,"attributes":[]},{"id":123,"kind":"Direct","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/function.rs","byte_start":275969,"byte_end":275978,"line_start":119,"line_end":119,"column_start":26,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1526},{"krate":0,"index":1527},{"krate":0,"index":1528},{"krate":0,"index":1529}],"docs":"","sig":null,"attributes":[]},{"id":124,"kind":"Direct","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/item.rs","byte_start":278211,"byte_end":278214,"line_start":17,"line_end":17,"column_start":20,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1551},{"krate":0,"index":1552},{"krate":0,"index":1553},{"krate":0,"index":1554}],"docs":"","sig":null,"attributes":[]},{"id":125,"kind":"Direct","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/item.rs","byte_start":279551,"byte_end":279558,"line_start":75,"line_end":75,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1564},{"krate":0,"index":1565},{"krate":0,"index":1566},{"krate":0,"index":1567}],"docs":"","sig":null,"attributes":[]},{"id":126,"kind":"Direct","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/item.rs","byte_start":280662,"byte_end":280672,"line_start":125,"line_end":125,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1576},{"krate":0,"index":1577},{"krate":0,"index":1578},{"krate":0,"index":1579}],"docs":"","sig":null,"attributes":[]},{"id":127,"kind":"Direct","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/item.rs","byte_start":282053,"byte_end":282058,"line_start":185,"line_end":185,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1586},{"krate":0,"index":1587},{"krate":0,"index":1588},{"krate":0,"index":1589},{"krate":0,"index":1591}],"docs":"","sig":null,"attributes":[]},{"id":128,"kind":"Direct","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/item.rs","byte_start":283164,"byte_end":283170,"line_start":238,"line_end":238,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1598},{"krate":0,"index":1599},{"krate":0,"index":1600},{"krate":0,"index":1601},{"krate":0,"index":1602}],"docs":"","sig":null,"attributes":[]},{"id":129,"kind":"Direct","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/item.rs","byte_start":286455,"byte_end":286462,"line_start":344,"line_end":344,"column_start":26,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1611},{"krate":0,"index":1612},{"krate":0,"index":1613},{"krate":0,"index":1614}],"docs":"","sig":null,"attributes":[]},{"id":130,"kind":"Direct","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/item.rs","byte_start":289330,"byte_end":289338,"line_start":443,"line_end":443,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1621},{"krate":0,"index":1622},{"krate":0,"index":1623},{"krate":0,"index":1624}],"docs":"","sig":null,"attributes":[]},{"id":131,"kind":"Direct","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/item.rs","byte_start":290358,"byte_end":290363,"line_start":491,"line_end":491,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1630},{"krate":0,"index":1631},{"krate":0,"index":1632},{"krate":0,"index":1633},{"krate":0,"index":1636}],"docs":"","sig":null,"attributes":[]},{"id":132,"kind":"Direct","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/item.rs","byte_start":291591,"byte_end":291597,"line_start":546,"line_end":546,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1643},{"krate":0,"index":1644},{"krate":0,"index":1645},{"krate":0,"index":1646}],"docs":"","sig":null,"attributes":[]},{"id":133,"kind":"Direct","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/item.rs","byte_start":292997,"byte_end":293002,"line_start":599,"line_end":599,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1655},{"krate":0,"index":1656},{"krate":0,"index":1657},{"krate":0,"index":1658}],"docs":"","sig":null,"attributes":[]},{"id":134,"kind":"Direct","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/item.rs","byte_start":293717,"byte_end":293720,"line_start":636,"line_end":636,"column_start":20,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1664},{"krate":0,"index":1665},{"krate":0,"index":1666},{"krate":0,"index":1667},{"krate":0,"index":1668}],"docs":"","sig":null,"attributes":[]},{"id":135,"kind":"Direct","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/range.rs","byte_start":296459,"byte_end":296464,"line_start":23,"line_end":23,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1699},{"krate":0,"index":1700},{"krate":0,"index":1701},{"krate":0,"index":1702},{"krate":0,"index":1704}],"docs":"","sig":null,"attributes":[]},{"id":136,"kind":"Direct","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/range.rs","byte_start":299869,"byte_end":299887,"line_start":138,"line_end":138,"column_start":20,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1714},{"krate":0,"index":1715},{"krate":0,"index":1716},{"krate":0,"index":6713},{"krate":0,"index":6714},{"krate":0,"index":1717},{"krate":0,"index":1720}],"docs":"","sig":null,"attributes":[]},{"id":137,"kind":"Direct","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/range.rs","byte_start":303271,"byte_end":303275,"line_start":251,"line_end":251,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1732},{"krate":0,"index":1733},{"krate":0,"index":1734},{"krate":0,"index":1735}],"docs":"","sig":null,"attributes":[]},{"id":138,"kind":"Direct","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/range.rs","byte_start":304341,"byte_end":304350,"line_start":294,"line_end":294,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1747},{"krate":0,"index":1748},{"krate":0,"index":1749},{"krate":0,"index":6715},{"krate":0,"index":6716},{"krate":0,"index":1750}],"docs":"","sig":null,"attributes":[]},{"id":139,"kind":"Direct","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/range.rs","byte_start":305856,"byte_end":305866,"line_start":354,"line_end":354,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1766},{"krate":0,"index":1767},{"krate":0,"index":1768},{"krate":0,"index":6717},{"krate":0,"index":6718},{"krate":0,"index":1769}],"docs":"","sig":null,"attributes":[]},{"id":140,"kind":"Direct","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/range.rs","byte_start":307375,"byte_end":307389,"line_start":416,"line_end":416,"column_start":20,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1782},{"krate":0,"index":1783},{"krate":0,"index":1784},{"krate":0,"index":1785}],"docs":"","sig":null,"attributes":[]},{"id":141,"kind":"Direct","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/range.rs","byte_start":311832,"byte_end":311841,"line_start":538,"line_end":538,"column_start":30,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1790}],"docs":"","sig":null,"attributes":[]},{"id":142,"kind":"Direct","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/range.rs","byte_start":312122,"byte_end":312128,"line_start":552,"line_end":552,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1800},{"krate":0,"index":1801},{"krate":0,"index":1802},{"krate":0,"index":6732},{"krate":0,"index":6733},{"krate":0,"index":1803}],"docs":"","sig":null,"attributes":[]},{"id":143,"kind":"Direct","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":319177,"byte_end":319188,"line_start":81,"line_end":81,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1845},{"krate":0,"index":1846},{"krate":0,"index":1847},{"krate":0,"index":6802},{"krate":0,"index":6803},{"krate":0,"index":1848},{"krate":0,"index":1852}],"docs":"","sig":null,"attributes":[]},{"id":144,"kind":"Inherent","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":322475,"byte_end":322479,"line_start":213,"line_end":213,"column_start":27,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1881},{"krate":0,"index":1882},{"krate":0,"index":1884},{"krate":0,"index":1886},{"krate":0,"index":1888}],"docs":"","sig":null,"attributes":[]},{"id":145,"kind":"Direct","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":324735,"byte_end":324739,"line_start":288,"line_end":288,"column_start":40,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1895},{"krate":0,"index":1896}],"docs":"","sig":null,"attributes":[]},{"id":146,"kind":"Direct","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":325692,"byte_end":325696,"line_start":326,"line_end":326,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1900},{"krate":0,"index":1901},{"krate":0,"index":1902},{"krate":0,"index":6844},{"krate":0,"index":6845},{"krate":0,"index":1903},{"krate":0,"index":1905},{"krate":0,"index":1906},{"krate":0,"index":1907}],"docs":"","sig":null,"attributes":[]},{"id":147,"kind":"Direct","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":327733,"byte_end":327738,"line_start":401,"line_end":401,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1914},{"krate":0,"index":1915},{"krate":0,"index":1916},{"krate":0,"index":6859},{"krate":0,"index":6860},{"krate":0,"index":1917},{"krate":0,"index":1920},{"krate":0,"index":6861},{"krate":0,"index":6862}],"docs":"","sig":null,"attributes":[]},{"id":148,"kind":"Direct","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":330241,"byte_end":330245,"line_start":495,"line_end":495,"column_start":18,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":1925}],"docs":"","sig":null,"attributes":[]},{"id":149,"kind":"Direct","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":330319,"byte_end":330323,"line_start":501,"line_end":501,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1928}],"docs":"","sig":null,"attributes":[]},{"id":150,"kind":"Direct","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":331904,"byte_end":331909,"line_start":566,"line_end":566,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1938},{"krate":0,"index":1939},{"krate":0,"index":1940},{"krate":0,"index":6919},{"krate":0,"index":6920},{"krate":0,"index":1941},{"krate":0,"index":1944},{"krate":0,"index":6921},{"krate":0,"index":6922}],"docs":"","sig":null,"attributes":[]},{"id":151,"kind":"Direct","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":334028,"byte_end":334034,"line_start":644,"line_end":644,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1953},{"krate":0,"index":1954},{"krate":0,"index":1955},{"krate":0,"index":6939},{"krate":0,"index":6940},{"krate":0,"index":1956},{"krate":0,"index":1960},{"krate":0,"index":6941},{"krate":0,"index":6942}],"docs":"","sig":null,"attributes":[]},{"id":152,"kind":"Direct","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":337133,"byte_end":337141,"line_start":755,"line_end":755,"column_start":26,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1969},{"krate":0,"index":1970},{"krate":0,"index":1971},{"krate":0,"index":6959},{"krate":0,"index":6960},{"krate":0,"index":1972},{"krate":0,"index":1975}],"docs":"","sig":null,"attributes":[]},{"id":153,"kind":"Direct","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":339230,"byte_end":339239,"line_start":829,"line_end":829,"column_start":26,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1984},{"krate":0,"index":1985},{"krate":0,"index":1986},{"krate":0,"index":6977},{"krate":0,"index":6978},{"krate":0,"index":1987},{"krate":0,"index":1992}],"docs":"","sig":null,"attributes":[]},{"id":154,"kind":"Direct","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":342296,"byte_end":342303,"line_start":931,"line_end":931,"column_start":27,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":2001},{"krate":0,"index":2002},{"krate":0,"index":2003},{"krate":0,"index":6992},{"krate":0,"index":6993},{"krate":0,"index":2004},{"krate":0,"index":2006}],"docs":"","sig":null,"attributes":[]},{"id":155,"kind":"Direct","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":344918,"byte_end":344925,"line_start":1022,"line_end":1022,"column_start":27,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":2014},{"krate":0,"index":2015},{"krate":0,"index":2016},{"krate":0,"index":2017},{"krate":0,"index":2018}],"docs":"","sig":null,"attributes":[]},{"id":156,"kind":"Direct","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":347328,"byte_end":347337,"line_start":1098,"line_end":1098,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2025},{"krate":0,"index":2026},{"krate":0,"index":2027},{"krate":0,"index":7019},{"krate":0,"index":7020},{"krate":0,"index":2028}],"docs":"","sig":null,"attributes":[]},{"id":157,"kind":"Direct","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":351723,"byte_end":351730,"line_start":1227,"line_end":1227,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2042},{"krate":0,"index":2043},{"krate":0,"index":2044},{"krate":0,"index":2045},{"krate":0,"index":2046}],"docs":"","sig":null,"attributes":[]},{"id":158,"kind":"Direct","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/sequence.rs","byte_start":357606,"byte_end":357619,"line_start":36,"line_end":36,"column_start":33,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":2081}],"docs":"","sig":null,"attributes":[]},{"id":159,"kind":"Inherent","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/sequence.rs","byte_start":357767,"byte_end":357780,"line_start":45,"line_end":45,"column_start":12,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2085}],"docs":"","sig":null,"attributes":[]},{"id":160,"kind":"Direct","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/sequence.rs","byte_start":371301,"byte_end":371305,"line_start":410,"line_end":410,"column_start":28,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2096},{"krate":0,"index":2097},{"krate":0,"index":2098},{"krate":0,"index":2099},{"krate":0,"index":7796},{"krate":0,"index":7797},{"krate":0,"index":2101},{"krate":0,"index":7798},{"krate":0,"index":7799},{"krate":0,"index":7800}],"docs":"","sig":null,"attributes":[]},{"id":161,"kind":"Direct","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/sequence.rs","byte_start":372476,"byte_end":372480,"line_start":459,"line_end":459,"column_start":28,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2111},{"krate":0,"index":2112},{"krate":0,"index":2113},{"krate":0,"index":7813},{"krate":0,"index":7814},{"krate":0,"index":2114},{"krate":0,"index":7815},{"krate":0,"index":7816},{"krate":0,"index":7817}],"docs":"","sig":null,"attributes":[]},{"id":162,"kind":"Direct","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/sequence.rs","byte_start":374134,"byte_end":374138,"line_start":530,"line_end":530,"column_start":26,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2133},{"krate":0,"index":2134},{"krate":0,"index":2135},{"krate":0,"index":7855},{"krate":0,"index":7856},{"krate":0,"index":2136},{"krate":0,"index":2138}],"docs":"","sig":null,"attributes":[]},{"id":163,"kind":"Direct","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/sequence.rs","byte_start":376726,"byte_end":376737,"line_start":621,"line_end":621,"column_start":26,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":2147},{"krate":0,"index":2148},{"krate":0,"index":2149},{"krate":0,"index":7870},{"krate":0,"index":7871},{"krate":0,"index":2150},{"krate":0,"index":2152}],"docs":"","sig":null,"attributes":[]},{"id":164,"kind":"Direct","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":167092,"byte_end":167095,"line_start":997,"line_end":997,"column_start":20,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":7880},{"krate":0,"index":7881},{"krate":0,"index":7882},{"krate":0,"index":7883},{"krate":0,"index":7884},{"krate":0,"index":7885},{"krate":0,"index":7886},{"krate":0,"index":7887}],"docs":"","sig":null,"attributes":[]},{"id":165,"kind":"Direct","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":168375,"byte_end":168384,"line_start":1042,"line_end":1042,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":2235},{"krate":0,"index":2236}],"docs":"","sig":null,"attributes":[]},{"id":166,"kind":"Direct","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":168680,"byte_end":168691,"line_start":1057,"line_end":1057,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2238},{"krate":0,"index":2239}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/lib.rs","byte_start":27202,"byte_end":27207,"line_start":761,"line_end":761,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":65}},{"kind":"Mod","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/lib.rs","byte_start":27230,"byte_end":27236,"line_start":763,"line_end":763,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":267}},{"kind":"Mod","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/mod.rs","byte_start":67114,"byte_end":67122,"line_start":50,"line_end":50,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":285}},{"kind":"Mod","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/mod.rs","byte_start":67156,"byte_end":67160,"line_start":52,"line_end":52,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":312}},{"kind":"Mod","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/mod.rs","byte_start":67200,"byte_end":67205,"line_start":54,"line_end":54,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":517}},{"kind":"Mod","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/lib.rs","byte_start":27259,"byte_end":27265,"line_start":765,"line_end":765,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":841}},{"kind":"Mod","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":135724,"byte_end":135728,"line_start":63,"line_end":63,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":885}},{"kind":"Mod","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":135738,"byte_end":135742,"line_start":64,"line_end":64,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":981}},{"kind":"Mod","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":135752,"byte_end":135758,"line_start":65,"line_end":65,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":1048}},{"kind":"Mod","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":135768,"byte_end":135778,"line_start":66,"line_end":66,"column_start":9,"column_end":19},"ref_id":{"krate":0,"index":1137}},{"kind":"Mod","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":135788,"byte_end":135793,"line_start":67,"line_end":67,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":1420}},{"kind":"Mod","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":135803,"byte_end":135811,"line_start":68,"line_end":68,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":1483}},{"kind":"Mod","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":135821,"byte_end":135825,"line_start":69,"line_end":69,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":1534}},{"kind":"Mod","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":135835,"byte_end":135840,"line_start":70,"line_end":70,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":1671}},{"kind":"Mod","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":135917,"byte_end":135923,"line_start":73,"line_end":73,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":1809}},{"kind":"Mod","span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":135933,"byte_end":135941,"line_start":74,"line_end":74,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":2051}}],"macro_refs":[],"relations":[{"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/error.rs","byte_start":43233,"byte_end":43237,"line_start":36,"line_end":36,"column_start":24,"column_end":28},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":2251},"to":{"krate":2,"index":1889}},{"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/error.rs","byte_start":43355,"byte_end":43359,"line_start":42,"line_end":42,"column_start":35,"column_end":39},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":2251},"to":{"krate":2,"index":1889}},{"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/error.rs","byte_start":43469,"byte_end":43473,"line_start":48,"line_end":48,"column_start":22,"column_end":26},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":2251},"to":{"krate":2,"index":1889}},{"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/error.rs","byte_start":44149,"byte_end":44157,"line_start":67,"line_end":67,"column_start":22,"column_end":30},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":2271},"to":{"krate":2,"index":1883}},{"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/error.rs","byte_start":44339,"byte_end":44347,"line_start":75,"line_end":75,"column_start":22,"column_end":30},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":2271},"to":{"krate":2,"index":1880}},{"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/error.rs","byte_start":44500,"byte_end":44508,"line_start":83,"line_end":83,"column_start":9,"column_end":17},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":2271},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/error.rs","byte_start":48849,"byte_end":48854,"line_start":209,"line_end":209,"column_start":37,"column_end":42},"kind":"SuperTrait","from":{"krate":2,"index":1976},"to":{"krate":0,"index":113}},{"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/error.rs","byte_start":48857,"byte_end":48866,"line_start":209,"line_end":209,"column_start":45,"column_end":54},"kind":"SuperTrait","from":{"krate":2,"index":1697},"to":{"krate":0,"index":113}},{"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/error.rs","byte_start":51357,"byte_end":51362,"line_start":284,"line_end":284,"column_start":46,"column_end":51},"kind":"SuperTrait","from":{"krate":2,"index":1976},"to":{"krate":0,"index":139}},{"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/error.rs","byte_start":51365,"byte_end":51374,"line_start":284,"line_end":284,"column_start":54,"column_end":63},"kind":"SuperTrait","from":{"krate":2,"index":1697},"to":{"krate":0,"index":139}},{"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/error.rs","byte_start":53425,"byte_end":53440,"line_start":345,"line_end":345,"column_start":23,"column_end":38},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":2293},"to":{"krate":2,"index":6320}},{"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/error.rs","byte_start":53795,"byte_end":53810,"line_start":359,"line_end":359,"column_start":48,"column_end":63},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":2293},"to":{"krate":0,"index":113}},{"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/error.rs","byte_start":55241,"byte_end":55256,"line_start":424,"line_end":424,"column_start":67,"column_end":82},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":2293},"to":{"krate":0,"index":139}},{"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/error.rs","byte_start":56529,"byte_end":56546,"line_start":481,"line_end":481,"column_start":23,"column_end":40},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":2306},"to":{"krate":2,"index":6320}},{"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/error.rs","byte_start":56974,"byte_end":56991,"line_start":496,"line_end":496,"column_start":48,"column_end":65},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":2306},"to":{"krate":0,"index":113}},{"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/error.rs","byte_start":58843,"byte_end":58860,"line_start":567,"line_end":567,"column_start":67,"column_end":84},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":2306},"to":{"krate":0,"index":139}},{"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/error.rs","byte_start":60299,"byte_end":60306,"line_start":625,"line_end":625,"column_start":21,"column_end":28},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":2321},"to":{"krate":2,"index":1889}},{"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/error.rs","byte_start":60607,"byte_end":60617,"line_start":642,"line_end":642,"column_start":12,"column_end":22},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":2339},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/error.rs","byte_start":62086,"byte_end":62096,"line_start":694,"line_end":694,"column_start":12,"column_end":22},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":2339},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/error.rs","byte_start":62751,"byte_end":62761,"line_start":713,"line_end":713,"column_start":64,"column_end":74},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":2339},"to":{"krate":2,"index":1886}},{"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/error.rs","byte_start":63160,"byte_end":63170,"line_start":725,"line_end":725,"column_start":41,"column_end":51},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":2339},"to":{"krate":2,"index":1886}},{"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/error.rs","byte_start":63591,"byte_end":63601,"line_start":738,"line_end":738,"column_start":41,"column_end":51},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":2339},"to":{"krate":2,"index":1889}},{"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/buffered.rs","byte_start":95650,"byte_end":95664,"line_start":36,"line_end":36,"column_start":23,"column_end":37},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":2373},"to":{"krate":0,"index":644}},{"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/buffered.rs","byte_start":95904,"byte_end":95918,"line_start":49,"line_end":49,"column_start":9,"column_end":23},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":2373},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/buffered.rs","byte_start":96422,"byte_end":96436,"line_start":67,"line_end":67,"column_start":24,"column_end":38},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":2373},"to":{"krate":0,"index":633}},{"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/buffered.rs","byte_start":97034,"byte_end":97048,"line_start":89,"line_end":89,"column_start":24,"column_end":38},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":2373},"to":{"krate":0,"index":637}},{"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/easy.rs","byte_start":102247,"byte_end":102251,"line_start":105,"line_end":105,"column_start":42,"column_end":46},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":2388},"to":{"krate":2,"index":1889}},{"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/easy.rs","byte_start":102531,"byte_end":102535,"line_start":115,"line_end":115,"column_start":12,"column_end":16},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":2388},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/easy.rs","byte_start":103205,"byte_end":103209,"line_start":143,"line_end":143,"column_start":48,"column_end":52},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":2388},"to":{"krate":2,"index":1697}},{"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/easy.rs","byte_start":103785,"byte_end":103789,"line_start":156,"line_end":156,"column_start":57,"column_end":61},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":2388},"to":{"krate":2,"index":6320}},{"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/easy.rs","byte_start":104136,"byte_end":104140,"line_start":167,"line_end":167,"column_start":24,"column_end":28},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":2388},"to":{"krate":2,"index":1889}},{"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/easy.rs","byte_start":104251,"byte_end":104255,"line_start":172,"line_end":172,"column_start":29,"column_end":33},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":2388},"to":{"krate":2,"index":1889}},{"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/easy.rs","byte_start":104369,"byte_end":104373,"line_start":178,"line_end":178,"column_start":35,"column_end":39},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":2388},"to":{"krate":2,"index":1889}},{"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/easy.rs","byte_start":104483,"byte_end":104487,"line_start":184,"line_end":184,"column_start":22,"column_end":26},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":2388},"to":{"krate":2,"index":1889}},{"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/easy.rs","byte_start":105080,"byte_end":105085,"line_start":203,"line_end":203,"column_start":48,"column_end":53},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":2411},"to":{"krate":0,"index":113}},{"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/easy.rs","byte_start":107990,"byte_end":107995,"line_start":305,"line_end":305,"column_start":76,"column_end":81},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":2411},"to":{"krate":0,"index":139}},{"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/easy.rs","byte_start":109045,"byte_end":109051,"line_start":352,"line_end":352,"column_start":9,"column_end":15},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":2430},"to":{"krate":0,"index":139}},{"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/easy.rs","byte_start":110994,"byte_end":110999,"line_start":430,"line_end":430,"column_start":12,"column_end":17},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":2411},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/easy.rs","byte_start":111773,"byte_end":111778,"line_start":458,"line_end":458,"column_start":48,"column_end":53},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":2411},"to":{"krate":2,"index":1697}},{"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/easy.rs","byte_start":112140,"byte_end":112145,"line_start":469,"line_end":469,"column_start":27,"column_end":32},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":2411},"to":{"krate":2,"index":1889}},{"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/easy.rs","byte_start":112290,"byte_end":112295,"line_start":478,"line_end":478,"column_start":12,"column_end":17},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":2411},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/easy.rs","byte_start":115819,"byte_end":115825,"line_start":574,"line_end":574,"column_start":15,"column_end":21},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":2430},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/easy.rs","byte_start":119617,"byte_end":119623,"line_start":698,"line_end":698,"column_start":28,"column_end":34},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":2430},"to":{"krate":1,"index":1690}},{"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/easy.rs","byte_start":119841,"byte_end":119847,"line_start":709,"line_end":709,"column_start":32,"column_end":38},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":2430},"to":{"krate":2,"index":6320}},{"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/easy.rs","byte_start":120158,"byte_end":120163,"line_start":721,"line_end":721,"column_start":57,"column_end":62},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":2411},"to":{"krate":2,"index":6320}},{"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/easy.rs","byte_start":120596,"byte_end":120602,"line_start":735,"line_end":735,"column_start":23,"column_end":29},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":2451},"to":{"krate":0,"index":644}},{"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/easy.rs","byte_start":120873,"byte_end":120879,"line_start":749,"line_end":749,"column_start":24,"column_end":30},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":2451},"to":{"krate":0,"index":637}},{"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/easy.rs","byte_start":121290,"byte_end":121296,"line_start":768,"line_end":768,"column_start":29,"column_end":35},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":2451},"to":{"krate":0,"index":653}},{"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/easy.rs","byte_start":122094,"byte_end":122100,"line_start":799,"line_end":799,"column_start":24,"column_end":30},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":2451},"to":{"krate":0,"index":633}},{"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/easy.rs","byte_start":122247,"byte_end":122253,"line_start":808,"line_end":808,"column_start":29,"column_end":35},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":2451},"to":{"krate":0,"index":664}},{"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/state.rs","byte_start":123901,"byte_end":123911,"line_start":23,"line_end":23,"column_start":41,"column_end":51},"kind":"SuperTrait","from":{"krate":0,"index":533},"to":{"krate":0,"index":538}},{"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/state.rs","byte_start":124386,"byte_end":124397,"line_start":41,"line_end":41,"column_start":35,"column_end":46},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":2587},"to":{"krate":0,"index":542}},{"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/state.rs","byte_start":124479,"byte_end":124493,"line_start":45,"line_end":45,"column_start":31,"column_end":45},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":2626},"to":{"krate":0,"index":542}},{"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/state.rs","byte_start":124595,"byte_end":124605,"line_start":50,"line_end":50,"column_start":31,"column_end":41},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":821},"to":{"krate":0,"index":542}},{"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/state.rs","byte_start":125632,"byte_end":125637,"line_start":85,"line_end":85,"column_start":12,"column_end":17},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":2463},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/state.rs","byte_start":125896,"byte_end":125901,"line_start":96,"line_end":96,"column_start":9,"column_end":14},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":2463},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/state.rs","byte_start":126248,"byte_end":126253,"line_start":107,"line_end":107,"column_start":30,"column_end":35},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":2463},"to":{"krate":0,"index":633}},{"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/state.rs","byte_start":126642,"byte_end":126647,"line_start":121,"line_end":121,"column_start":30,"column_end":35},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":2463},"to":{"krate":0,"index":637}},{"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/state.rs","byte_start":127679,"byte_end":127694,"line_start":155,"line_end":155,"column_start":33,"column_end":48},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":2484},"to":{"krate":0,"index":533}},{"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/state.rs","byte_start":127927,"byte_end":127942,"line_start":172,"line_end":172,"column_start":6,"column_end":21},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":2484},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/state.rs","byte_start":128197,"byte_end":128212,"line_start":182,"line_end":182,"column_start":52,"column_end":67},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":2484},"to":{"krate":0,"index":538}},{"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/state.rs","byte_start":128702,"byte_end":128716,"line_start":203,"line_end":203,"column_start":18,"column_end":32},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":2501},"to":{"krate":2,"index":1959}},{"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/state.rs","byte_start":128823,"byte_end":128837,"line_start":209,"line_end":209,"column_start":23,"column_end":37},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":2501},"to":{"krate":2,"index":6320}},{"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/state.rs","byte_start":128979,"byte_end":128993,"line_start":215,"line_end":215,"column_start":6,"column_end":20},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":2501},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/state.rs","byte_start":129092,"byte_end":129106,"line_start":221,"line_end":221,"column_start":27,"column_end":41},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":2501},"to":{"krate":0,"index":533}},{"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/state.rs","byte_start":129466,"byte_end":129480,"line_start":239,"line_end":239,"column_start":45,"column_end":59},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":2501},"to":{"krate":0,"index":538}},{"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/state.rs","byte_start":129648,"byte_end":129653,"line_start":247,"line_end":247,"column_start":35,"column_end":40},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":2463},"to":{"krate":0,"index":653}},{"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/state.rs","byte_start":131221,"byte_end":131226,"line_start":305,"line_end":305,"column_start":26,"column_end":31},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":2463},"to":{"krate":0,"index":644}},{"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/state.rs","byte_start":131710,"byte_end":131715,"line_start":323,"line_end":323,"column_start":35,"column_end":40},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":2463},"to":{"krate":0,"index":664}},{"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/mod.rs","byte_start":67263,"byte_end":67273,"line_start":57,"line_end":57,"column_start":23,"column_end":33},"kind":"SuperTrait","from":{"krate":0,"index":637},"to":{"krate":0,"index":633}},{"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/mod.rs","byte_start":69812,"byte_end":69822,"line_start":136,"line_end":136,"column_start":19,"column_end":29},"kind":"SuperTrait","from":{"krate":0,"index":637},"to":{"krate":0,"index":648}},{"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/mod.rs","byte_start":69825,"byte_end":69834,"line_start":136,"line_end":136,"column_start":32,"column_end":41},"kind":"SuperTrait","from":{"krate":0,"index":644},"to":{"krate":0,"index":648}},{"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/mod.rs","byte_start":69837,"byte_end":69847,"line_start":136,"line_end":136,"column_start":44,"column_end":54},"kind":"SuperTrait","from":{"krate":0,"index":633},"to":{"krate":0,"index":648}},{"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/mod.rs","byte_start":69871,"byte_end":69872,"line_start":138,"line_end":138,"column_start":20,"column_end":21},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":650},"to":{"krate":0,"index":648}},{"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/mod.rs","byte_start":70324,"byte_end":70334,"line_start":157,"line_end":157,"column_start":28,"column_end":38},"kind":"SuperTrait","from":{"krate":0,"index":637},"to":{"krate":0,"index":653}},{"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/mod.rs","byte_start":70337,"byte_end":70346,"line_start":157,"line_end":157,"column_start":41,"column_end":50},"kind":"SuperTrait","from":{"krate":0,"index":644},"to":{"krate":0,"index":653}},{"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/mod.rs","byte_start":72105,"byte_end":72111,"line_start":208,"line_end":208,"column_start":24,"column_end":30},"kind":"SuperTrait","from":{"krate":0,"index":648},"to":{"krate":0,"index":661}},{"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/mod.rs","byte_start":72114,"byte_end":72129,"line_start":208,"line_end":208,"column_start":33,"column_end":48},"kind":"SuperTrait","from":{"krate":0,"index":653},"to":{"krate":0,"index":661}},{"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/mod.rs","byte_start":72158,"byte_end":72159,"line_start":210,"line_end":210,"column_start":25,"column_end":26},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":663},"to":{"krate":0,"index":661}},{"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/mod.rs","byte_start":72294,"byte_end":72305,"line_start":213,"line_end":213,"column_start":28,"column_end":39},"kind":"SuperTrait","from":{"krate":0,"index":661},"to":{"krate":0,"index":664}},{"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/mod.rs","byte_start":82798,"byte_end":82811,"line_start":621,"line_end":621,"column_start":24,"column_end":37},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":2554},"to":{"krate":0,"index":633}},{"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/mod.rs","byte_start":82964,"byte_end":82977,"line_start":631,"line_end":631,"column_start":23,"column_end":36},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":2554},"to":{"krate":0,"index":644}},{"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/mod.rs","byte_start":83293,"byte_end":83306,"line_start":648,"line_end":648,"column_start":24,"column_end":37},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":2554},"to":{"krate":0,"index":637}},{"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/mod.rs","byte_start":83656,"byte_end":83669,"line_start":667,"line_end":667,"column_start":29,"column_end":42},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":2554},"to":{"krate":0,"index":653}},{"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/mod.rs","byte_start":84387,"byte_end":84400,"line_start":697,"line_end":697,"column_start":29,"column_end":42},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":2554},"to":{"krate":0,"index":664}},{"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/mod.rs","byte_start":84751,"byte_end":84762,"line_start":711,"line_end":711,"column_start":23,"column_end":34},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":2587},"to":{"krate":2,"index":1669}},{"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/mod.rs","byte_start":84880,"byte_end":84891,"line_start":717,"line_end":717,"column_start":28,"column_end":39},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":2587},"to":{"krate":0,"index":633}},{"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/mod.rs","byte_start":85079,"byte_end":85090,"line_start":727,"line_end":727,"column_start":28,"column_end":39},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":2587},"to":{"krate":0,"index":637}},{"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/mod.rs","byte_start":86388,"byte_end":86399,"line_start":790,"line_end":790,"column_start":33,"column_end":44},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":2587},"to":{"krate":0,"index":653}},{"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/mod.rs","byte_start":87483,"byte_end":87494,"line_start":831,"line_end":831,"column_start":33,"column_end":44},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":2587},"to":{"krate":0,"index":664}},{"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/mod.rs","byte_start":87812,"byte_end":87826,"line_start":847,"line_end":847,"column_start":9,"column_end":23},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":2626},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/mod.rs","byte_start":88289,"byte_end":88303,"line_start":863,"line_end":863,"column_start":22,"column_end":36},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":2626},"to":{"krate":2,"index":5040}},{"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/mod.rs","byte_start":88465,"byte_end":88479,"line_start":873,"line_end":873,"column_start":34,"column_end":48},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":2626},"to":{"krate":0,"index":637}},{"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/mod.rs","byte_start":88967,"byte_end":88977,"line_start":897,"line_end":897,"column_start":30,"column_end":40},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":821},"to":{"krate":0,"index":637}},{"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/mod.rs","byte_start":89424,"byte_end":89434,"line_start":914,"line_end":914,"column_start":9,"column_end":19},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":821},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/mod.rs","byte_start":90717,"byte_end":90730,"line_start":953,"line_end":953,"column_start":23,"column_end":36},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":2638},"to":{"krate":2,"index":6320}},{"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/stream/mod.rs","byte_start":90853,"byte_end":90866,"line_start":959,"line_end":959,"column_start":6,"column_end":19},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":2638},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/byte.rs","byte_start":178245,"byte_end":178250,"line_start":292,"line_end":292,"column_start":24,"column_end":29},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":2909},"to":{"krate":0,"index":2157}},{"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/byte.rs","byte_start":179842,"byte_end":179850,"line_start":346,"line_end":346,"column_start":27,"column_end":35},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":2919},"to":{"krate":0,"index":2157}},{"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/char.rs","byte_start":204049,"byte_end":204052,"line_start":316,"line_end":316,"column_start":20,"column_end":23},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":3494},"to":{"krate":0,"index":2157}},{"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/char.rs","byte_start":205302,"byte_end":205308,"line_start":363,"line_end":363,"column_start":23,"column_end":29},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":3504},"to":{"krate":0,"index":2157}},{"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":219036,"byte_end":219042,"line_start":349,"line_end":349,"column_start":20,"column_end":26},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":6233},"to":{"krate":0,"index":2157}},{"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":225812,"byte_end":225814,"line_start":559,"line_end":559,"column_start":31,"column_end":33},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":6244},"to":{"krate":0,"index":2157}},{"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/choice.rs","byte_start":227972,"byte_end":227980,"line_start":633,"line_end":633,"column_start":20,"column_end":28},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":6258},"to":{"krate":0,"index":2157}},{"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/combinator.rs","byte_start":230755,"byte_end":230768,"line_start":19,"line_end":19,"column_start":26,"column_end":39},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":6271},"to":{"krate":0,"index":2157}},{"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/combinator.rs","byte_start":232585,"byte_end":232588,"line_start":91,"line_end":91,"column_start":26,"column_end":29},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":6283},"to":{"krate":0,"index":2157}},{"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/combinator.rs","byte_start":235517,"byte_end":235526,"line_start":203,"line_end":203,"column_start":26,"column_end":35},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":6297},"to":{"krate":0,"index":2157}},{"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/combinator.rs","byte_start":236634,"byte_end":236637,"line_start":252,"line_end":252,"column_start":32,"column_end":35},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":6309},"to":{"krate":0,"index":2157}},{"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/combinator.rs","byte_start":237726,"byte_end":237733,"line_start":298,"line_end":298,"column_start":32,"column_end":39},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":6327},"to":{"krate":0,"index":2157}},{"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/combinator.rs","byte_start":239112,"byte_end":239119,"line_start":350,"line_end":350,"column_start":32,"column_end":39},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":6345},"to":{"krate":0,"index":2157}},{"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/combinator.rs","byte_start":241439,"byte_end":241448,"line_start":424,"line_end":424,"column_start":12,"column_end":21},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":6363},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/combinator.rs","byte_start":243936,"byte_end":243945,"line_start":493,"line_end":493,"column_start":23,"column_end":32},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":6363},"to":{"krate":0,"index":2157}},{"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/combinator.rs","byte_start":245486,"byte_end":245492,"line_start":546,"line_end":546,"column_start":23,"column_end":29},"kind":{"Impl":{"id":102}},"from":{"krate":19,"index":190},"to":{"krate":0,"index":2157}},{"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/combinator.rs","byte_start":247552,"byte_end":247561,"line_start":615,"line_end":615,"column_start":20,"column_end":29},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":1271},"to":{"krate":0,"index":2157}},{"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/combinator.rs","byte_start":248418,"byte_end":248424,"line_start":655,"line_end":655,"column_start":20,"column_end":26},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":6385},"to":{"krate":0,"index":2157}},{"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/combinator.rs","byte_start":249428,"byte_end":249449,"line_start":701,"line_end":701,"column_start":20,"column_end":41},"kind":{"Impl":{"id":105}},"from":{"krate":0,"index":1297},"to":{"krate":0,"index":2157}},{"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/combinator.rs","byte_start":251874,"byte_end":251899,"line_start":797,"line_end":797,"column_start":20,"column_end":45},"kind":{"Impl":{"id":106}},"from":{"krate":0,"index":1311},"to":{"krate":0,"index":2157}},{"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/combinator.rs","byte_start":254223,"byte_end":254227,"line_start":887,"line_end":887,"column_start":29,"column_end":33},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":6419},"to":{"krate":0,"index":2157}},{"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/combinator.rs","byte_start":256204,"byte_end":256211,"line_start":963,"line_end":963,"column_start":12,"column_end":19},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":6430},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/combinator.rs","byte_start":256463,"byte_end":256470,"line_start":976,"line_end":976,"column_start":29,"column_end":36},"kind":{"Impl":{"id":109}},"from":{"krate":0,"index":6430},"to":{"krate":0,"index":2157}},{"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/combinator.rs","byte_start":258407,"byte_end":258413,"line_start":1048,"line_end":1048,"column_start":20,"column_end":26},"kind":"SuperTrait","from":{"krate":0,"index":1364},"to":{"krate":0,"index":1366}},{"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/combinator.rs","byte_start":258504,"byte_end":258510,"line_start":1053,"line_end":1053,"column_start":17,"column_end":23},"kind":{"Impl":{"id":110}},"from":{"krate":5,"index":5079},"to":{"krate":0,"index":1364}},{"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/combinator.rs","byte_start":258555,"byte_end":258561,"line_start":1055,"line_end":1055,"column_start":18,"column_end":24},"kind":{"Impl":{"id":111}},"from":{"krate":5,"index":5079},"to":{"krate":0,"index":1366}},{"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/combinator.rs","byte_start":258929,"byte_end":258932,"line_start":1076,"line_end":1076,"column_start":17,"column_end":20},"kind":{"Impl":{"id":114}},"from":{"krate":5,"index":4366},"to":{"krate":0,"index":1364}},{"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/combinator.rs","byte_start":258981,"byte_end":258984,"line_start":1078,"line_end":1078,"column_start":18,"column_end":21},"kind":{"Impl":{"id":115}},"from":{"krate":5,"index":4366},"to":{"krate":0,"index":1366}},{"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/combinator.rs","byte_start":261132,"byte_end":261138,"line_start":1152,"line_end":1152,"column_start":29,"column_end":35},"kind":{"Impl":{"id":116}},"from":{"krate":0,"index":6474},"to":{"krate":0,"index":2157}},{"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/error.rs","byte_start":266921,"byte_end":266931,"line_start":15,"line_end":15,"column_start":23,"column_end":33},"kind":{"Impl":{"id":117}},"from":{"krate":0,"index":6495},"to":{"krate":0,"index":2157}},{"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/error.rs","byte_start":269150,"byte_end":269157,"line_start":101,"line_end":101,"column_start":23,"column_end":30},"kind":{"Impl":{"id":118}},"from":{"krate":0,"index":6505},"to":{"krate":0,"index":2157}},{"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/error.rs","byte_start":270758,"byte_end":270766,"line_start":165,"line_end":165,"column_start":20,"column_end":28},"kind":{"Impl":{"id":119}},"from":{"krate":0,"index":6517},"to":{"krate":0,"index":2157}},{"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/error.rs","byte_start":271903,"byte_end":271909,"line_start":214,"line_end":214,"column_start":20,"column_end":26},"kind":{"Impl":{"id":120}},"from":{"krate":0,"index":6529},"to":{"krate":0,"index":2157}},{"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/function.rs","byte_start":275033,"byte_end":275041,"line_start":68,"line_end":68,"column_start":26,"column_end":34},"kind":{"Impl":{"id":121}},"from":{"krate":0,"index":6539},"to":{"krate":0,"index":2157}},{"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/function.rs","byte_start":275751,"byte_end":275760,"line_start":106,"line_end":106,"column_start":25,"column_end":34},"kind":{"Impl":{"id":122}},"from":{"krate":0,"index":6552},"to":{"krate":2,"index":1669}},{"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/function.rs","byte_start":275969,"byte_end":275978,"line_start":119,"line_end":119,"column_start":26,"column_end":35},"kind":{"Impl":{"id":123}},"from":{"krate":0,"index":6552},"to":{"krate":0,"index":2157}},{"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/item.rs","byte_start":278211,"byte_end":278214,"line_start":17,"line_end":17,"column_start":20,"column_end":23},"kind":{"Impl":{"id":124}},"from":{"krate":0,"index":6562},"to":{"krate":0,"index":2157}},{"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/item.rs","byte_start":279551,"byte_end":279558,"line_start":75,"line_end":75,"column_start":23,"column_end":30},"kind":{"Impl":{"id":125}},"from":{"krate":0,"index":6571},"to":{"krate":0,"index":2157}},{"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/item.rs","byte_start":280662,"byte_end":280672,"line_start":125,"line_end":125,"column_start":26,"column_end":36},"kind":{"Impl":{"id":126}},"from":{"krate":0,"index":6583},"to":{"krate":0,"index":2157}},{"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/item.rs","byte_start":282053,"byte_end":282058,"line_start":185,"line_end":185,"column_start":20,"column_end":25},"kind":{"Impl":{"id":127}},"from":{"krate":0,"index":6595},"to":{"krate":0,"index":2157}},{"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/item.rs","byte_start":283164,"byte_end":283170,"line_start":238,"line_end":238,"column_start":26,"column_end":32},"kind":{"Impl":{"id":128}},"from":{"krate":0,"index":6604},"to":{"krate":0,"index":2157}},{"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/item.rs","byte_start":286455,"byte_end":286462,"line_start":344,"line_end":344,"column_start":26,"column_end":33},"kind":{"Impl":{"id":129}},"from":{"krate":0,"index":6617},"to":{"krate":0,"index":2157}},{"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/item.rs","byte_start":289330,"byte_end":289338,"line_start":443,"line_end":443,"column_start":20,"column_end":28},"kind":{"Impl":{"id":130}},"from":{"krate":0,"index":6629},"to":{"krate":0,"index":2157}},{"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/item.rs","byte_start":290358,"byte_end":290363,"line_start":491,"line_end":491,"column_start":23,"column_end":28},"kind":{"Impl":{"id":131}},"from":{"krate":0,"index":6637},"to":{"krate":0,"index":2157}},{"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/item.rs","byte_start":291591,"byte_end":291597,"line_start":546,"line_end":546,"column_start":23,"column_end":29},"kind":{"Impl":{"id":132}},"from":{"krate":0,"index":6649},"to":{"krate":0,"index":2157}},{"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/item.rs","byte_start":292997,"byte_end":293002,"line_start":599,"line_end":599,"column_start":23,"column_end":28},"kind":{"Impl":{"id":133}},"from":{"krate":0,"index":6661},"to":{"krate":0,"index":2157}},{"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/item.rs","byte_start":293717,"byte_end":293720,"line_start":636,"line_end":636,"column_start":20,"column_end":23},"kind":{"Impl":{"id":134}},"from":{"krate":0,"index":6674},"to":{"krate":0,"index":2157}},{"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/range.rs","byte_start":296459,"byte_end":296464,"line_start":23,"line_end":23,"column_start":20,"column_end":25},"kind":{"Impl":{"id":135}},"from":{"krate":0,"index":1693},"to":{"krate":0,"index":2157}},{"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/range.rs","byte_start":299869,"byte_end":299887,"line_start":138,"line_end":138,"column_start":20,"column_end":38},"kind":{"Impl":{"id":136}},"from":{"krate":0,"index":6706},"to":{"krate":0,"index":2157}},{"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/range.rs","byte_start":303271,"byte_end":303275,"line_start":251,"line_end":251,"column_start":20,"column_end":24},"kind":{"Impl":{"id":137}},"from":{"krate":0,"index":1725},"to":{"krate":0,"index":2157}},{"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/range.rs","byte_start":304341,"byte_end":304350,"line_start":294,"line_end":294,"column_start":23,"column_end":32},"kind":{"Impl":{"id":138}},"from":{"krate":0,"index":1738},"to":{"krate":0,"index":2157}},{"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/range.rs","byte_start":305856,"byte_end":305866,"line_start":354,"line_end":354,"column_start":23,"column_end":33},"kind":{"Impl":{"id":139}},"from":{"krate":0,"index":1757},"to":{"krate":0,"index":2157}},{"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/range.rs","byte_start":307375,"byte_end":307389,"line_start":416,"line_end":416,"column_start":20,"column_end":34},"kind":{"Impl":{"id":140}},"from":{"krate":0,"index":1776},"to":{"krate":0,"index":2157}},{"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/range.rs","byte_start":311832,"byte_end":311841,"line_start":538,"line_end":538,"column_start":30,"column_end":39},"kind":{"Impl":{"id":141}},"from":{"krate":0,"index":6719},"to":{"krate":2,"index":1889}},{"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/range.rs","byte_start":312122,"byte_end":312128,"line_start":552,"line_end":552,"column_start":26,"column_end":32},"kind":{"Impl":{"id":142}},"from":{"krate":0,"index":1791},"to":{"krate":0,"index":2157}},{"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":319177,"byte_end":319188,"line_start":81,"line_end":81,"column_start":23,"column_end":34},"kind":{"Impl":{"id":143}},"from":{"krate":0,"index":6788},"to":{"krate":0,"index":2157}},{"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":322475,"byte_end":322479,"line_start":213,"line_end":213,"column_start":27,"column_end":31},"kind":{"Impl":{"id":144}},"from":{"krate":0,"index":1856},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":324735,"byte_end":324739,"line_start":288,"line_end":288,"column_start":40,"column_end":44},"kind":{"Impl":{"id":145}},"from":{"krate":0,"index":1856},"to":{"krate":2,"index":5040}},{"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":325692,"byte_end":325696,"line_start":326,"line_end":326,"column_start":23,"column_end":27},"kind":{"Impl":{"id":146}},"from":{"krate":0,"index":6831},"to":{"krate":0,"index":2157}},{"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":327733,"byte_end":327738,"line_start":401,"line_end":401,"column_start":23,"column_end":28},"kind":{"Impl":{"id":147}},"from":{"krate":0,"index":6846},"to":{"krate":0,"index":2157}},{"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":330241,"byte_end":330245,"line_start":495,"line_end":495,"column_start":18,"column_end":22},"kind":{"Impl":{"id":148}},"from":{"krate":0,"index":6863},"to":{"krate":2,"index":1959}},{"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":330319,"byte_end":330323,"line_start":501,"line_end":501,"column_start":23,"column_end":27},"kind":{"Impl":{"id":149}},"from":{"krate":0,"index":6863},"to":{"krate":2,"index":4958}},{"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":331904,"byte_end":331909,"line_start":566,"line_end":566,"column_start":26,"column_end":31},"kind":{"Impl":{"id":150}},"from":{"krate":0,"index":6903},"to":{"krate":0,"index":2157}},{"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":334028,"byte_end":334034,"line_start":644,"line_end":644,"column_start":26,"column_end":32},"kind":{"Impl":{"id":151}},"from":{"krate":0,"index":6923},"to":{"krate":0,"index":2157}},{"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":337133,"byte_end":337141,"line_start":755,"line_end":755,"column_start":26,"column_end":34},"kind":{"Impl":{"id":152}},"from":{"krate":0,"index":6943},"to":{"krate":0,"index":2157}},{"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":339230,"byte_end":339239,"line_start":829,"line_end":829,"column_start":26,"column_end":35},"kind":{"Impl":{"id":153}},"from":{"krate":0,"index":6961},"to":{"krate":0,"index":2157}},{"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":342296,"byte_end":342303,"line_start":931,"line_end":931,"column_start":27,"column_end":34},"kind":{"Impl":{"id":154}},"from":{"krate":0,"index":6979},"to":{"krate":0,"index":2157}},{"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":344918,"byte_end":344925,"line_start":1022,"line_end":1022,"column_start":27,"column_end":34},"kind":{"Impl":{"id":155}},"from":{"krate":0,"index":6994},"to":{"krate":0,"index":2157}},{"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":347328,"byte_end":347337,"line_start":1098,"line_end":1098,"column_start":23,"column_end":32},"kind":{"Impl":{"id":156}},"from":{"krate":0,"index":7007},"to":{"krate":0,"index":2157}},{"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/repeat.rs","byte_start":351723,"byte_end":351730,"line_start":1227,"line_end":1227,"column_start":23,"column_end":30},"kind":{"Impl":{"id":157}},"from":{"krate":0,"index":2033},"to":{"krate":0,"index":2157}},{"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/sequence.rs","byte_start":357606,"byte_end":357619,"line_start":36,"line_end":36,"column_start":33,"column_end":46},"kind":{"Impl":{"id":158}},"from":{"krate":0,"index":2071},"to":{"krate":2,"index":1959}},{"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/sequence.rs","byte_start":357767,"byte_end":357780,"line_start":45,"line_end":45,"column_start":12,"column_end":25},"kind":{"Impl":{"id":159}},"from":{"krate":0,"index":2071},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/sequence.rs","byte_start":371301,"byte_end":371305,"line_start":410,"line_end":410,"column_start":28,"column_end":32},"kind":{"Impl":{"id":160}},"from":{"krate":0,"index":7784},"to":{"krate":0,"index":2157}},{"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/sequence.rs","byte_start":372476,"byte_end":372480,"line_start":459,"line_end":459,"column_start":28,"column_end":32},"kind":{"Impl":{"id":161}},"from":{"krate":0,"index":7801},"to":{"krate":0,"index":2157}},{"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/sequence.rs","byte_start":374134,"byte_end":374138,"line_start":530,"line_end":530,"column_start":26,"column_end":30},"kind":{"Impl":{"id":162}},"from":{"krate":0,"index":7842},"to":{"krate":0,"index":2157}},{"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/sequence.rs","byte_start":376726,"byte_end":376737,"line_start":621,"line_end":621,"column_start":26,"column_end":37},"kind":{"Impl":{"id":163}},"from":{"krate":0,"index":7857},"to":{"krate":0,"index":2157}},{"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":167092,"byte_end":167095,"line_start":997,"line_end":997,"column_start":20,"column_end":23},"kind":{"Impl":{"id":164}},"from":{"krate":5,"index":84},"to":{"krate":0,"index":2157}},{"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":167325,"byte_end":167329,"line_start":1007,"line_end":1007,"column_start":22,"column_end":26},"kind":"SuperTrait","from":{"krate":2,"index":1981},"to":{"krate":0,"index":2229}},{"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":168375,"byte_end":168384,"line_start":1042,"line_end":1042,"column_start":20,"column_end":29},"kind":{"Impl":{"id":165}},"from":{"krate":0,"index":7888},"to":{"krate":0,"index":2229}},{"span":{"file_name":"/home/willw/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-3.8.1/src/parser/mod.rs","byte_start":168680,"byte_end":168691,"line_start":1057,"line_end":1057,"column_start":20,"column_end":31},"kind":{"Impl":{"id":166}},"from":{"krate":0,"index":7893},"to":{"krate":0,"index":2229}}]}